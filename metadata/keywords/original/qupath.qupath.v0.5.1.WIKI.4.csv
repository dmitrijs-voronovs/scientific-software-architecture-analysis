id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:9698,Energy Efficiency,green,green,9698," Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packARGB(int, int, int, int). do8BitRangeCheck; public static int do8BitRangeCheck(int v); Clip an input value to be an integer in the range 0-255. Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(float v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(double v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. alpha; public static int alpha(int argb); Extract the 8-bit alpha value from a packed ARGB value. Parameters:; argb - ; Returns:. red; public static int red(int rgb); Extract the 8-bit red value from a packed RGB value. Parameters:; rgb - ; Returns:. green; public static int green(int rgb); Extract the 8-bit green value from a packed RGB value. Parameters:; rgb - ; Returns:. blue; public static int blue(int rgb); Extract the 8-bit blue value from a packed RGB value. Parameters:; rgb - ; Returns:. makeScaledRGB; public static int makeScaledRGB(int rgb,; double scale); Scale the RGB channels for a color by a fixed amount.; ; This is useful for brightening/darkening an input color. Parameters:; rgb - ; scale - ; Returns:. clip255; public static int clip255(double val); Convert a double value to an int, flooring and clipping to the range 0-255. Parameters:; val - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:9723,Energy Efficiency,green,green,9723," Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packARGB(int, int, int, int). do8BitRangeCheck; public static int do8BitRangeCheck(int v); Clip an input value to be an integer in the range 0-255. Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(float v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(double v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. alpha; public static int alpha(int argb); Extract the 8-bit alpha value from a packed ARGB value. Parameters:; argb - ; Returns:. red; public static int red(int rgb); Extract the 8-bit red value from a packed RGB value. Parameters:; rgb - ; Returns:. green; public static int green(int rgb); Extract the 8-bit green value from a packed RGB value. Parameters:; rgb - ; Returns:. blue; public static int blue(int rgb); Extract the 8-bit blue value from a packed RGB value. Parameters:; rgb - ; Returns:. makeScaledRGB; public static int makeScaledRGB(int rgb,; double scale); Scale the RGB channels for a color by a fixed amount.; ; This is useful for brightening/darkening an input color. Parameters:; rgb - ; scale - ; Returns:. clip255; public static int clip255(double val); Convert a double value to an int, flooring and clipping to the range 0-255. Parameters:; val - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:9757,Energy Efficiency,green,green,9757," Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packARGB(int, int, int, int). do8BitRangeCheck; public static int do8BitRangeCheck(int v); Clip an input value to be an integer in the range 0-255. Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(float v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(double v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. alpha; public static int alpha(int argb); Extract the 8-bit alpha value from a packed ARGB value. Parameters:; argb - ; Returns:. red; public static int red(int rgb); Extract the 8-bit red value from a packed RGB value. Parameters:; rgb - ; Returns:. green; public static int green(int rgb); Extract the 8-bit green value from a packed RGB value. Parameters:; rgb - ; Returns:. blue; public static int blue(int rgb); Extract the 8-bit blue value from a packed RGB value. Parameters:; rgb - ; Returns:. makeScaledRGB; public static int makeScaledRGB(int rgb,; double scale); Scale the RGB channels for a color by a fixed amount.; ; This is useful for brightening/darkening an input color. Parameters:; rgb - ; scale - ; Returns:. clip255; public static int clip255(double val); Convert a double value to an int, flooring and clipping to the range 0-255. Parameters:; val - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:449,Modifiability,extend,extends,449,". ColorTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ColorTools. java.lang.Object; qupath.lib.common.ColorTools. public final class ColorTools; extends Object; Static functions to help work with RGB(A) colors using packed ints. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Integer; BLACK. Packed int representing black. static final Integer; BLUE. Packed int representing blue. static final Integer; CYAN. Packed int representing cyan. static final Integer; GREEN. Packed int representing green. static final Integer; MAGENTA. Packed int representing magenta. static final Integer; MASK_ALPHA. Mask for use when extracting the alpha component from a packed ARGB int value. static final Integer; MASK_BLUE. Mask for use when extracting the blue component from a packed (A)RGB int value. static final Integer; MASK_GREEN. Mask for use when extracting the green component from a packed (A)RGB int value. static final Integer; MASK_RED. Mask for use when extracting the red component from a packed (A)RGB int value. static final Integer; RED. Packed int representing red. static final Integer; WHITE. Packed int representing white. static final Integer; YELLOW. Packed int representing yellow. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static int; alpha(int argb). Extract the 8-bit alpha value from a packed ARGB value. static int; blue(int rgb). Extract the 8-bit blue value from a packed RGB value. static int; clip255(double val). Convert a double value to an int, flooring and clipping to the range 0-255. static int; do8BitRangeCheck(double v). Clip an input value ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3826,Modifiability,inherit,inherited,3826,"int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3900,Security,hash,hashCode,3900,"input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green compo",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:5406,Usability,simpl,simply,5406,"a. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green component from a packed (A)RGB int value. MASK_BLUE; public static final Integer MASK_BLUE; Mask for use when extracting the blue component from a packed (A)RGB int value. Method Details. makeRGB; @Deprecated; public static int makeRGB(int r,; int g,; int b); Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. Make a packed RGB value from specified input values.; ; Input r, g and b should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are.; ; The alpha value is 255. Parameters:; r - ; g - ; b - ; Returns:. packRGB; public static int packRGB(int r,; int g,; int b); Make a packed RGB value from specified input values.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255; only the lower 8 bits are used. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedRGB(int, int, int). unpackRGB; public static int[] unpackRGB(int rgb); Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. Parameters:; rgb - ; Returns:; Since:; v0.4.0. unpackRGB; public static int[] unpackRGB(int rgb,; int[] array); Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Parameters:; rgb - ; array - optional preallocated input array; Returns:; the red, green and blue values in array if provided and long enough, ; otherwise a new ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:7886,Usability,simpl,simply,7886,"; the alpha, red, green and blue values in array if provided and long enough, ; otherwise a new int array storing the values; Since:; v0.4.0. packClippedRGB; public static int packClippedRGB(int r,; int g,; int b); Make a packed RGB value from specified input values, clipping to the range 0-255.; This is equivalent to an ARGB value with alpha set to 255, following Java Color.; ; Input r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value. Parameters:; r - ; g - ; b - ; Returns:; packed ARGB value; // * @see #packRGB(int, int, int). makeRGBA; @Deprecated; public static int makeRGBA(int r,; int g,; int b,; int a); Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. Make a packed ARGB value from specified input values.; ; Input r, g, b and a should be in the range 0-255 - but no checking is applied.; Rather, the input values are simply shifted as they are. Parameters:; r - ; g - ; b - ; a - ; Returns:; See Also:. packARGB(int, int, int, int). packARGB; public static int packARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values.; ; Input a, r, g, and b should be in the range 0-255; only the lower 8 bits are used.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ColorTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:1061,Availability,toler,tolerance,1061,"(QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:1137,Availability,toler,tolerance,1137,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min,; int max). Clip a value to be within a specific range. static NumberFormat; createFormatter(",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:2607,Availability,avail,available,2607,"ankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min,; int max). Clip a value to be within a specific range. static NumberFormat; createFormatter(int nDecimalPlaces). Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown). static boolean; deleteFile(File fileToDelete,; boolean preferTrash). Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. static String; escapeFilePath(String path). Escape backslashes in an absolute file path - useful when scripting. static long; estimateAvailableMemory(). Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. static long; estimateUsedMemory(). Estimate the current used memory. static String; formatNumber(double value,; int maxDecimalPlaces). Format a value with a maximum number of decimal places, using the default Locale. static String; formatNumber(Locale locale,; double value,; int maxDecimalPlaces). Format a value with a maximum number of decimal places, using a specified Locale. static String; generateDistinctName(String base,; Collection<String> existingNames). Generate a name that is distinct from the names in an existing collection, while being based on a provided name. static Optional<String>; getExtension(File file). Get filename extension. static Optional<String>; getExtension(String name). Get extension from a filename. static String; getNameWithoutExtension(File file). Get the file name with extension removed. static String; getNameWithoutExtension(String name). Deprecated.; v0.5.0 in favor of stripExtension(String), which does",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:8226,Availability,avail,available,8226,"R; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be parsed from getVersion(); See Also:. getVersion(). getPackageVersion; public static String getPackageVersion(Class<?> cls); Try to determine the version of a jar containing a specified class.; This first checks the implementation version in the package, then looks for a VERSION ; file stored as a resource. Parameters:; cls - class used to identify the package; Returns:; the version, if available, or null if no version is known. getExtension; public static Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as th",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:12871,Availability,toler,tolerance,12871,"rts (or 'dots').; Examples include ome.tif and tar.gz, which can be problematic with some file choosers. Parameters:; ext - ; Returns:. blankString; public static boolean blankString(String s,; boolean trim); Check if a string is blank, i.e. it is null or its length is 0. Parameters:; s - ; trim - If true, any string will be trimmed before its length checked.; Returns:; True if the string is null or empty. escapeFilePath; public static String escapeFilePath(String path); Escape backslashes in an absolute file path - useful when scripting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and e",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:12947,Availability,toler,tolerance,12947,"rts (or 'dots').; Examples include ome.tif and tar.gz, which can be problematic with some file choosers. Parameters:; ext - ; Returns:. blankString; public static boolean blankString(String s,; boolean trim); Check if a string is blank, i.e. it is null or its length is 0. Parameters:; s - ; trim - If true, any string will be trimmed before its length checked.; Returns:; True if the string is null or empty. escapeFilePath; public static String escapeFilePath(String path); Escape backslashes in an absolute file path - useful when scripting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and e",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13256,Availability,robust,robust,13256,"e string is null or empty. escapeFilePath; public static String escapeFilePath(String path); Escape backslashes in an absolute file path - useful when scripting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13452,Availability,toler,tolerance,13452,"pting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13490,Availability,toler,tolerance,13490,"(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this metho",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:21211,Availability,avail,available,21211,"ate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitti",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:21552,Energy Efficiency,allocate,allocated,21552,"bly derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorti",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9845,Integrability,depend,dependent,9845,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:15115,Integrability,depend,dependent,15115,"ring path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to string, with a specified number of decimal places.; Trailing zeros are not included. Parameters:; locale - ; array - ; delimiter - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; int nDecimalPlaces); Convert a double array to a String using a space as a delimiter. Parameters:; locale - ; array - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Object[] array,; String delimiter); Convert a String array to a single string, with a specified delimiter string. Parameters:; array - ; delimiter - ; Returns:. splitLines; public static String[] splitLines(String s); Split new lines (in a cross-platform way... i.e. not with s.split(""\n""), which is asking for trouble). Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19267,Integrability,depend,dependent,19267,"ream); throws IOException; Read the entire contents of an InputStream into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; stream - ; Returns:; Throws:; IOException. checkExtensions; public static boolean checkExtensions(String path,; String... extensions); Check whether a path ends with one of a number of specified extensions (case insensitive). Parameters:; path - ; extensions - ; Returns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while be",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:20493,Integrability,depend,dependent,20493,"adURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:457,Modifiability,extend,extends,457,". GeneralTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:6760,Modifiability,inherit,inherited,6760,"pplied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:10108,Modifiability,portab,portability,10108,"is method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension(String); getExtension(File). getNameWithoutExtension; @Deprecated; public static String getNameWithoutExtension(String name); Deprecated.; v0.5.0 in favor of stripExtension(String), which does the same thi",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:8614,Performance,perform,performed,8614,"ion of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be parsed from getVersion(); See Also:. getVersion(). getPackageVersion; public static String getPackageVersion(Class<?> cls); Try to determine the version of a jar containing a specified class.; This first checks the implementation version in the package, then looks for a VERSION ; file stored as a resource. Parameters:; cls - class used to identify the package; Returns:; the version, if available, or null if no version is known. getExtension; public static Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String inva",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9238,Performance,perform,performed,9238,"atic Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:14278,Performance,perform,perform,14278,"rst value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to stri",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:17247,Performance,perform,performed,17247,"iling zeros are not shown).; ; Important note: this always formats as 1.234 rather than 1,234 - regardless of Locale.; Consequently its results are more predictable... but may not be consistent with other number formatting on ; the specified platform. Parameters:; nDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using the default Locale. Parameters:; value - ; maxDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(Locale locale,; double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using a specified Locale. Parameters:; locale - ; value - ; maxDecimalPlaces - ; Returns:. parseArgStringValues; public static Map<String,String> parseArgStringValues(String s); Parse the contents of a JSON String.; ; Note that this is pretty unsophisticated... also, no localization is performed (using Java's Locales, for example) -; so that decimal values should be provided in the form 1.234 (and not e.g. 1,234). Parameters:; s - ; Returns:. micrometerSymbol; public static final String micrometerSymbol(); Get a string to represent um (but with the proper 'mu' symbol). Returns:. readFileAsString; public static String readFileAsString(String path); throws IOException; Read the entire contents of a file given by the specified path into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; path - ; Returns:; Throws:; IOException. readFileAsString; public static String readFileAsString(File file); throws IOException; Read the entire contents of a file into a single String.; ; Note that from QuPath v0.3 this assumes UTF8 encoding. ; Previously, platform-specific encoding was assumed. Parameters:; file - ; Returns:; Throws:; IOException. readInputStreamAsString; public static String readInputStreamAsString(InputStream stream)",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:5197,Safety,timeout,timeoutMillis,5197,"Extension(String ext). Returns true for file extensions containing multiple parts (or 'dots'). static boolean; isValidFilename(String name). Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. static boolean; isWindows(). Return true if running on Windows. static final String; micrometerSymbol(). Get a string to represent um (but with the proper 'mu' symbol). static int; numNaNs(double[] vals). Count the number of NaN values in an array. static Map<String,String>; parseArgStringValues(String s). Parse the contents of a JSON String. static String; readFileAsString(File file). Read the entire contents of a file into a single String. static String; readFileAsString(String path). Read the entire contents of a file given by the specified path into a single String. static String; readInputStreamAsString(InputStream stream). Read the entire contents of an InputStream into a single String. static String; readURLAsString(URL url,; int timeoutMillis). Read URL as String, with specified timeout in milliseconds. static String; replaceCurlyQuotes(String text). Replace different kinds of 'curly quote' in a String with straight quotes. static String; replaceGremlins(String text,; CharSequence replacement). Replace non-printable characters from a String with a specified replacement (may be null). static Comparator<String>; smartStringComparator(). Comparator for smart String sorting. static <T> void; smartStringSort(Collection<T> collection). Smart-sort a collection using the Object.toString() method applied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. st",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:5248,Safety,timeout,timeout,5248,"ining multiple parts (or 'dots'). static boolean; isValidFilename(String name). Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. static boolean; isWindows(). Return true if running on Windows. static final String; micrometerSymbol(). Get a string to represent um (but with the proper 'mu' symbol). static int; numNaNs(double[] vals). Count the number of NaN values in an array. static Map<String,String>; parseArgStringValues(String s). Parse the contents of a JSON String. static String; readFileAsString(File file). Read the entire contents of a file into a single String. static String; readFileAsString(String path). Read the entire contents of a file given by the specified path into a single String. static String; readInputStreamAsString(InputStream stream). Read the entire contents of an InputStream into a single String. static String; readURLAsString(URL url,; int timeoutMillis). Read URL as String, with specified timeout in milliseconds. static String; replaceCurlyQuotes(String text). Replace different kinds of 'curly quote' in a String with straight quotes. static String; replaceGremlins(String text,; CharSequence replacement). Replace non-printable characters from a String with a specified replacement (may be null). static Comparator<String>; smartStringComparator(). Comparator for smart String sorting. static <T> void; smartStringSort(Collection<T> collection). Smart-sort a collection using the Object.toString() method applied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip c",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:16439,Safety,predict,predictable,16439,"limiter - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; int nDecimalPlaces); Convert a double array to a String using a space as a delimiter. Parameters:; locale - ; array - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Object[] array,; String delimiter); Convert a String array to a single string, with a specified delimiter string. Parameters:; array - ; delimiter - ; Returns:. splitLines; public static String[] splitLines(String s); Split new lines (in a cross-platform way... i.e. not with s.split(""\n""), which is asking for trouble). Parameters:; s - ; Returns:. createFormatter; public static NumberFormat createFormatter(int nDecimalPlaces); Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown).; ; Important note: this always formats as 1.234 rather than 1,234 - regardless of Locale.; Consequently its results are more predictable... but may not be consistent with other number formatting on ; the specified platform. Parameters:; nDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using the default Locale. Parameters:; value - ; maxDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(Locale locale,; double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using a specified Locale. Parameters:; locale - ; value - ; maxDecimalPlaces - ; Returns:. parseArgStringValues; public static Map<String,String> parseArgStringValues(String s); Parse the contents of a JSON String.; ; Note that this is pretty unsophisticated... also, no localization is performed (using Java's Locales, for example) -; so that decimal values should be provided in the form 1.234 (and not e.g. 1,234). Parameters:; s - ; Returns:. micrometerSymbol; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19533,Safety,timeout,timeoutMillis,19533,"kExtensions; public static boolean checkExtensions(String path,; String... extensions); Check whether a path ends with one of a number of specified extensions (case insensitive). Parameters:; path - ; extensions - ; Returns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; rec",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19604,Safety,timeout,timeout,19604,"kExtensions; public static boolean checkExtensions(String path,; String... extensions); Check whether a path ends with one of a number of specified extensions (case insensitive). Parameters:; path - ; extensions - ; Returns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; rec",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19750,Safety,timeout,timeoutMillis,19750,"eturns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; fo",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:21081,Safety,avoid,avoided,21081,"possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSo",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:6834,Security,hash,hashCode,6834,"ollection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be pars",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9693,Testability,test,test,9693,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9824,Testability,test,test,9824,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9706,Usability,simpl,simple,9706,"nsion is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13648,Usability,simpl,simple,13648,"Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxExc",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:14288,Usability,simpl,simple,14288,"rst value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this method will ; only encode the Query part of the URI (i.e. Fragments, if present, will be ignored ).; ; E.g. ""https://host?query=first|second"" will return ""https://host?query%3Dfirst%7Csecond"". Parameters:; path - ; Returns:; encodedURI; Throws:; URISyntaxException; UnsupportedEncodingException; MalformedURLException. toPath; public static Path toPath(URI uri); Try to identify a Path from a URI, dropping any query or fragment elements.; ; This returns the Path if successful and null otherwise (e.g. if the URI does not correspond to a file). ; There is no check whether the Path exists, and support for an authority is platform-dependent. Parameters:; uri - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces); Convert a double array to stri",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:22344,Usability,intuit,intuitive,22344," attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorting would leave the list unchanged.; ; Note: Currently this method considers only positive integer values, treating characters such as ; '+', '-', ',', '.' and 'e' as distinct elements of text. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); extractor - function used to convert each element of the collection to a String representation. smartStringComparator; public static Comparator<String> smartStringComparator(); Comparator for smart String sorting.; Note: This comparator is very inefficient. Where possible smartStringSort(Collection, Function) should ; be used instead. Returns:; a String comparator that parses integers from within the String so they may be compared by value. zapGremlins; public static String zapGremlins(String text); Remove non-prin",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:22369,Usability,simpl,simple,22369," attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorting would leave the list unchanged.; ; Note: Currently this method considers only positive integer values, treating characters such as ; '+', '-', ',', '.' and 'e' as distinct elements of text. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); extractor - function used to convert each element of the collection to a String representation. smartStringComparator; public static Comparator<String> smartStringComparator(); Comparator for smart String sorting.; Note: This comparator is very inefficient. Where possible smartStringSort(Collection, Function) should ; be used instead. Returns:; a String comparator that parses integers from within the String so they may be compared by value. zapGremlins; public static String zapGremlins(String text); Remove non-prin",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:22461,Usability,simpl,simple,22461,"ory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitting the String into lists of numeric and non-numeric parts,; and comparing corresponding elements separately.; This can sometimes give more intuitive results than a simple String sort, which would treat ""10"" as ; 'less than' ""2"".; ; For example, applying a simple sort to the list [""a1"", ""a2"", ""a10""] will result in ; [""a1"", ""a10"", ""a2]. Smart-sorting would leave the list unchanged.; ; Note: Currently this method considers only positive integer values, treating characters such as ; '+', '-', ',', '.' and 'e' as distinct elements of text. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); extractor - function used to convert each element of the collection to a String representation. smartStringComparator; public static Comparator<String> smartStringComparator(); Comparator for smart String sorting.; Note: This comparator is very inefficient. Where possible smartStringSort(Collection, Function) should ; be used instead. Returns:; a String comparator that parses integers from within the String so they may be compared by value. zapGremlins; public static String zapGremlins(String text); Remove non-printable characters from a String. Parameters:; text - ; Returns:; the modified String, or the original if no changes",MatchSource.WIKI,javadoc/docs/qupath/lib/common/GeneralTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:749,Integrability,message,message,749,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:765,Integrability,message,message,765,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:884,Integrability,message,message,884,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:900,Integrability,message,message,900,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:995,Integrability,message,message,995,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1011,Integrability,message,message,1011,"0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many time",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1350,Integrability,message,message,1350," java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ;",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1366,Integrability,message,message,1366," java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ;",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1539,Integrability,message,messages,1539," Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1618,Integrability,message,message,1618,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1652,Integrability,message,message,1652,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1795,Integrability,message,message,1795,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1811,Integrability,message,message,1811,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1981,Integrability,message,messages,1981,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2050,Integrability,message,message,2050,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2084,Integrability,message,message,2084,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2229,Integrability,message,message,2229,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2245,Integrability,message,message,2245,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2413,Integrability,message,messages,2413,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2482,Integrability,message,message,2482,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2516,Integrability,message,message,2516,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:435,Modifiability,extend,extends,435,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1051,Modifiability,inherit,inherited,1051,"rowser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1497,Safety,avoid,avoid,1497," Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1939,Safety,avoid,avoid,1939,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2371,Safety,avoid,avoid,2371,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1125,Security,hash,hashCode,1125,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:468,Testability,log,logging,468,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:708,Testability,log,logOnce,708,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:733,Testability,log,logger,733,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:813,Testability,log,logOnce,813,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:838,Testability,log,logger,838,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:979,Testability,log,logger,979,". LogTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the meth",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1248,Testability,log,logOnce,1248,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1279,Testability,log,logOnce,1279,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1304,Testability,log,logger,1304,"Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1597,Testability,log,logger,1597,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1664,Testability,log,logged,1664,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1714,Testability,log,logged,1714,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1723,Testability,log,logOnce,1723,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1754,Testability,log,logOnce,1754,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1779,Testability,log,logger,1779,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2039,Testability,log,logger,2039,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2096,Testability,log,logged,2096,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2146,Testability,log,logged,2146,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2213,Testability,log,logger,2213,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2471,Testability,log,logger,2471,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2528,Testability,log,logged,2528,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:2578,Testability,log,logged,2578,");  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). warnOnce; public static boolean warnOnce(org.slf4j.Logger logger,; String message); Log a message once at the WARN level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/LogTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html:827,Availability,checkpoint,checkpoint,827,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,javadoc/docs/qupath/lib/common/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html:589,Testability,log,logging,589,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,javadoc/docs/qupath/lib/common/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html:423,Modifiability,extend,extends,423,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Prefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html:913,Modifiability,inherit,inherited,913,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Prefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html:987,Security,hash,hashCode,987,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Prefs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:2061,Integrability,interface,interface,2061,"s ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance multithreading with memory use.; The default value is ForkJoinPool.getCommonPoolParallelism(). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:447,Modifiability,extend,extends,447,". ThreadTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note th",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:1249,Modifiability,inherit,inherited,1249," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Othe",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:1323,Security,hash,hashCode,1323,"kage qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance mul",MatchSource.WIKI,javadoc/docs/qupath/lib/common/ThreadTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:547,Availability,checkpoint,checkpoint,547,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:719,Availability,checkpoint,checkpoint,719,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:768,Availability,checkpoint,checkpoint,768,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:1015,Availability,checkpoint,checkpoint,1015,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:1096,Availability,checkpoint,checkpoint,1096,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:504,Modifiability,extend,extends,504,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:836,Modifiability,inherit,inherited,836,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:910,Security,hash,hashCode,910,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:971,Availability,checkpoint,checkpoint,971,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:989,Availability,checkpoint,checkpoint,989,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1028,Availability,checkpoint,checkpoint,1028,"wser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable)",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1047,Availability,checkpoint,checkpoint,1047,"wser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable)",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1295,Availability,checkpoint,checkpointAndRun,1295,"RCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1611,Availability,checkpoint,checkpoint,1611,"y be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(St",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1876,Availability,checkpoint,checkpoint,1876,"tln(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). R",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1903,Availability,checkpoint,checkpoint,1903,"or individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings i",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1943,Availability,checkpoint,checkpoint,1943,"ew Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Repor",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1981,Availability,checkpoint,checkpoint,1981,"eckpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2025,Availability,checkpoint,checkpointAndRun,2025,"(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start().",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2071,Availability,checkpoint,checkpoint,2071,"tem.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2155,Availability,checkpoint,checkpointAndRun,2155,"y run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint wit",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2215,Availability,checkpoint,checkpoint,2215,"the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2277,Availability,checkpoint,checkpointAndRun,2277,"ndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in t",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2355,Availability,checkpoint,checkpoint,2355,"s(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optional",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2493,Availability,checkpoint,checkpoints,2493,"ummary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a sn",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3070,Availability,checkpoint,checkpoint,3070,"checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3162,Availability,checkpoint,checkpoint,3162,"tAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3276,Availability,checkpoint,checkpoints,3276,"tring name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3402,Availability,checkpoint,checkpoints,3402,"ions times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first ch",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3829,Availability,checkpoint,checkpoint,3829,"timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint w",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3980,Availability,checkpoint,checkpoint,3980,"anoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4138,Availability,checkpoint,checkpoint,4138,"t the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4261,Availability,checkpoint,checkpoint,4261,"Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4414,Availability,checkpoint,checkpoint,4414,"summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4464,Availability,checkpoint,checkpoint,4464,"s. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; n",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4648,Availability,checkpoint,checkpoint,4648,"ait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; Unsupp",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4668,Availability,checkpoint,checkpointAndRun,4668,"rows UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAn",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4700,Availability,checkpoint,checkpointAndRun,4700,"rows UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAn",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4784,Availability,checkpoint,checkpoint,4784,"rows UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAn",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4876,Availability,checkpoint,checkpoint,4876,"omatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; T",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4996,Availability,checkpoint,checkpoint,4996,"omatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; T",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5175,Availability,checkpoint,checkpointAndRun,5175,"point with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name o",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5207,Availability,checkpoint,checkpointAndRun,5207,"point with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name o",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5305,Availability,checkpoint,checkpoint,5305,"point with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name o",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5375,Availability,checkpoint,checkpoint,5375,"ameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; R",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5495,Availability,checkpoint,checkpoint,5495,"ameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; R",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5559,Availability,checkpoint,checkpoint,5559,"tarted; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationExceptio",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5719,Availability,checkpoint,checkpointAndRun,5719,"tely run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); thr",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5751,Availability,checkpoint,checkpointAndRun,5751,"tely run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); thr",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5867,Availability,checkpoint,checkpoint,5867,"tely run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); thr",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6064,Availability,checkpoint,checkpoint,6064,"e Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws U",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6207,Availability,checkpoint,checkpoint,6207,"e Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws U",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6272,Availability,checkpoint,checkpoint,6272,"made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanose",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6545,Availability,checkpoint,checkpoint,6545,"to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6571,Availability,checkpoint,checkpoint,6571,"to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6636,Availability,checkpoint,checkpoint,6636,"to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6774,Availability,checkpoint,checkpoint,6774,"ationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheck",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6800,Availability,checkpoint,checkpoint,6800,"ationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheck",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6876,Availability,checkpoint,checkpoint,6876,"ationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheck",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6944,Availability,checkpoint,checkpoint,6944,"d to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:7901,Availability,checkpoint,checkpoints,7901,"h the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the c",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8012,Availability,checkpoint,checkpoint,8012,"generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8192,Availability,checkpoint,checkpoints,8192,"topped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation of the Timeit's status. Overrides:; toString in class Object. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8303,Availability,checkpoint,checkpoint,8303,"topped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation of the Timeit's status. Overrides:; toString in class Object. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8889,Availability,checkpoint,checkpoints,8889,"topped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation of the Timeit's status. Overrides:; toString in class Object. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:427,Modifiability,extend,extends,427,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3548,Modifiability,inherit,inherited,3548," of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; Unsu",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3622,Security,hash,hashCode,3622,"[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been start",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:637,Usability,simpl,simple,637,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:7977,Usability,simpl,simply,7977,"generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8268,Usability,simpl,simply,8268,"topped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation of the Timeit's status. Overrides:; toString in class Object. main; public static void main(String[] args). ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Timeit.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:622,Deployability,patch,patch,622,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:685,Deployability,release,release,685,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:753,Deployability,patch,patch-suffix,753,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:1447,Deployability,patch,patch,1447,"Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:1869,Deployability,patch,patch,1869,"urrently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATO",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2022,Deployability,release,release,2022,"ehavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including an",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2832,Deployability,patch,patch,2832,".0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(S",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:3296,Deployability,patch,patch,3296,"emantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Thro",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:3476,Deployability,release,release,3476," getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). S",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4025,Deployability,patch,patch,4025,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4438,Integrability,interface,interface,4438,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:481,Modifiability,extend,extends,481,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2356,Modifiability,inherit,inherited,2356,"l Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getS",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:885,Performance,perform,performed,885,". Version (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Version. java.lang.Object; qupath.lib.common.Version. All Implemented Interfaces:; Comparable<Version>. public class Version; extends Object; implements Comparable<Version>; Helper class for working with semantic versioning.; ; This should be in the form major.minor.patch.; An optional suffix is also permitted to indicate a pre-release, alpha, beta or milestone version,; in the form major.minor.patch-suffix, where the suffix may contain any alphanumeric characters or periods.; ; Implementation note: No checking is currently performed to ensure any suffix conforms to semantic ; versioning standards - however this behavior may change. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; numb",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2046,Security,hash,hashCode,2046," Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any u",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4469,Security,hash,hashCode,4469,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4490,Security,hash,hashCode,4490,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4514,Security,hash,hashCode,4514,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/common/Version.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:1460,Deployability,update,update,1460," Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the Chann",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:5502,Deployability,update,updateRGBAdditive,5502,"ll; if no method is relevant. float; getMinAllowed(). Get the min allowed display value. float; getMinDisplay(). Get the min display value. String; getName(). Get the channel name. int[]; getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to display all the pixels of an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). Get the RGB value that would be used to display a particular pixel. String; getValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a pixel's value. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Method Details. getName; String getName(); Get the channel name. This may also be returned by the toString() method. Returns:. getMinDisplay; float getMinDisplay(); Get the min display value.; This is used to control the brightness/contrast when painting. Returns:. getMaxDisplay; float getMaxDisplay(); Get the max display value.; This is used to control the brightness/contrast when painting. Returns:. getMinAllowed; float getMinAllowed(); Get the min allowed display value.; This is only a hint. Returns:. getMaxAllowed; float getMaxAllowed(); Get the max allowed display value.; This is only a hint. Returns:. isAdditive; boolean isAdditive(); Returns tr",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:5689,Deployability,update,updateRGBAdditive,5689,"(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to display all the pixels of an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). Get the RGB value that would be used to display a particular pixel. String; getValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a pixel's value. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Method Details. getName; String getName(); Get the channel name. This may also be returned by the toString() method. Returns:. getMinDisplay; float getMinDisplay(); Get the min display value.; This is used to control the brightness/contrast when painting. Returns:. getMaxDisplay; float getMaxDisplay(); Get the max display value.; This is used to control the brightness/contrast when painting. Returns:. getMinAllowed; float getMinAllowed(); Get the min allowed display value.; This is only a hint. Returns:. getMaxAllowed; float getMaxAllowed(); Get the max allowed display value.; This is only a hint. Returns:. isAdditive; boolean isAdditive(); Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:7606,Deployability,update,updateRGBAdditive,7606," with others. Returns:. isBrightnessContrastRescaled; boolean isBrightnessContrastRescaled(); Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Returns:. getValueAsString; String getValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Parameters:; img - ; x - ; y - ; Returns:. getRGB; int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Get the RGB value that would be used to display a particular pixel. Parameters:; img - ; x - ; y - ; mode - ; Returns:. getRGB; int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Get the RGB values that would be used to display all the pixels of an image. Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Update an existing pixel (packed RGB) additively using the color used to display a specified one. Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. updateRGBAdditive; void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Parameters:; img - ; rgb - ; mode - . doesSomething; boolean doesSomething(); Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. getColor; Integer getColor(); Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. getMethod; default ColorTransformer.Colo",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:7629,Deployability,update,updateRGBAdditive,7629," with others. Returns:. isBrightnessContrastRescaled; boolean isBrightnessContrastRescaled(); Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Returns:. getValueAsString; String getValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Parameters:; img - ; x - ; y - ; Returns:. getRGB; int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Get the RGB value that would be used to display a particular pixel. Parameters:; img - ; x - ; y - ; mode - ; Returns:. getRGB; int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Get the RGB values that would be used to display all the pixels of an image. Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Update an existing pixel (packed RGB) additively using the color used to display a specified one. Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. updateRGBAdditive; void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Parameters:; img - ; rgb - ; mode - . doesSomething; boolean doesSomething(); Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. getColor; Integer getColor(); Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. getMethod; default ColorTransformer.Colo",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:7877,Deployability,update,updateRGBAdditive,7877,"evels is applied, false if the full display range is used. Returns:. getValueAsString; String getValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Parameters:; img - ; x - ; y - ; Returns:. getRGB; int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Get the RGB value that would be used to display a particular pixel. Parameters:; img - ; x - ; y - ; mode - ; Returns:. getRGB; int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Get the RGB values that would be used to display all the pixels of an image. Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Update an existing pixel (packed RGB) additively using the color used to display a specified one. Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. updateRGBAdditive; void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Parameters:; img - ; rgb - ; mode - . doesSomething; boolean doesSomething(); Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. getColor; Integer getColor(); Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. getMethod; default ColorTransformer.ColorTransformMethod getMethod(); Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:7901,Deployability,update,updateRGBAdditive,7901,"evels is applied, false if the full display range is used. Returns:. getValueAsString; String getValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Parameters:; img - ; x - ; y - ; Returns:. getRGB; int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Get the RGB value that would be used to display a particular pixel. Parameters:; img - ; x - ; y - ; mode - ; Returns:. getRGB; int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Get the RGB values that would be used to display all the pixels of an image. Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Update an existing pixel (packed RGB) additively using the color used to display a specified one. Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. updateRGBAdditive; void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Parameters:; img - ; rgb - ; mode - . doesSomething; boolean doesSomething(); Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. getColor; Integer getColor(); Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. getMethod; default ColorTransformer.ColorTransformMethod getMethod(); Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:835,Energy Efficiency,green,green,835,". ChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo. All Known Subinterfaces:; ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an exi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:557,Integrability,interface,interface,557,". ChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo. All Known Subinterfaces:; ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface ChannelDisplayInfo; Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). This applies not only to the 'default' channels in an image -; e.g. red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an exi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3306,Integrability,depend,depending,3306,"ead from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3846,Integrability,interface,interface,3846,"the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; getMaxAllowed(). Get the max allowed display value. float; getMaxDisplay(). Get the max display value. default ColorTransformer.ColorTransformMethod; getMethod(). Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. float; getMinAllowed(). Get the min allowed display value. float; getMinDisplay(). Get the min display value. String; getName(). Get the channel name. int[]; getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to displa",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3914,Integrability,interface,interface,3914,"ds supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; getMaxAllowed(). Get the max allowed display value. float; getMaxDisplay(). Get the max display value. default ColorTransformer.ColorTransformMethod; getMethod(). Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. float; getMinAllowed(). Get the min allowed display value. float; getMinDisplay(). Get the min display value. String; getName(). Get the channel name. int[]; getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to display all the pixels of an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). G",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2251,Performance,cache,cache,2251," channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2791,Performance,optimiz,optimized,2791,"dually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:1888,Usability,simpl,simplify,1888," red, green and blue for an RGB image - but also to 'derived' channels computed; by a transformation, e.g. color deconvolution.; ; The primary uses are:; ; to extract floating point pixel values for the channel from a BufferedImage; (either directly, or via some color transformation that may involve; more than one channel/band from the BufferedImage); to generate RGB pixel values suitable for visualizing the raw channel values; extracted above, including the storage of any lookup tables required; to store min/max display values, which influence the lookup table mapping to RGB; (i.e. to store brightness/contrast values); to update an existing RGB value, to facilitate creating composite images that depict; the values of multiple channels in a single, merged visualization; . As such, its uses lie somewhere between Java's SampleModel and ColorModel classes.; ; Its reason for existing is that sometimes we need to be able to adjust the display of channels; individually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:2840,Usability,simpl,simplest,2840,"dually and to create merges - particularly in the case of fluorescence images - but; to simplify whole slide image support we need to be able to do this on-the-fly.; Switching the ColorModel for an existing BufferedImage is somewhat awkward, and when caching; image tiles we want to be able to keep the original ColorModels intact - otherwise ColorModels; for recently-seen tiles might be different from the ColorModels of tiles that have been in the cache; for longer, even though they were read from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1561,Deployability,update,updateRGBAdditive,1561,"isplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Parameters:; minDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1580,Deployability,update,updateRGBAdditive,1580,"isplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Parameters:; minDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:559,Integrability,interface,interface,559,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:605,Integrability,interface,interface,605,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:699,Integrability,interface,interface,699,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:799,Integrability,interface,interfaces,799,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:825,Integrability,interface,interface,825,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1331,Integrability,interface,interface,1331,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:664,Modifiability,extend,extends,664,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:810,Modifiability,inherit,inherited,810,". ChannelDisplayInfo.ModifiableChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a g",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1316,Modifiability,inherit,inherited,1316,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:888,Integrability,interface,interfaces,888,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:635,Modifiability,extend,extends,635,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:899,Modifiability,inherit,inherited,899,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:952,Modifiability,extend,extends,952,". ChannelDisplayMode (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.display; Enum Class ChannelDisplayMode. java.lang.Object; java.lang.Enum<ChannelDisplayMode>; qupath.lib.display.ChannelDisplayMode. All Implemented Interfaces:; Serializable, Comparable<ChannelDisplayMode>, Constable. public enum ChannelDisplayMode; extends Enum<ChannelDisplayMode>; Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1689,Modifiability,inherit,inherited,1689,"annel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1852,Modifiability,inherit,inherited,1852,"ass Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ChannelDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier use",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1800,Security,hash,hashCode,1800," Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ChannelDisplayMode valueOf(String name); Returns the enum constant of this ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4521,Deployability,update,updateRGBAdditive,4521,"e. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4708,Deployability,update,updateRGBAdditive,4708,"ayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,;",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:5198,Deployability,update,updateRGBAdditive,5198,"t the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected Co",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10035,Deployability,update,updateRGBAdditive,10035,"ld be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible r",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10066,Deployability,update,updateRGBAdditive,10066,"ld be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible r",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10394,Deployability,update,updateRGBAdditive,10394,"rface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public b",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13694,Deployability,update,updateRGBAdditive,13694,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13724,Deployability,update,updateRGBAdditive,13724,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13982,Deployability,update,updateRGBAdditive,13982,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6489,Energy Efficiency,green,green,6489,"loat maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayIn",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:1245,Integrability,interface,interfaces,1245,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:1271,Integrability,interface,interface,1271,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4052,Integrability,depend,dependent,4052,"f an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). Get the RGB value that would be used to display a particular pixel. float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. String; getValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a pixel's value. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherite",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:5048,Integrability,interface,interface,5048,"hey are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the c",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6005,Integrability,interface,interface,6005,"yAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDis",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6634,Integrability,interface,interface,6634,"lowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image wit",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6975,Integrability,interface,interface,6975," public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color informati",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:7466,Integrability,interface,interface,7466,"55); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed v",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:7775,Integrability,interface,interface,7775,"; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,;",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8075,Integrability,interface,interface,8075,"x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Descripti",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8360,Integrability,interface,interface,8360,"ues; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsStrin",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8502,Integrability,depend,dependent,8502,"Info; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image with no transformations of any kind applied (e.g. brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a p",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9111,Integrability,interface,interface,9111,"o; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9235,Integrability,interface,interface,9235,"ce, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using t",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9426,Integrability,interface,interface,9426,"leChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditiv",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9641,Integrability,interface,interface,9641," change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxA",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9824,Integrability,interface,interface,9824,"B; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9957,Integrability,interface,interface,9957,"de - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10166,Integrability,interface,interface,10166,"ld be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible r",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10415,Integrability,interface,interface,10415,"rface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public b",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10728,Integrability,interface,interface,10728,"- ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11290,Integrability,interface,interface,11290,"specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Descript",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11493,Integrability,interface,interface,11493,"a<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure th",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11688,Integrability,interface,interface,11688,"; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11812,Integrability,interface,interface,11812,"fo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interf",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12107,Integrability,interface,interface,12107,"y.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12303,Integrability,interface,interface,12303,"nMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12598,Integrability,interface,interface,12598,"ed, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightnes",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12779,Integrability,interface,interface,12779,"inDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,;",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12899,Integrability,interface,interface,12899,"this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13008,Integrability,interface,interface,13008,"this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in int",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13128,Integrability,interface,interface,13128,"Info.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Ov",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13237,Integrability,interface,interface,13237,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13391,Integrability,interface,interface,13391,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13500,Integrability,interface,interface,13500,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13654,Integrability,interface,interface,13654,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13838,Integrability,interface,interface,13838,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:14003,Integrability,interface,interface,14003,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:621,Modifiability,extend,extends,621,". DirectServerChannelInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:1256,Modifiability,inherit,inherited,1256,"| ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class DirectServerChannelInfo. java.lang.Object; qupath.lib.display.DirectServerChannelInfo. All Implemented Interfaces:; ChannelDisplayInfo, ChannelDisplayInfo.ModifiableChannelDisplayInfo, SingleChannelDisplayInfo. public class DirectServerChannelInfo; extends Object; ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used. ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; clipToAllowed;  ; protected static final IndexColorModel; CM_GRAYSCALE;  ; protected static final IndexColorModel; CM_GRAYSCALE_INVERTED;  ; protected static final DecimalFormat; df;  ; protected float; maxAllowed;  ; protected float; maxDisplay;  ; protected float; minAllowed;  ; protected float; minDisplay;  . Constructor Summary; Constructors. Constructor; Description; DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. int; getChannel(). Get the channel number. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4904,Modifiability,inherit,inherited,4904,"nge is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:5033,Modifiability,inherit,inherited,5033,"hey are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the c",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4978,Security,hash,hashCode,4978,"o.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName();",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:8678,Usability,simpl,simple,8678,"brightness/contrast). Returns:. isAdditive; public boolean isAdditive(); Description copied from interface: ChannelDisplayInfo; Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. Returns:. getColor; public Integer getColor(); Description copied from interface: ChannelDisplayInfo; Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. Color.RED for a red channel).; Returns null if there is no appropriate color choice, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2711,Availability,avail,availableChannels,2711,"Input,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisp",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2781,Availability,avail,available,2781,"o a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisplay display). Check if an image display is 'compatible' with thi",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:3226,Availability,avail,available,3226,"playInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisplay display). Check if an image display is 'compatible' with this one. void; refreshChannelOptions(). Refresh the channel options. void; saveChannelColorProperties(). Save color channels in the ImageData properties. ObservableList<ChannelDisplayInfo>; selectedChannels(). ObservableList containing the channels currently selected for display. void; setChannelSelected(ChannelDisplayInfo channel,; boolean selected). Set the selection of a channel on or off. void; setImageData(ImageData<BufferedI",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11546,Availability,avail,availableChannels,11546,"el; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image sho",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11567,Availability,avail,availableChannels,11567,"f switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgD",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11628,Availability,avail,availableChannels,11628,"f switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgD",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11698,Availability,avail,available,11698,"f switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgD",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:15028,Availability,avail,available,15028,"n RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean updateFromDisplay(ImageDisplay display); Update the current display based upon a different display.; This only makes changes if isCompatible(ImageDisplay) returns true.; ; This method exists to make it easier to sync display settings across viewers. Parameters:; display - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5049,Deployability,update,updateFromDisplay,5049,"lected(ChannelDisplayInfo channel,; boolean selected). Set the selection of a channel on or off. void; setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings). Set the ImageData to a new value. void; setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay). Set the min/max display values for a specified ChannelDisplayInfo. void; setSwitchToGrayscaleChannel(ChannelDisplayInfo channel). Set the value of switchToGrayscaleChannelProperty(). void; setUseGrayscaleLuts(boolean useGrayscaleLuts). Set the value of useGrayscaleLutProperty(). void; setUseInvertedBackground(boolean useInvertedBackground). Set the value of useInvertedBackgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useG",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11119,Deployability,update,update,11119,"eLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo). setSwitchToGrayscaleChannel; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (an",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:14578,Deployability,update,update,14578,"Infos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, and RGB); selectedChannels - the channels to use; mode - the mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean u",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:14767,Deployability,update,update,14767,"he mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean updateFromDisplay(ImageDisplay display); Update the current display based upon a different display.; This only makes changes if isCompatible(ImageDisplay) returns true.; ; This method exists to make it easier to sync dis",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:15531,Deployability,update,updateFromDisplay,15531,"n RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean updateFromDisplay(ImageDisplay display); Update the current display based upon a different display.; This only makes changes if isCompatible(ImageDisplay) returns true.; ; This method exists to make it easier to sync display settings across viewers. Parameters:; display - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:15565,Deployability,update,updateFromDisplay,15565,"n RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean updateFromDisplay(ImageDisplay display); Update the current display based upon a different display.; This only makes changes if isCompatible(ImageDisplay) returns true.; ; This method exists to make it easier to sync display settings across viewers. Parameters:; display - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:6799,Integrability,interface,interfaces,6799,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:9463,Integrability,interface,interface,9463,"kgroundProperty(); Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). Returns:; See Also:. setUseInvertedBackground(boolean). useInvertedBackground; public boolean useInvertedBackground(); Get the value of useInvertedBackgroundProperty(). Returns:. displayMode; public ObjectBinding<ChannelDisplayMode> displayMode(); Get the value of useInvertedBackgroundProperty(). Returns:. setUseInvertedBackground; public void setUseInvertedBackground(boolean useInvertedBackground); Set the value of useInvertedBackgroundProperty(). Parameters:; useInvertedBackground - . useColorLUTs; public boolean useColorLUTs(); The opposite of useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToG",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:10185,Integrability,interface,interfaces,10185,"useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo). setSwitchToGrayscaleChannel; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:549,Modifiability,extend,extends,549,". ImageDisplay (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Class ImageDisplay. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer; qupath.lib.display.ImageDisplay. All Implemented Interfaces:; ImageRenderer. public class ImageDisplay; extends AbstractImageRenderer; Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings.; ; Warning! This implementation is likely to change in a future version. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; LongProperty; changeTimestamp. Timestamp for the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; u",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:1347,Modifiability,inherit,inherited,1347,"ass ImageDisplay. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer; qupath.lib.display.ImageDisplay. All Implemented Interfaces:; ImageRenderer. public class ImageDisplay; extends AbstractImageRenderer; Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings.; ; Warning! This implementation is likely to change in a future version. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; LongProperty; changeTimestamp. Timestamp for the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; aut",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:1913,Modifiability,extend,extends,1913,"the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDispla",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2181,Modifiability,extend,extends,2181," should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5641,Modifiability,inherit,inherited,5641,"void; setUseInvertedBackground(boolean useInvertedBackground). Set the value of useInvertedBackgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleCha",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5735,Modifiability,inherit,inherited,5735,"ckgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() i",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12974,Modifiability,extend,extends,12974,"alse, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, and RGB); selectedChannels - the channels to use; mode - the mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedV",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:13428,Modifiability,extend,extends,13428," appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, and RGB); selectedChannels - the channels to use; mode - the mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:9364,Safety,abort,abort,9364,"perty(). Parameters:; useGrayscaleLuts - . useInvertedBackgroundProperty; public BooleanProperty useInvertedBackgroundProperty(); Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). Returns:; See Also:. setUseInvertedBackground(boolean). useInvertedBackground; public boolean useInvertedBackground(); Get the value of useInvertedBackgroundProperty(). Returns:. displayMode; public ObjectBinding<ChannelDisplayMode> displayMode(); Get the value of useInvertedBackgroundProperty(). Returns:. setUseInvertedBackground; public void setUseInvertedBackground(boolean useInvertedBackground); Set the value of useInvertedBackgroundProperty(). Parameters:; useInvertedBackground - . useColorLUTs; public boolean useColorLUTs(); The opposite of useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used whe",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12739,Safety,safe,safe,12739,"rns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5809,Security,hash,hashCode,5809,"eChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and pr",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:6789,Usability,intuit,intuitive,6789,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:10175,Usability,intuit,intuitive,10175,"useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo). setSwitchToGrayscaleChannel; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11992,Usability,clear,cleared,11992,"o info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedIm",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12045,Usability,clear,cleared,12045,"is method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(Buff",MatchSource.WIKI,javadoc/docs/qupath/lib/display/ImageDisplay.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/package-summary.html:956,Integrability,interface,interface,956,". qupath.lib.display (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.display. package qupath.lib.display. Classes to control the display of images in a QuPathViewer.; ; Warning! These are likely to change in a future version of QuPath. Related Packages. Package; Description; qupath.lib.display.settings. Classes to support storing and retrieving image display settings. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1655,Deployability,update,updateRGBAdditive,1655," ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1674,Deployability,update,updateRGBAdditive,1674," ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:510,Integrability,interface,interface,510,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:783,Integrability,interface,interfaces,783,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:809,Integrability,interface,interface,809,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1352,Integrability,depend,dependent,1352,"H. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1425,Integrability,interface,interface,1425,"s:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of valu",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:2538,Integrability,depend,dependent,2538,"nfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:546,Modifiability,extend,extends,546,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:794,Modifiability,inherit,inherited,794,". SingleChannelDisplayInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface SingleChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1410,Modifiability,inherit,inherited,1410,"s:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of valu",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:2714,Usability,simpl,simple,2714,"nfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html:471,Modifiability,extend,extends,471,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html:1089,Modifiability,inherit,inherited,1089,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html:1163,Security,hash,hashCode,1163,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/package-summary.html:565,Integrability,interface,interface,565,". qupath.lib.geom (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.geom. package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. All Classes and InterfacesInterfacesClasses. Class; Description; ImmutableDimension. An immutable alternative to Java's AWT Dimension. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html:410,Integrability,interface,interface,410,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html:434,Integrability,interface,interface,434,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html:514,Modifiability,extend,extended,514,". Point (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Interface Point. All Known Implementing Classes:; Point2. public interface Point; Simple interface defining a point.; ; Warning: This may change in the future (by being extended), so developers are advised not to subclass it... Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(Point p). Calculate the distance to another point, with the same dim(). double; distanceSq(Point p). Calculate the squared distance to another point, with the same dim(). double; get(int dim). Get the value of the ordinate for the specified dimension. Method Details. dim; int dim(); Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Returns:. get; double get(int dim); Get the value of the ordinate for the specified dimension. Parameters:; dim - ; Returns:. distanceSq; double distanceSq(Point p); Calculate the squared distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distance(Point). distance; double distance(Point p); Calculate the distance to another point, with the same dim(). Parameters:; p - ; Returns:; See Also:. distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2961,Integrability,interface,interface,2961,"); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3060,Integrability,interface,interface,3060,"t constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3155,Integrability,interface,interface,3155,"errides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3294,Integrability,interface,interface,3294,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3507,Integrability,interface,interface,3507,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3687,Integrability,interface,interface,3687,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3830,Integrability,interface,interface,3830,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3953,Integrability,interface,interface,3953,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:4100,Integrability,interface,interface,4100,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:4213,Integrability,interface,interface,4213,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:489,Modifiability,extend,extends,489,". Point2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class Point2. java.lang.Object; qupath.lib.geom.Point2. All Implemented Interfaces:; Externalizable, Serializable, Point. public class Point2; extends Object; implements Externalizable; A 2D point (x & y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; Point2(). Default constructor for a point at location (0,0). Point2(double x,; double y). Point constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a po",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:1824,Modifiability,inherit,inherited,1824,"crete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the dista",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:1697,Security,hash,hashCode,1697,",; double y). Point constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2128,Security,hash,hashCode,2128,"Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description c",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2149,Security,hash,hashCode,2149,"Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description c",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2173,Security,hash,hashCode,2173," p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number",MatchSource.WIKI,javadoc/docs/qupath/lib/geom/Point2.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:724,Availability,avail,available,724,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:1461,Availability,avail,available,1461,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:433,Modifiability,extend,extends,433,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:1024,Modifiability,inherit,inherited,1024,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:1098,Security,hash,hashCode,1098,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/BuildInfo.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9612,Integrability,interface,interface,9612,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:553,Modifiability,extend,extends,553,". ColorMapCanvas (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ColorMapCanvas. java.lang.Object; javafx.scene.Node; javafx.scene.canvas.Canvas; qupath.lib.gui.ColorMapCanvas. All Implemented Interfaces:; Styleable, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rota",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:791,Modifiability,inherit,inherited,791,". ColorMapCanvas (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ColorMapCanvas. java.lang.Object; javafx.scene.Node; javafx.scene.canvas.Canvas; qupath.lib.gui.ColorMapCanvas. All Implemented Interfaces:; Styleable, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rota",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:866,Modifiability,inherit,inherited,866,". ColorMapCanvas (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ColorMapCanvas. java.lang.Object; javafx.scene.Node; javafx.scene.canvas.Canvas; qupath.lib.gui.ColorMapCanvas. All Implemented Interfaces:; Styleable, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rota",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:2135,Modifiability,inherit,inherited,2135,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3362,Modifiability,inherit,inherited,3362,"s.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display to the one with the specified list index. void; setTooltipFunction(Function<Double,String> fun). Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. Methods inherited from class javafx.scene.canvas.Canvas; getGraphicsContext2D, getHeight, getWidth, heightProperty, setHeight, setWidth, widthProperty. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBaselineOffset, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClassCssMetaData, getClip, getContent",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3514,Modifiability,inherit,inherited,3514,"d Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display to the one with the specified list index. void; setTooltipFunction(Function<Double,String> fun). Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. Methods inherited from class javafx.scene.canvas.Canvas; getGraphicsContext2D, getHeight, getWidth, heightProperty, setHeight, setWidth, widthProperty. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBaselineOffset, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClassCssMetaData, getClip, getContentBias, getCssMetaData, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTrave",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9468,Modifiability,inherit,inherited,9468,"xtChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeigh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9597,Modifiability,inherit,inherited,9597,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:1023,Performance,cache,cacheHint,1023,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:1034,Performance,cache,cache,1034,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3805,Performance,cache,cacheHintProperty,3805,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3824,Performance,cache,cacheProperty,3824,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:906,Security,access,accessibleHelp,906,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:922,Security,access,accessibleRoleDescription,922,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:949,Security,access,accessibleRole,949,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:965,Security,access,accessibleText,965,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3554,Security,access,accessibleHelpProperty,3554,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3578,Security,access,accessibleRoleDescriptionProperty,3578,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3613,Security,access,accessibleRoleProperty,3613,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3637,Security,access,accessibleTextProperty,3637,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9542,Security,hash,hashCode,9542,"ouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; p",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1122,Availability,down,down,1122,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1132,Availability,avail,available,1132,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2682,Availability,down,down,2682,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2692,Availability,avail,available,2692,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2775,Integrability,interface,interface,2775,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2824,Integrability,interface,interface,2824,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:613,Modifiability,extend,extends,613,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1151,Modifiability,inherit,inherited,1151,"elp. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finaliz",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1340,Modifiability,inherit,inherited,1340,"h.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the Extensio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1428,Modifiability,inherit,inherited,1428,"urity.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtension",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2099,Modifiability,inherit,inherited,2099,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:653,Performance,load,loading,653,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1926,Performance,load,loadClass,1926,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1937,Performance,load,loadClass,1937,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:433,Security,secur,security,433,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1366,Security,secur,security,1366,"sionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2173,Security,hash,hashCode,2173,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1472,Usability,clear,clearAssertionStatus,1472,"ic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:750,Deployability,update,update,750,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:4970,Deployability,update,updateBounds,4970,"SnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10973,Integrability,interface,interface,10973,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:650,Modifiability,extend,extends,650,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:803,Modifiability,inherit,inherited,803,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:892,Modifiability,inherit,inherited,892,". ExtensionControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1140,Modifiability,inherit,inherited,1140,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1206,Modifiability,inherit,inherited,1206,"Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2475,Modifiability,inherit,inherited,2475,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2565,Modifiability,inherit,inherited,2565," layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxW",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2947,Modifiability,inherit,inherited,2947,"ragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, ma",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3352,Modifiability,inherit,inherited,3352,"aleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3420,Modifiability,inherit,inherited,3420,"eZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:4733,Modifiability,inherit,inherited,4733,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:4992,Modifiability,inherit,inherited,4992," minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClip, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTraversable, getInputMethodRequests, getLayoutBounds, getLayoutX, getLayoutY,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10829,Modifiability,inherit,inherited,10829,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10958,Modifiability,inherit,inherited,10958,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:961,Performance,cache,cacheShape,961," 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, o",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1363,Performance,cache,cacheHint,1363,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1374,Performance,cache,cache,1374,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3505,Performance,cache,cacheShapeProperty,3505,"PrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, ac",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5283,Performance,cache,cacheHintProperty,5283,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5302,Performance,cache,cacheProperty,5302,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1246,Security,access,accessibleHelp,1246,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1262,Security,access,accessibleRoleDescription,1262,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1289,Security,access,accessibleRole,1289,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1305,Security,access,accessibleText,1305,"ox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5032,Security,access,accessibleHelpProperty,5032,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5056,Security,access,accessibleRoleDescriptionProperty,5056,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5091,Security,access,accessibleRoleProperty,5091,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:5115,Security,access,accessibleTextProperty,5115,,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10903,Security,hash,hashCode,10903,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3013,Usability,clear,clearConstraints,3013,", onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, pre",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:2558,Deployability,install,installation,2558,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:461,Modifiability,extend,extends,461,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:692,Modifiability,extend,extends,692,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:783,Modifiability,extend,extends,783,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1332,Modifiability,inherit,inherited,1332,"upath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1529,Modifiability,extend,extends,1529,"; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1708,Modifiability,extend,extends,1708,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:484,Performance,load,loading,484,". ExtensionManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExt",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1157,Performance,load,loading,1157,"Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNoti",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1650,Performance,load,loaded,1650,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1828,Performance,load,loaded,1828,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:2099,Performance,load,loading,2099,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:2231,Performance,load,loaded,2231,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1406,Security,hash,hashCode,1406,"ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions director",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ExtensionManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:622,Availability,error,error,622,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:3101,Availability,error,error,3101,"me of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(String). inputFiles; public FileCopier inputFiles(Collection<File> files); Collection of files to copy. Parameters:; files - ; Returns:; See Also:. inputPaths(Collection). inputPaths; public FileCopier inputPaths(Collection<Path> paths); Collection of paths representing files to copy. Parameters:; paths - ; Returns:; See Also:. inputFiles(Collection). doCopy; public void doCopy(); Perform the copying.; Note that any exceptions will be caught and displayed to the user in an error dialog. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:628,Integrability,message,message,628,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:437,Modifiability,extend,extends,437,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:1387,Modifiability,inherit,inherited,1387,".gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path represent",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:1461,Security,hash,hashCode,1461,"an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, thi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/FileCopier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html:449,Modifiability,extend,extends,449,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/JavadocViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html:1037,Modifiability,inherit,inherited,1037,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/JavadocViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html:1111,Security,hash,hashCode,1111,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/JavadocViewer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1721,Deployability,update,update,1721,"ers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when la",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:372,Integrability,interface,interface,372,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:595,Integrability,interface,interface,595,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1017,Integrability,interface,interface,1017,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1125,Integrability,interface,interface,1125,"age; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only on",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1282,Integrability,interface,interface,1282,"| ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. Tas",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1547,Performance,load,loading,1547," within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectory",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1770,Performance,load,loading,1770,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:821,Testability,log,logging,821,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:842,Testability,log,logging,842,". qupath.lib.gui (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuP",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:2178,Usability,simpl,simplify,2178,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:2479,Usability,undo,undo,2479,"h. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. ToolManager. Manage (drawing) tool selection in a QuPath UI. UndoRedoManager. Helper class to add undo/redo support to QuPath. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. WelcomeStage. Welcome page when launching QuPath. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html:302,Modifiability,plugin,plugins,302,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html:352,Modifiability,plugin,plugins,352,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html:514,Security,secur,security,514,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:585,Integrability,interface,interfaces,585,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:465,Modifiability,extend,extends,465,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:596,Modifiability,inherit,inherited,596,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:695,Modifiability,inherit,inherited,695,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:1002,Modifiability,inherit,inherited,1002,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:1188,Modifiability,inherit,inherited,1188,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:1262,Security,hash,hashCode,1262,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathApp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:3637,Availability,avail,available,3637,"age> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. M",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:5657,Availability,avail,available,5657," name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new comman",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:5809,Availability,avail,available,5809," if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in Qu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6147,Availability,avail,available,6147,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9214,Availability,avail,availablePathClasses,9214,"ved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. ReadOnlyObjectProperty<Project<BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:13545,Availability,avail,available,13545,"pplication).; However this method can be used if QuPath is being launched some other way.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage, HostServices); launchInstanceFromSwing(). createInstance; public static QuPathGUI createInstance(Stage stage,; HostServices hostServices); throws IllegalStateException; Static method to launch QuPath from a JavaFX application.; ; This is typically expected to be called in an Application.start(Stage) method, ; although could potentially be called later from another JavaFX application.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI (usually from Application.start(Stage)); hostServices - host services from the JavaFX Application, if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14211,Availability,down,down,14211,"e called in an Application.start(Stage) method, ; although could potentially be called later from another JavaFX application.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI (usually from Application.start(Stage)); hostServices - host services from the JavaFX Application, if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a backgroun",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14450,Availability,avail,available,14450,"stage to use for the QuPath UI (usually from Application.start(Stage)); hostServices - host services from the JavaFX Application, if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14574,Availability,avail,available,14574,"if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16026,Availability,avail,available,16026,"sabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16599,Availability,avail,available,16599," be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone();",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16759,Availability,avail,available,16759,"ser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17081,Availability,avail,availablePathClasses,17081,"urns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer get",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17165,Availability,avail,available,17165,"PoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17739,Availability,down,down,17739,"observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges); throws IOException; Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the Imag",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19481,Availability,error,error,19481," is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the ImageData. Parameters:; viewer - ; file - ; keepExistingServer - if true and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if tr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19813,Availability,error,error,19813,"e and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu whe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22018,Availability,avail,available,22018," exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptExce",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:28115,Availability,avail,available,28115,"runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScriptEditor(ScriptEditor scriptEditor); Set a new ScriptEditor, which will be used from now on. Parameters:; scriptEditor - . getOverlayOptions; public OverlayOptions getOverlayOptions",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:35737,Availability,down,down,35737,"rs:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; Returns:; the menu item corresponding to this path, or null if no menu item is found. getOverlayActions; public OverlayActions getOverlayActions(); Get the actions associated with the viewer overlay options.; This includes showing/hiding/filling objects, or adjusting opacity. Returns:. getViewerActions; public ViewerActions getViewerActions(); Get the associations associated with QuPath image viewers. Returns:. createSingleThreadExecutor; @Deprecated; public ExecutorService createSingleThreadExecutor(Object owner); Deprecated.; since v0.5.0; use getThreadPoolManager(). Create an executor using a single thread.; ; Optionally specify an owner, in which case the same Executor will be returned for the owner; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; @Deprecated; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Deprecated.; since v0.5.0; use getThreadPoolManager(). Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; @Deprecated; public void submitShortTask(Runnable runnable); Deprecated.; since v0.5.0; use getThreadPoolManager(). Submit a short task to a shared thread pool. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:35763,Availability,down,down,35763,"rs:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; Returns:; the menu item corresponding to this path, or null if no menu item is found. getOverlayActions; public OverlayActions getOverlayActions(); Get the actions associated with the viewer overlay options.; This includes showing/hiding/filling objects, or adjusting opacity. Returns:. getViewerActions; public ViewerActions getViewerActions(); Get the associations associated with QuPath image viewers. Returns:. createSingleThreadExecutor; @Deprecated; public ExecutorService createSingleThreadExecutor(Object owner); Deprecated.; since v0.5.0; use getThreadPoolManager(). Create an executor using a single thread.; ; Optionally specify an owner, in which case the same Executor will be returned for the owner; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; @Deprecated; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Deprecated.; since v0.5.0; use getThreadPoolManager(). Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; @Deprecated; public void submitShortTask(Runnable runnable); Deprecated.; since v0.5.0; use getThreadPoolManager(). Submit a short task to a shared thread pool. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6344,Deployability,install,installActions,6344,"t the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6469,Deployability,install,installCommand,6469,"oolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccelerator(KeyCombination combo). Get the action or menu item associated with an key combination. org.controlsfx.control.action.Action",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6565,Deployability,install,installGroovyCommand,6565,"toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccelerator(KeyCombination combo). Get the action or menu item associated with an key combination. org.controlsfx.control.action.Action; lookupActionByText(String text). Search for an action based upon its text (name) property. Me",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6678,Deployability,install,installGroovyCommand,6678,"ger; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccelerator(KeyCombination combo). Get the action or menu item associated with an key combination. org.controlsfx.control.action.Action; lookupActionByText(String text). Search for an action based upon its text (name) property. MenuItem; lookupMenuItem(String menuPath). Search for a menu item based upon its path. boolean; openImage(QuPathViewe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6795,Deployability,install,installImageDataCommand,6795,". static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccelerator(KeyCombination combo). Get the action or menu item associated with an key combination. org.controlsfx.control.action.Action; lookupActionByText(String text). Search for an action based upon its text (name) property. MenuItem; lookupMenuItem(String menuPath). Search for a menu item based upon its path. boolean; openImage(QuPathViewer viewer,; String pathNew);  ; boolean; openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs). Open ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9040,Deployability,update,update,9040,"). Try to launch a browser window for a specified URL. boolean; openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges). Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. ReadOnlyObjectProperty<Project<BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9126,Deployability,update,update,9126,"er viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges). Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. ReadOnlyObjectProperty<Project<BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9981,Deployability,update,updates,9981,"the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14841,Deployability,update,update,14841,"ws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14955,Deployability,update,updates,14955,"rns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowse",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15007,Deployability,update,update,15007,"chInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolMan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15163,Deployability,update,update,15163,"initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager()",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:20634,Deployability,install,installGroovyCommand,20634,"upport ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:20672,Deployability,install,installGroovyCommand,20672,"upport ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:20832,Deployability,install,installed,20832,"e shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(Stri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21188,Deployability,install,installGroovyCommand,21188,"he path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21226,Deployability,install,installGroovyCommand,21226,"r into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21264,Deployability,install,installGroovyCommand,21264,"r into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21428,Deployability,install,installed,21428,"ide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21728,Deployability,install,installGroovyCommand,21728,"t as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu it",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21764,Deployability,install,installImageDataCommand,21764,"ring) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:21805,Deployability,install,installImageDataCommand,21805,"ring) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22086,Deployability,install,installed,22086,"t this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptException,; IllegalArgumentException; Convenience method to execute a script.; Either a script",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22381,Deployability,install,installCommand,22381,"nu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptException,; IllegalArgumentException; Convenience method to execute a script.; Either a script file or the text of the script must be provided, or both.; ; If only the script text is given, the language is assumed to be Groovy. Parameters:; file - the file containing the script to run; script - the script to run; Returns:; result of the script execution; Throws:; ScriptException; IllegalArgumentExcept",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22415,Deployability,install,installCommand,22415," specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptException,; IllegalArgumentException; Convenience method to execute a script.; Either a script file or the text of the script must be provided, or both.; ; If only the script text is given, the language is assumed to be Groovy. Parameters:; file - the file containing the script to run; script - the script to run; Returns:; result of the script execution; Throws:; ScriptException; IllegalArgumentException - if both file and script are null. getPreferencePane; public Preference",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22447,Deployability,install,installCommand,22447," specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptException,; IllegalArgumentException; Convenience method to execute a script.; Either a script file or the text of the script must be provided, or both.; ; If only the script text is given, the language is assumed to be Groovy. Parameters:; file - the file containing the script to run; script - the script to run; Returns:; result of the script execution; Throws:; ScriptException; IllegalArgumentException - if both file and script are null. getPreferencePane; public Preference",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22590,Deployability,install,installed,22590,"dy exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptException,; IllegalArgumentException; Convenience method to execute a script.; Either a script file or the text of the script must be provided, or both.; ; If only the script text is given, the language is assumed to be Groovy. Parameters:; file - the file containing the script to run; script - the script to run; Returns:; result of the script execution; Throws:; ScriptException; IllegalArgumentException - if both file and script are null. getPreferencePane; public PreferencePane getPreferencePane(); Get a reference to the PreferencePane.; ; This can be used by extensions to add in their own",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:30720,Deployability,update,updates,30720,". getStage; public Stage getStage(); Get the main QuPath stage. Returns:. refreshTitle; public void refreshTitle(); Refresh the title bar in the main QuPath window. getDisplayedImageName; public String getDisplayedImageName(ImageData<BufferedImage> imageData); Get the image name to display for a specified image.; This can be used to determine a name to display in the title bar, for example. Parameters:; imageData - ; Returns:. getBuildString; public static String getBuildString(); Get a String representing the QuPath version & build time. Returns:. getVersion; public static Version getVersion(); Get the current QuPath version. Returns:. imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. Returns:; See Also:. getImageData(). setProject; public void setProject(Project<BufferedImage> project); Set the active project, triggering any necessary GUI updates. Parameters:; project - . refreshProject; public void refreshProject(); Refresh the project, updating the display if required.; This can be called whenever the project has changed (e.g. by adding or removing items). projectProperty; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty(); Read-only property representing the currently-open project. Returns:; See Also:. getProject(); setProject(Project). getProject; public Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33944,Deployability,install,installActions,33944," command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33972,Deployability,install,installActions,33972," command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:1784,Integrability,depend,depends,1784,"roperty representing the currently-open project. ReadOnlyBooleanProperty; readOnly. Property indicating whether QuPath is in 'read-only' mode. BooleanProperty; showAnalysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectActio",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:1952,Integrability,depend,depends,1952,"ysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2853,Integrability,depend,depends,2853,"teImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragD",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:3241,Integrability,depend,depends,3241,"mage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10527,Integrability,interface,interface,10527,"an; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14481,Integrability,depend,depending,14481,"if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user inter",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15538,Integrability,interface,interface,15538,"ad from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public V",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19487,Integrability,message,message,19487," is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the ImageData. Parameters:; viewer - ; file - ; keepExistingServer - if true and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if tr",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19819,Integrability,message,message,19819,"e and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu whe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:32199,Integrability,depend,depends,32199,"blic Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Parameters:; viewer - ; Returns:; True if the viewer no longer contains an open image (either because it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<Image",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:32788,Integrability,depend,depends,32788,"it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current P",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33231,Integrability,depend,depends,33231,"tion that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient informa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:33678,Integrability,depend,depends,33678,"perty. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:433,Modifiability,extend,extends,433,". QuPathGUI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathGUI. java.lang.Object; qupath.lib.gui.QuPathGUI. public class QuPathGUI; extends Object; Main GUI for QuPath, written using JavaFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageData. Read-only property containing the image open within the currently-active viewer. ReadOnlyObjectProperty<Project<BufferedImage>>; project. Read-only property representing the currently-open project. ReadOnlyBooleanProperty; readOnly. Property indicating whether QuPath is in 'read-only' mode. BooleanProperty; showAnalysisPane;  ; BooleanProperty; showInputDisplay. Property to indicate whether the input display is currently showing. ReadOnlyObjectProperty<QuPathViewer>; viewer. Property representing the viewer currently active. Field Summary; Fields. Modifier and Type; Field; Description; static final int; TOOLBAR_ICON_SIZE. Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; crea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2272,Modifiability,extend,extends,2272,". Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathV",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2292,Modifiability,plugin,pluginClass,2292,". Icon size to use in the main QuPath toolbar. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathV",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2315,Modifiability,plugin,plugin,2315,". All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2425,Modifiability,extend,extends,2425,"Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2445,Modifiability,plugin,pluginClass,2445,"Method; Description; boolean; closeViewer(QuPathViewer viewer). Close the image within a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pan",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2495,Modifiability,plugin,plugin,2495,"hin a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the autom",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2639,Modifiability,plugin,plugin,2639,"uPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get a",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2700,Modifiability,plugin,plugin,2700," createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6372,Modifiability,extend,extends,6372,"t the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9301,Modifiability,plugin,plugin,9301,"geServer as is currently open. ReadOnlyObjectProperty<Project<BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9353,Modifiability,plugin,plugin,9353,"BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitS",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10674,Modifiability,inherit,inherited,10674,"combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the currently-open project. See Also:. getProject(); setProject(Project); projectProperty(). viewer; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty; Prop",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15591,Modifiability,plugin,plugin,15591," time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the vie",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26342,Modifiability,extend,extends,26342,"elated buttons ; or menu items.; ; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26362,Modifiability,plugin,pluginClass,26362,"elated buttons ; or menu items.; ; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26412,Modifiability,plugin,plugin,26412,"elated buttons ; or menu items.; ; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional strin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26491,Modifiability,plugin,plugin,26491,"o another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if ru",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26499,Modifiability,plugin,pluginClass,26499,"o another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if ru",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26526,Modifiability,plugin,plugin,26526,"o another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if ru",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26583,Modifiability,plugin,plugins,26583,"o another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if ru",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26726,Modifiability,plugin,plugin,26726,"; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26787,Modifiability,plugin,plugin,26787,"; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public Path",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26837,Modifiability,plugin,plugin,26837,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26850,Modifiability,plugin,plugin,26850,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26863,Modifiability,plugin,plugin,26863,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26914,Modifiability,plugin,plugin,26914,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26972,Modifiability,plugin,plugin,26972,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27114,Modifiability,plugin,plugin,27114,"ade, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27184,Modifiability,plugin,plugin,27184,"ade, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memor",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27328,Modifiability,plugin,plugin,27328,"instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27341,Modifiability,plugin,plugin,27341,"instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27462,Modifiability,plugin,plugin,27462,"instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27540,Modifiability,plugin,plugin,27540,"instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27781,Modifiability,extend,extends,27781,"ied plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (wh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27801,Modifiability,plugin,pluginClass,27801,"ied plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (wh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27824,Modifiability,plugin,plugin,27824,"ied plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (wh",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27868,Modifiability,plugin,pluginClass,27868,"call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScript",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:34000,Modifiability,extend,extends,34000," command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; R",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:34122,Modifiability,config,configured,34122,"geData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; Returns:; the menu item corresponding to this path, or null if no menu item is found. getOverlayActions; public OverlayActions getOverlayActions(); Get the actions associated with the vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:4423,Performance,cache,cache,4423,"s the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15213,Performance,perform,perform,15213,"nate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of usin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27283,Performance,perform,perform,27283,"control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about savin",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:29296,Performance,cache,cache,29296,"uppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScriptEditor(ScriptEditor scriptEditor); Set a new ScriptEditor, which will be used from now on. Parameters:; scriptEditor - . getOverlayOptions; public OverlayOptions getOverlayOptions(); Return the global OverlayOptions instance, used to control display within viewers by default. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. Returns:. getMenuBar; public MenuBar getMenuBar(); Get the menubar for the main QuPath application. Returns:. getMenu; public Menu getMenu(String name,; boolean createMenu); Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. Parameters:; name - ; createMenu - ; Returns:. getStage; public Stage getStage(); Get the main QuPath stage. Returns:. refreshTitle; public void refreshTitle(); Refresh the title bar in the main QuPath window. getDisplayedImageName; public String getDisplayedImageName(ImageData<BufferedImage> imageData); Get the image name to display for a specified image.; This can be used to determine a name to display in the title bar, for example. Parameters:; imageData - ; Returns:. getBuildString; public static String getBuildString(); Get a String representing the QuPath version & build time. Returns:. getVersion; public stati",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17683,Safety,avoid,avoid,17683,"; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges); throws IOException; Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path name",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6121,Security,access,access,6121,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10748,Security,hash,hashCode,10748,"elerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the currently-open project. See Also:. getProject(); setProject(Project); projectProperty(). viewer; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty; Property representing the viewer currently active. See Also:. getViewer(); v",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16573,Security,access,access,16573," be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone();",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:4585,Testability,log,log,4585,"ses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. Menu; getMenu(String name,; boolean createMenu). Get a reference to an existing menu from the main QuPath menubar, optionally creating a new menu if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager;",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:31968,Testability,log,log,31968,"operty; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty(); Read-only property representing the currently-open project. Returns:; See Also:. getProject(); setProject(Project). getProject; public Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Parameters:; viewer - ; Returns:; True if the viewer no longer contains an open image (either because it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer i",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:5785,Usability,clear,clear,5785," if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in Qu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:28091,Usability,clear,clear,28091,"runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScriptEditor(ScriptEditor scriptEditor); Set a new ScriptEditor, which will be used from now on. Parameters:; scriptEditor - . getOverlayOptions; public OverlayOptions getOverlayOptions",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/QuPathGUI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:622,Integrability,depend,dependency,622,". SelectableItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SelectableItem<T>. java.lang.Object; qupath.lib.gui.SelectableItem<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:2012,Integrability,wrap,wrapped,2012,", but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:; See Also:. isSelected(); setSelected(boolean). getItem; public T getItem(); Get the current item. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:486,Modifiability,extend,extends,486,". SelectableItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SelectableItem<T>. java.lang.Object; qupath.lib.gui.SelectableItem<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:1415,Modifiability,inherit,inherited,1415,"em<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:1489,Security,hash,hashCode,1489,"bject; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SelectableItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:2038,Availability,down,down,2038,"adpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoClosea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:2064,Availability,down,down,2064,"adpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoClosea",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:2979,Integrability,interface,interface,2979,"ls created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:533,Modifiability,extend,extends,533,". SharedThreadPoolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SharedThreadPoolManager. java.lang.Object; qupath.lib.gui.SharedThreadPoolManager. All Implemented Interfaces:; AutoCloseable. public class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:1492,Modifiability,inherit,inherited,1492,"c class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:1566,Security,hash,hashCode,1566,"e; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:586,Usability,simpl,simplify,586,". SharedThreadPoolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class SharedThreadPoolManager. java.lang.Object; qupath.lib.gui.SharedThreadPoolManager. All Implemented Interfaces:; AutoCloseable. public class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so lo",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1055,Deployability,update,update,1055,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2049,Deployability,update,update,2049,"ressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2873,Deployability,update,update,2873," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1044,Energy Efficiency,monitor,monitor,1044,"our browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2038,Energy Efficiency,monitor,monitor,2038,"ressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particul",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2893,Energy Efficiency,monitor,monitor,2893," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2255,Integrability,interface,interface,2255," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2355,Integrability,interface,interface,2355," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:400,Modifiability,plugin,plugins,400,". TaskRunnerFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: A",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:525,Modifiability,extend,extends,525,". TaskRunnerFX (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: A",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1134,Modifiability,extend,extends,1134,"Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in c",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1239,Modifiability,extend,extends,1239," ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Descri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1323,Modifiability,inherit,inherited,1323,"ge qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Speci",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1355,Modifiability,plugin,plugins,1355,"skRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in inte",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1421,Modifiability,inherit,inherited,1421,"upath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Par",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2205,Modifiability,extend,extends,2205," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:2633,Modifiability,extend,extends,2633," PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Description copied from class: AbstractTaskRunner; Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Overrides:; postProcess in class AbstractTaskRunner; Parameters:; tasks - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1495,Security,hash,hashCode,1495,"lic class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask t",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:2186,Availability,avail,available,2186,".Action; MOVE_TOOL;  ; final org.controlsfx.control.action.Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:5444,Availability,avail,available,5444,"N_TOOL; @ActionAccelerator(""p""); @ActionConfig(""Tools.polygon""); public final org.controlsfx.control.action.Action POLYGON_TOOL. POLYLINE_TOOL; @ActionAccelerator(""v""); @ActionConfig(""Tools.polyline""); public final org.controlsfx.control.action.Action POLYLINE_TOOL. BRUSH_TOOL; @ActionAccelerator(""b""); @ActionConfig(""Tools.brush""); public final org.controlsfx.control.action.Action BRUSH_TOOL. LINE_TOOL; @ActionAccelerator(""l""); @ActionConfig(value=""Tools.line"",; bindLocale=false); public final org.controlsfx.control.action.Action LINE_TOOL. POINTS_TOOL; @ActionAccelerator("".""); @ActionConfig(""Tools.points""); public final org.controlsfx.control.action.Action POINTS_TOOL. SELECTION_MODE; @ActionAccelerator(""shift+s""); @ActionIcon(SELECTION_MODE); @ActionConfig(""Tools.selectionMode""); public final org.controlsfx.control.action.Action SELECTION_MODE. Method Details. create; public static ToolManager create(); Create a new instance. Returns:. getTools; public ObservableList<PathTool> getTools(); Get a read-only list of all available tools.; If you wish to add a new one, use installTool(PathTool, KeyCodeCombination). Returns:. selectedToolProperty; public ReadOnlyObjectProperty<PathTool> selectedToolProperty(); Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. Returns:; See Also:. getSelectedTool(); setSelectedTool(PathTool). lockSelectedToolProperty; public BooleanProperty lockSelectedToolProperty(); Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been add",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:2212,Deployability,install,installTool,2212,".Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:3895,Deployability,toggle,toggle,3895,"ed(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). Field Details. MOVE_TOOL; @ActionAccelerator(""m""); @ActionConfig(""Tools.move""); public final org.controlsfx.control.action.Action MOVE_TOOL. RECTANGLE_TOOL; @ActionAccelerator(""r""); @ActionConfig(""Tools.rectangle""); public final org.controlsfx.control.action.Action RECTANGLE_TOOL. ELLIPSE_TOOL; @ActionAccelerator(""o""); @ActionConfig(""Tools.ellipse""); public final org.controlsfx.control.action.Action ELLIPSE_TOOL. POLYGON_TOOL; @ActionAccelerator(""p""); @ActionConfig(""Tools.polygon""); public final org.controlsfx.control.action.Action POLYGON_TOOL. POLYLINE_TOOL; @ActionAccelerator(""v""); @ActionConfig(""Tools.polyline""); public final org.controlsfx.control.action.Action POLYLINE_TOOL. BRUSH_TOOL; @ActionAccelerator(""b""); @ActionConfig(""Tools.brush""); public final org.controlsfx.control.action.Action BRUSH_TOOL. LINE_TOOL; @ActionAccelerator(""l""); @ActionConfig(value=""Tools.line"",; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:5496,Deployability,install,installTool,5496,"sfx.control.action.Action POLYGON_TOOL. POLYLINE_TOOL; @ActionAccelerator(""v""); @ActionConfig(""Tools.polyline""); public final org.controlsfx.control.action.Action POLYLINE_TOOL. BRUSH_TOOL; @ActionAccelerator(""b""); @ActionConfig(""Tools.brush""); public final org.controlsfx.control.action.Action BRUSH_TOOL. LINE_TOOL; @ActionAccelerator(""l""); @ActionConfig(value=""Tools.line"",; bindLocale=false); public final org.controlsfx.control.action.Action LINE_TOOL. POINTS_TOOL; @ActionAccelerator("".""); @ActionConfig(""Tools.points""); public final org.controlsfx.control.action.Action POINTS_TOOL. SELECTION_MODE; @ActionAccelerator(""shift+s""); @ActionIcon(SELECTION_MODE); @ActionConfig(""Tools.selectionMode""); public final org.controlsfx.control.action.Action SELECTION_MODE. Method Details. create; public static ToolManager create(); Create a new instance. Returns:. getTools; public ObservableList<PathTool> getTools(); Get a read-only list of all available tools.; If you wish to add a new one, use installTool(PathTool, KeyCodeCombination). Returns:. selectedToolProperty; public ReadOnlyObjectProperty<PathTool> selectedToolProperty(); Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. Returns:; See Also:. getSelectedTool(); setSelectedTool(PathTool). lockSelectedToolProperty; public BooleanProperty lockSelectedToolProperty(); Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been added). setSelectedTool; public void setSelectedTool(PathTool tool); Programmatically selec",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:6091,Deployability,install,installTool,6091,"ODE); @ActionConfig(""Tools.selectionMode""); public final org.controlsfx.control.action.Action SELECTION_MODE. Method Details. create; public static ToolManager create(); Create a new instance. Returns:. getTools; public ObservableList<PathTool> getTools(); Get a read-only list of all available tools.; If you wish to add a new one, use installTool(PathTool, KeyCodeCombination). Returns:. selectedToolProperty; public ReadOnlyObjectProperty<PathTool> selectedToolProperty(); Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. Returns:; See Also:. getSelectedTool(); setSelectedTool(PathTool). lockSelectedToolProperty; public BooleanProperty lockSelectedToolProperty(); Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been added). setSelectedTool; public void setSelectedTool(PathTool tool); Programmatically select the active PathTool.; This may fail if isToolSwitchingEnabled() returns false. Parameters:; tool - . getSelectedTool; public PathTool getSelectedTool(); Get the value of selectedToolProperty(). Returns:. getPreviousSelectedTool; public PathTool getPreviousSelectedTool(); Get the value of selectedToolProperty(). Returns:. previousSelectedToolProperty; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty(); Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. Returns:; See Also:. getPreviousSelectedTool(). setToolSwitchingEnabled; public void setToolSwitching",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:6119,Deployability,install,installTool,6119,"ODE); @ActionConfig(""Tools.selectionMode""); public final org.controlsfx.control.action.Action SELECTION_MODE. Method Details. create; public static ToolManager create(); Create a new instance. Returns:. getTools; public ObservableList<PathTool> getTools(); Get a read-only list of all available tools.; If you wish to add a new one, use installTool(PathTool, KeyCodeCombination). Returns:. selectedToolProperty; public ReadOnlyObjectProperty<PathTool> selectedToolProperty(); Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. Returns:; See Also:. getSelectedTool(); setSelectedTool(PathTool). lockSelectedToolProperty; public BooleanProperty lockSelectedToolProperty(); Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been added). setSelectedTool; public void setSelectedTool(PathTool tool); Programmatically select the active PathTool.; This may fail if isToolSwitchingEnabled() returns false. Parameters:; tool - . getSelectedTool; public PathTool getSelectedTool(); Get the value of selectedToolProperty(). Returns:. getPreviousSelectedTool; public PathTool getPreviousSelectedTool(); Get the value of selectedToolProperty(). Returns:. previousSelectedToolProperty; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty(); Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. Returns:; See Also:. getPreviousSelectedTool(). setToolSwitchingEnabled; public void setToolSwitching",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:7036,Deployability,toggle,toggle,7036,"cked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been added). setSelectedTool; public void setSelectedTool(PathTool tool); Programmatically select the active PathTool.; This may fail if isToolSwitchingEnabled() returns false. Parameters:; tool - . getSelectedTool; public PathTool getSelectedTool(); Get the value of selectedToolProperty(). Returns:. getPreviousSelectedTool; public PathTool getPreviousSelectedTool(); Get the value of selectedToolProperty(). Returns:. previousSelectedToolProperty; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty(); Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. Returns:; See Also:. getPreviousSelectedTool(). setToolSwitchingEnabled; public void setToolSwitchingEnabled(boolean enabled); Toggle whether the user is permitted to switch to a new active PathTool.; This can be used to lock a tool temporarily. Parameters:; enabled - . isToolSwitchingEnabled; public boolean isToolSwitchingEnabled(); Returns true if the user is able to activate another PathTool, false otherwise. Returns:. getToolAction; public org.controlsfx.control.action.Action getToolAction(PathTool tool); Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. Parameters:; tool - ; Returns:. getSelectionModeAction; public org.controlsfx.control.action.Action getSelectionModeAction(); Return the action associated with 'selection mode'.; This can be used to create UI components that toggle selection mode on and off. Returns:; See Also:. PathPrefs.selectionModeProperty(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:7907,Deployability,toggle,toggle,7907,"cked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been added). setSelectedTool; public void setSelectedTool(PathTool tool); Programmatically select the active PathTool.; This may fail if isToolSwitchingEnabled() returns false. Parameters:; tool - . getSelectedTool; public PathTool getSelectedTool(); Get the value of selectedToolProperty(). Returns:. getPreviousSelectedTool; public PathTool getPreviousSelectedTool(); Get the value of selectedToolProperty(). Returns:. previousSelectedToolProperty; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty(); Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. Returns:; See Also:. getPreviousSelectedTool(). setToolSwitchingEnabled; public void setToolSwitchingEnabled(boolean enabled); Toggle whether the user is permitted to switch to a new active PathTool.; This can be used to lock a tool temporarily. Parameters:; enabled - . isToolSwitchingEnabled; public boolean isToolSwitchingEnabled(); Returns true if the user is able to activate another PathTool, false otherwise. Returns:. getToolAction; public org.controlsfx.control.action.Action getToolAction(PathTool tool); Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. Parameters:; tool - ; Returns:. getSelectionModeAction; public org.controlsfx.control.action.Action getSelectionModeAction(); Return the action associated with 'selection mode'.; This can be used to create UI components that toggle selection mode on and off. Returns:; See Also:. PathPrefs.selectionModeProperty(). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:441,Modifiability,extend,extends,441,. ToolManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ToolManager. java.lang.Object; qupath.lib.gui.ToolManager. public class ToolManager; extends Object; Manage (drawing) tool selection in a QuPath UI. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; lockSelectedTool. Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedTool. Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedTool. Property containing the currently-selected PathTool. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BRUSH_TOOL;  ; final org.controlsfx.control.action.Action; ELLIPSE_TOOL;  ; final org.controlsfx.control.action.Action; LINE_TOOL;  ; final org.controlsfx.control.action.Action; MOVE_TOOL;  ; final org.controlsfx.control.action.Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTo,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:2979,Modifiability,inherit,inherited,2979,"lAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). F",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:3053,Security,hash,hashCode,3053,"thTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). Field Details. MOVE_TOOL; @ActionAccelerator(""m""); @ActionConfig(""Tools.m",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/ToolManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4382,Integrability,interface,interface,4382,"lean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. sele",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4595,Integrability,interface,interface,4595,"Bytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4719,Integrability,interface,interface,4719,"' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5029,Integrability,interface,interface,5029,"ctive viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. h",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5157,Integrability,interface,interface,5157,"r in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5519,Integrability,interface,interface,5519,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5657,Integrability,interface,interface,5657,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5831,Integrability,interface,interface,5831,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5927,Integrability,interface,interface,5927,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:6118,Integrability,interface,interface,6118,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:6255,Integrability,interface,interface,6255,"wer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:582,Modifiability,extend,extends,582,". UndoRedoManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1890,Modifiability,extend,extends,1890,"kes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Ca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2115,Modifiability,extend,extends,2115,"ized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, eq",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3081,Modifiability,inherit,inherited,3081,"eViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnly",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3329,Modifiability,extend,extends,3329,"(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> ob",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4273,Modifiability,extend,extends,4273,"eForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the ne",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1407,Performance,perform,performance,1407," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1368,Safety,risk,risks,1368," Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer vi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3155,Security,hash,hashCode,3155,"; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for th",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:710,Usability,undo,undo,710,". UndoRedoManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1036,Usability,simpl,simple,1036,"vigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UndoRedoManager. java.lang.Object; qupath.lib.gui.UndoRedoManager. All Implemented Interfaces:; EventListener, ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener. public class UndoRedoManager; extends Object; implements ChangeListener<QuPathViewer>, QuPathViewerListener, PathObjectHierarchyListener; Helper class to add undo/redo support to QuPath.; ; This is restricted to tracking changes in the PathObjectHierarchy for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObserva",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1789,Usability,undo,undoOnce,1789," for individual viewers, ; and is intended mostly for cases where there aren't many objects - but where making mistakes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1982,Usability,clear,clear,1982,"kes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Ca",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2001,Usability,undo,undo,2001,"se of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). C",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2505,Usability,undo,undone,2505,"ance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2785,Usability,undo,undoOnce,2785,"all undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2809,Usability,undo,undo,2809,"h, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current activ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3368,Usability,undo,undoOnce,3368,"within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageD",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3393,Usability,undo,undoOnce,3393,"within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageD",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3417,Usability,undo,undo,3417,"within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageD",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3643,Usability,clear,clear,3643,"as changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3662,Usability,clear,clear,3662,"as changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3681,Usability,undo,undo,3681,"as changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3792,Usability,undo,undone,3792,"ndoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer who",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3987,Usability,undo,undoOnce,3987,"(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewe",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:535,Deployability,update,update,535,". Urls (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class Urls. java.lang.Object; qupath.lib.gui.Urls. public final class Urls; extends Object; Class to return core QuPath URLs centrally.; ; One benefit of this is that it gives one location to update to point to versioned documentation. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Urls();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static final String; getCitationUrl(). Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:1311,Deployability,install,install,1311,"; Method. SEARCH. Package qupath.lib.gui; Class Urls. java.lang.Object; qupath.lib.gui.Urls. public final class Urls; extends Object; Class to return core QuPath URLs centrally.; ; One benefit of this is that it gives one location to update to point to versioned documentation. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Urls();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static final String; getCitationUrl(). Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPa",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:2935,Deployability,install,install,2935,". Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); Get a URL pointing to a page that explains how to install this version of QuPath. Returns:. getYouTubeUrl; public static final String getYouTubeUrl(); Get a URL pointing to the QuPath YouTube channel. Returns:. getGitHubRepoUrl; public static final String getGitHubRepoUrl(); Get a URL pointing to the main QuPath GitHub repo. Returns:. getGitHubIssuesUrl; public static final String getGitHubIssuesUrl(); Get a URL pointing to the main GitHub issues page. Returns:. getUserForumUrl; public static final String getUserForumUrl(); Get a URL pointing to the main QuPath user forum. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:419,Modifiability,extend,extends,419,". Urls (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class Urls. java.lang.Object; qupath.lib.gui.Urls. public final class Urls; extends Object; Class to return core QuPath URLs centrally.; ; One benefit of this is that it gives one location to update to point to versioned documentation. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Urls();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static final String; getCitationUrl(). Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait,",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:1877,Modifiability,inherit,inherited,1877,"his version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); G",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:1951,Security,hash,hashCode,1951,"). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); Get a URL pointing to a page that explains how to install this version of",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/Urls.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9195,Availability,avail,available,9195,"is is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScri",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9421,Availability,avail,available,9421," based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null.",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9659,Availability,avail,available,9659,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9917,Availability,avail,available,9917,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:10151,Availability,avail,available,10151,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:10391,Availability,avail,available,10391,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9135,Integrability,depend,depends,9135,"ly property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9361,Integrability,depend,depends,9361,"y property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9599,Integrability,depend,depends,9599,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9857,Integrability,depend,depends,9857,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:10091,Integrability,depend,depends,10091,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:10331,Integrability,depend,depends,10331,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:477,Modifiability,extend,extends,477,". UserDirectoryManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final St",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3968,Modifiability,inherit,inherited,3968,"the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LO",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:4042,Security,hash,hashCode,4042,"nDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1240,Testability,log,logDirectory,1240,"thod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1290,Testability,log,log,1290,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class UserDirectoryManager. java.lang.Object; qupath.lib.gui.UserDirectoryManager. public class UserDirectoryManager; extends Object; Helper class for managing a user directory, and associated subdirectories.; ; Note that only the main user directory can be directly specified. ; Other directories are derived from this. Since:; v0.5.0; Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Path>; colormapsDirectory. Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; cssDirectory. Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the cu",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:1975,Testability,log,log,1975,nting the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectory. Read only property representing the extensions directory. ReadOnlyObjectProperty<Path>; localizationDirectory. Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectory. Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectory. Read only property representing the shared scripts directory. ObjectProperty<Path>; userDirectory. Property representing the user directory. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DIR_COLORMAPS. Name of subdirectory containing colormaps. static final String; DIR_CSS. Name of subdirectory containing css files for styling. static final String; DIR_EXTENSIONS. Name of subdirectory containing extensions. static final String; DIR_LOCALIZATION. Name of subdirectory containing properties files for localization. static final String; DIR_LOGS. Name of subdirectory containing log files. static final String; DIR_SCRIPTS. Name of subdirectory containing shared scripts. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInst,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3186,Testability,log,log,3186,"nlyObjectProperty<Path>; colormapsDirectoryProperty(). Read only property representing the custom colormaps directory. ReadOnlyObjectProperty<Path>; createRelativePathProperty(String other). Create a read only property for a relative path of the user subdirectory. ReadOnlyObjectProperty<Path>; cssDirectoryProperty(). Read only property representing the css directory. ReadOnlyObjectProperty<Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Proper",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3585,Testability,log,logDirectoryProperty,3585,"Path>; extensionsDirectoryProperty(). Read only property representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3645,Testability,log,log,3645,"y representing the extensions directory. Path; getColormapsDirectoryPath(). Get the path to where colormaps should be written. Path; getCssStylesPath(). Get the path to where user directory for storing CSS styles. Path; getExtensionsPath(). Get the path to where extensions should be stored. static UserDirectoryManager; getInstance(). Get the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Re",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5033,Testability,log,logDirectory,5033,t. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdire,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5083,Testability,log,logDirectoryProperty,5083,t. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdire,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5141,Testability,log,log,5141,t. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdire,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:5228,Testability,log,logDirectoryProperty,5228,ull if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; public ReadOnlyObjectProperty<Path> logDirectoryProperty; Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. See Also:. logDirectoryProperty(). scriptsDirectory; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty; Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdirectory containing shared scripts. See Also:. Constant Field Values. DIR_COLORMAPS; public static final String DIR_COLORMAPS; Name of subdirector,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:6376,Testability,log,log,6376, property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. See Also:. scriptsDirectoryProperty(). colormapsDirectory; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty; Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. See Also:. colormapsDirectoryProperty(). Field Details. DIR_EXTENSIONS; public static final String DIR_EXTENSIONS; Name of subdirectory containing extensions. See Also:. Constant Field Values. DIR_CSS; public static final String DIR_CSS; Name of subdirectory containing css files for styling. See Also:. Constant Field Values. DIR_SCRIPTS; public static final String DIR_SCRIPTS; Name of subdirectory containing shared scripts. See Also:. Constant Field Values. DIR_COLORMAPS; public static final String DIR_COLORMAPS; Name of subdirectory containing colormaps. See Also:. Constant Field Values. DIR_LOGS; public static final String DIR_LOGS; Name of subdirectory containing log files. See Also:. Constant Field Values. DIR_LOCALIZATION; public static final String DIR_LOCALIZATION; Name of subdirectory containing properties files for localization. See Also:. Constant Field Values. Method Details. getInstance; public static UserDirectoryManager getInstance(); Get the singleton instance of the UserDirectoryManager. Returns:. createRelativePathProperty; public ReadOnlyObjectProperty<Path> createRelativePathProperty(String other); Create a read only property for a relative path of the user subdirectory.; This can be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directo,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:7849,Testability,log,logDirectoryProperty,7849,an be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. Returns:. cssDirectoryProperty; public ReadOnlyObjectProperty<Path> cssDirectoryProperty(); Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. Returns:. localizationDirectoryProperty; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty(); Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. Returns:. logDirectoryProperty; public ReadOnlyObjectProperty<Path> logDirectoryProperty(); Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. Returns:. scriptsDirectoryProperty; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty(); Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Thr,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:7907,Testability,log,logDirectoryProperty,7907,an be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. Returns:. cssDirectoryProperty; public ReadOnlyObjectProperty<Path> cssDirectoryProperty(); Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. Returns:. localizationDirectoryProperty; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty(); Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. Returns:. logDirectoryProperty; public ReadOnlyObjectProperty<Path> logDirectoryProperty(); Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. Returns:. scriptsDirectoryProperty; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty(); Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Thr,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:7967,Testability,log,log,7967,an be used if the default subdirectories aren't sufficient. Parameters:; other - ; Returns:. userDirectoryProperty; public ObjectProperty<Path> userDirectoryProperty(); Property representing the user directory.; This may be null if the directory has not been set. Returns:. extensionsDirectoryProperty; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty(); Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. Returns:. cssDirectoryProperty; public ReadOnlyObjectProperty<Path> cssDirectoryProperty(); Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. Returns:. localizationDirectoryProperty; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty(); Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. Returns:. logDirectoryProperty; public ReadOnlyObjectProperty<Path> logDirectoryProperty(); Read only property representing the log file directory.; This is based upon userDirectoryProperty and DIR_LOGS. Returns:. scriptsDirectoryProperty; public ReadOnlyObjectProperty<Path> scriptsDirectoryProperty(); Read only property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Thr,MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9565,Testability,log,log,9565,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html:445,Modifiability,extend,extends,445,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/WelcomeStage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html:935,Modifiability,inherit,inherited,935,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/WelcomeStage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html
https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html:1009,Security,hash,hashCode,1009,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,javadoc/docs/qupath/lib/gui/WelcomeStage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:3877,Deployability,update,updateServerMetadata,3877,"). Notify listeners of a change in the hierarchy or its objects. boolean; isBrightfield(). Returns true if the image type is set to brightfield. boolean; isChanged(). Returns true if changes have been recorded since the last time this object was notified that it was saved. boolean; isFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4043,Deployability,update,updated,4043,"anged(). Returns true if changes have been recorded since the last time this object was notified that it was saved. boolean; isFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkf",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:5424,Deployability,update,updateServerMetadata,5424,"mageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the processing steps applied to the ImageData. Returns:. setColorDeconvolutionStains; public void setColorDeconvolutionStains(ColorDeconvolutionStains stains); Set the color deconvolution stain vectors for the current image type.; ; If the type is not brightfield, an IllegalArgumentException is thrown. Parameters:; stains - . updateServerMetadata; public void updateServerMetadata(ImageServerMetadata newMetadata); Update the ImageServer metadata. The benefit of using this method rather than manipulating ; the ImageServer directly is that it will fire a property change. Parameters:; newMetadata - . isBrightfield; public boolean isBrightfield(); Returns true if the image type is set to brightfield. Returns:. isFluorescence; public boolean isFluorescence(); Returns true if the image type is set to fluorescence. Returns:. setImageType; public void setImageType(ImageData.ImageType type); Set the image type. Parameters:; type - . getServer; public ImageServer<T> getServer(); Get the ImageServer. Returns:. getServerPath; public String getServerPath(); Get the path of the ImageServer. Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy. Returns:. getImageType; public ImageData.ImageType getImageType(); Get the image type. Returns:. getColorDeconvolutionStains; public ColorDeconvolutionStains getColorDeconvolutionStains(); Get the stain",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:5458,Deployability,update,updateServerMetadata,5458,"mageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the processing steps applied to the ImageData. Returns:. setColorDeconvolutionStains; public void setColorDeconvolutionStains(ColorDeconvolutionStains stains); Set the color deconvolution stain vectors for the current image type.; ; If the type is not brightfield, an IllegalArgumentException is thrown. Parameters:; stains - . updateServerMetadata; public void updateServerMetadata(ImageServerMetadata newMetadata); Update the ImageServer metadata. The benefit of using this method rather than manipulating ; the ImageServer directly is that it will fire a property change. Parameters:; newMetadata - . isBrightfield; public boolean isBrightfield(); Returns true if the image type is set to brightfield. Returns:. isFluorescence; public boolean isFluorescence(); Returns true if the image type is set to fluorescence. Returns:. setImageType; public void setImageType(ImageData.ImageType type); Set the image type. Parameters:; type - . getServer; public ImageServer<T> getServer(); Get the ImageServer. Returns:. getServerPath; public String getServerPath(); Get the path of the ImageServer. Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy. Returns:. getImageType; public ImageData.ImageType getImageType(); Get the image type. Returns:. getColorDeconvolutionStains; public ColorDeconvolutionStains getColorDeconvolutionStains(); Get the stain",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8666,Deployability,update,updated,8666,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:922,Integrability,depend,depending,922,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8313,Integrability,interface,interface,8313,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8450,Integrability,interface,interface,8450,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8601,Integrability,interface,interface,8601,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:8747,Integrability,interface,interface,8747,"perty change listener. Parameters:; listener - . getProperty; public Object getProperty(String key); Get a specified property. Parameters:; key - ; Returns:. setProperty; public Object setProperty(String key,; Object value); Set a property. Note that if properties are Serializable, they will be included in ; associated data files - otherwise they are stored only transiently. Parameters:; key - ; value - ; Returns:. removeProperty; public Object removeProperty(String key); Remove a specified property. Parameters:; key - ; Returns:. getProperties; public Map<String,Object> getProperties(); Get an unmodifiable map representing all known properties for this ImageData. Returns:. getLastSavedPath; public String getLastSavedPath(); Get the last path used to save this object;. Returns:. isChanged; public boolean isChanged(); Returns true if changes have been recorded since the last time this object was notified that it was saved. Returns:; See Also:. setLastSavedPath(java.lang.String, boolean). setChanged; public void setChanged(boolean isChanged); Set isChanged() status. Parameters:; isChanged - . setLastSavedPath; public void setLastSavedPath(String path,; boolean resetChanged); Set the last path used to save this object;. Parameters:; path - ; resetChanged - If true, then the isChanged() flag will be reset to false;. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied from interface: WorkflowListener; Called whenever a Workflow has been updated in some way, such as a new step added. Specified by:; workflowUpdated in interface WorkflowListener; Parameters:; workflow - . toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:563,Modifiability,extend,extends,563,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4098,Modifiability,inherit,inherited,4098,"he last time this object was notified that it was saved. boolean; isFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the process",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:845,Safety,detect,detections,845,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:773,Security,access,access,773,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4172,Security,hash,hashCode,4172,"sFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the processing steps applied to the ImageData. Returns:. setColorDeconvolution",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:885,Integrability,interface,interfaces,885,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:678,Modifiability,extend,extends,678,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:896,Modifiability,inherit,inherited,896,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:949,Modifiability,extend,extends,949,". ImageData.ImageType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images; Enum Class ImageData.ImageType. java.lang.Object; java.lang.Enum<ImageData.ImageType>; qupath.lib.images.ImageData.ImageType. All Implemented Interfaces:; Serializable, Comparable<ImageData.ImageType>, Constable. Enclosing class:; ImageData<T>. public static enum ImageData.ImageType; extends Enum<ImageData.ImageType>; Enum representing possible image types.; ; TODO: Warning! This is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:1765,Modifiability,inherit,inherited,1765,"is is liable to change in the future to remove specific stain information. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array co",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:1918,Modifiability,inherit,inherited,1918,".Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:1876,Security,hash,hashCode,1876,"ed Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html:525,Security,access,accessing,525,. qupath.lib.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images. package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. ,MatchSource.WIKI,javadoc/docs/qupath/lib/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/package-tree.html:416,Modifiability,plugin,plugins,416,". qupath.lib.images Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.images. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.images.ImageData<T> (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.plugins.workflow.WorkflowListener). Interface Hierarchy. qupath.lib.images.PathImage<T>. Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.images.ImageData.ImageType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:807,Availability,down,downsample,807,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:1221,Availability,down,downsampling,1221,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:1393,Availability,down,downsample,1393,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:1664,Availability,down,downsampling,1664,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:406,Integrability,interface,interface,406,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/images/PathImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:488,Integrability,wrap,wrap,488,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:886,Integrability,wrap,wrapped,886,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:921,Integrability,wrap,wrap,921,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1089,Integrability,wrap,wrap,1089,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1603,Integrability,wrap,wrapped,1603,"oJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1622,Integrability,wrap,wrap,1622,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1660,Integrability,wrap,wrap,1660,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:2077,Integrability,wrap,wrap,2077,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:2104,Integrability,wrap,wrap,2104,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:2142,Integrability,wrap,wrap,2142,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:463,Modifiability,extend,extends,463,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:825,Modifiability,extend,extends,825,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:939,Modifiability,extend,extends,939,". FeatureCollection (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1107,Modifiability,extend,extends,1107,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1236,Modifiability,inherit,inherited,1236," Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1543,Modifiability,extend,extends,1543,"oJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1678,Modifiability,extend,extends,1678,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:2160,Modifiability,extend,extends,2160,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1310,Security,hash,hashCode,1310,"Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; e",MatchSource.WIKI,javadoc/docs/qupath/lib/io/FeatureCollection.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:495,Energy Efficiency,adapt,adapters,495,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2046,Energy Efficiency,adapt,adapters,2046,".SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:495,Integrability,adapter,adapters,495,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2046,Integrability,adapter,adapters,2046,".SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2900,Integrability,interface,interface,2900,"uilder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; public static Gson getInstance(); Get default Gson, capable of serializing/deserializing some key QuPath classes. Returns:; See Also:. getInstance(boolean). getInstance; public static Gson getInstance(boolean pretty); Get default Gson, optionally with pretty printing enabled. Parameters:; pretty - if true, write using pretty-printing (i.e. more whitespace for formatting); Returns:; See Also:. getInstance(). parseObjectsFromGeoJSON; public static List<PathObject> parseObjectsFromGeoJSON(JsonElement element); throws JsonParseException; Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON.; ; This deals with the fact that objects can be stored in different forms: as a Feature, FeatureCollection, or; array of Features.; ; This method can be provided with other JsonElements, and provided they do not contain characteristic; GeoJSON fields (i.e. a ""type"" of ""Feature"", ""Featur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:431,Modifiability,extend,extends,431,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:495,Modifiability,adapt,adapters,495,". GsonTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools. java.lang.Object; qupath.lib.io.GsonTools. public class GsonTools; extends Object; Helper class providing Gson instances with type adapters registered to serialize ; several key classes.; ; These include:; ; PathObject; PathClass; ROI; ImagePlane; Java Topology Suite Geometry objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1692,Modifiability,inherit,inherited,1692,"ed Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2046,Modifiability,adapt,adapters,2046,".SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:2353,Modifiability,inherit,inherits,2353," Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using a specific field in the JSON representation. Type Parameters:; T - ; Parameters:; baseType - the base type, i.e. the class or interface that all types descend from; typeFieldName - a field name to include within the serialized JSON object to identify the specific type; Returns:. getInstance; public static Gson getInstance(); Get default Gson, capable of serializing/deserializing some key QuPath classes. Returns:; See Also:. getInstance(boolean). getInstance; public static Gson getInstance(boolean pretty); Get default Gson, optionally with pretty printing enabled. Parameters:; pretty - if",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1766,Security,hash,hashCode,1766,"ols.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:906,Availability,avail,available,906,". GsonTools.SubTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubT",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2377,Integrability,interface,interface,2377,"the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:637,Modifiability,extend,extends,637,". GsonTools.SubTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubT",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1746,Modifiability,extend,extends,1746,"s hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identif",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1891,Modifiability,extend,extends,1891,"ntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2047,Modifiability,extend,extends,2047,"/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtyp",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2132,Modifiability,inherit,inherited,2132," Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for s",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2490,Modifiability,extend,extends,2490,"d is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a s",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2958,Modifiability,extend,extends,2958,"s label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a subtype using the default label (the simple name of the class).; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:3471,Modifiability,extend,extends,3471,"s label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a subtype using the default label (the simple name of the class).; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1364,Safety,avoid,avoids,1364,".lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2206,Security,hash,hashCode,2206,"r of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1960,Usability,simpl,simple,1960,"t the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:3540,Usability,simpl,simple,3540,"s label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a subtype using the default label (the simple name of the class).; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1445,Availability,avail,available,1445,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:672,Energy Efficiency,adapt,adapters,672,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:516,Integrability,wrap,wrap,516,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:672,Integrability,adapter,adapters,672,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1194,Integrability,depend,depend,1194,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:672,Modifiability,adapt,adapters,672,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1225,Modifiability,extend,extends,1225,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:860,Performance,load,loading,860,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1425,Security,access,access,1425,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:2151,Energy Efficiency,reduce,reduce,2151,"g for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathIO.GeoJsonExportOptions valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:851,Integrability,interface,interfaces,851,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:712,Modifiability,extend,extends,712,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:862,Modifiability,inherit,inherited,862,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:915,Modifiability,extend,extends,915,". PathIO.GeoJsonExportOptions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class PathIO.GeoJsonExportOptions. java.lang.Object; java.lang.Enum<PathIO.GeoJsonExportOptions>; qupath.lib.io.PathIO.GeoJsonExportOptions. All Implemented Interfaces:; Serializable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger file",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1568,Modifiability,inherit,inherited,1568,"alizable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the cons",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1731,Modifiability,inherit,inherited,1731,"ExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1679,Security,hash,hashCode,1679,"IO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array contai",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:6821,Availability,error,error,6821,"verPath(File file); throws FileNotFoundException,; IOException,; ClassNotFoundException; Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. ; In v0.2 and later, the server path is in general not sufficient to construct a server, and this method lingers ; only for backwards compatibility. It will be removed in a later version. Read the server path from a serialized file, if present. This is assumed to be the first line within the file. Parameters:; file - ; Returns:; The server path that is stored within the file, or null if no path could be found.; Throws:; IOException; FileNotFoundException; ClassNotFoundException; See Also:. extractServerBuilder(Path). extractServerBuilder; public static <T>; ImageServerBuilder.ServerBuilder<T> extractServerBuilder(Path file); throws IOException; Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. Parameters:; file - ; Returns:; Throws:; IOException - if there is an error creating a ImageServerBuilder.ServerBuilder, or the file is not a valid QuPath data file.; Since:; 0.3. createObjectInputStream; public static final ObjectInputStream createObjectInputStream(InputStream stream); throws IOException; Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. Parameters:; stream - ; Returns:; Throws:; IOException. readImageData; public static <T> ImageData<T> readImageData(InputStream stream,; ImageData<T> imageData,; ImageServer<T> server,; Class<T> cls); throws IOException; Read ImageData from an InputStream into an existing ImageData object, or creating a new one if required. Parameters:; stream - ; imageData - ; server - an ImageServer to use rather than any that might be stored within the serialized data. Should be null to use the serialized path to build a new server.; The main purpose of this is to make it possible to open ImageData where the original image location ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:419,Modifiability,extend,extends,419,". PathIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExt",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1064,Modifiability,extend,extends,1064,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObj",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1285,Modifiability,extend,extends,1285,"hod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObjectFileExtensions(boolean includeCompressed). Get a list of known file extensions that may contain objects, optionally including compressed files. static int; getRequestedDataFileVersion(). Get the requested version ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1506,Modifiability,extend,extends,1506," Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObjectFileExtensions(boolean includeCompressed). Get a list of known file extensions that may contain objects, optionally including compressed files. static int; getRequestedDataFileVersion(). Get the requested version for .qpdata files. static PathObjectHierarchy; readHierarchy(File file). Read a hierarchy from a .qpdata file. static PathObjectHierarchy; readHierarchy(InputStream fileIn). Read a PathObjectHierarchy from a saved data file (o",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:4361,Modifiability,inherit,inherited,4361,"hObject>; readObjects(Path path). Read a list of PathObject from a file. static List<PathObject>; readObjectsFromGeoJSON(InputStream stream). Read a list of PathObject from an input stream. static String; readSerializedServerPath(File file). Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. static void; setRequestedDataFileVersion(int version). Set the requested version for .qpdata files. static Set<String>; unzippedExtensions(Path path,; String... zipExtensions). Get the extension of a file, or of all entries within a zip file. static void; writeImageData(File file,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. static void; writeImageData(OutputStream stream,; ImageData<?> imageData). Serialize an ImageData object to an output stream. static void; writeImageData(Path path,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRequestedDataFileVersion; public static int getRequestedDataFileVersion(); Get the requested version for .qpdata files. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). getCurrentDataFileVersion; public static int getCurrentDataFileVersion(); Get the current preferred data file version. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). setRequestedDataFileVersion; public static void setRequestedDataFileVersion(int version); throws IllegalArgumentException; Set the requested version for .qpdata files.; ; ; 1.0 Initial version stored in very early .qpdata files (no longer supported); 2 Switched versions to use integers, added Locale information (used in QuPath v0.1.2); 3 Switched ImageServer paths to be a JSON representation rather than a single path/URL; 4 Added su",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:13509,Modifiability,extend,extends,13509,"m containing JSON data to read; Returns:; a list containing any PathObjects that could be parsed from the stream; Throws:; IOException; JsonSyntaxException; JsonParseException. getObjectFileExtensions; public static List<String> getObjectFileExtensions(boolean includeCompressed); Get a list of known file extensions that may contain objects, optionally including compressed files. Parameters:; includeCompressed - if true, include extensions for any compressed files that might contain objects (e.g. .zip); Returns:; file extensions for files from which objects can be read.; Since:; v0.4.0; See Also:. readObjects(Path). getObjectFileExtensions; @Deprecated; public static List<String> getObjectFileExtensions(); Deprecated.; use getObjectFileExtensions(boolean) instead. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:13920,Modifiability,extend,extends,13920,"d - if true, include extensions for any compressed files that might contain objects (e.g. .zip); Returns:; file extensions for files from which objects can be read.; Since:; v0.4.0; See Also:. readObjects(Path). getObjectFileExtensions; @Deprecated; public static List<String> getObjectFileExtensions(); Deprecated.; use getObjectFileExtensions(boolean) instead. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream - ; pathObjects - ; options - ; Throws:; IOException. unzippedExtensions; public static Set<String> unzippedExtensions(Path path,; String... zipExtensions); throws IOException; Get the extension of a file, or of all entries within a zip file.; This is useful to check the contents of a file before attempting to read any of it,; for example to confirm if the file is likely to contain images or objects.; ; Not",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:14285,Modifiability,extend,extends,14285,"d. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream - ; pathObjects - ; options - ; Throws:; IOException. unzippedExtensions; public static Set<String> unzippedExtensions(Path path,; String... zipExtensions); throws IOException; Get the extension of a file, or of all entries within a zip file.; This is useful to check the contents of a file before attempting to read any of it,; for example to confirm if the file is likely to contain images or objects.; ; Note that the identification of the zip file is based solely on the file extension, ; but the attempt to extracted zipped entries will fail if the file is not a valid zip file. Parameters:; path - path representing a file or zip file; zipExtensions - optional list of extensions to treat as representing zip files. ; If none are specified, the default is to use '",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:453,Performance,load,loading,453,". PathIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExt",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:4435,Security,hash,hashCode,4435," static List<PathObject>; readObjectsFromGeoJSON(InputStream stream). Read a list of PathObject from an input stream. static String; readSerializedServerPath(File file). Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. static void; setRequestedDataFileVersion(int version). Set the requested version for .qpdata files. static Set<String>; unzippedExtensions(Path path,; String... zipExtensions). Get the extension of a file, or of all entries within a zip file. static void; writeImageData(File file,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. static void; writeImageData(OutputStream stream,; ImageData<?> imageData). Serialize an ImageData object to an output stream. static void; writeImageData(Path path,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRequestedDataFileVersion; public static int getRequestedDataFileVersion(); Get the requested version for .qpdata files. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). getCurrentDataFileVersion; public static int getCurrentDataFileVersion(); Get the current preferred data file version. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). setRequestedDataFileVersion; public static void setRequestedDataFileVersion(int version); throws IllegalArgumentException; Set the requested version for .qpdata files.; ; ; 1.0 Initial version stored in very early .qpdata files (no longer supported); 2 Switched versions to use integers, added Locale information (used in QuPath v0.1.2); 3 Switched ImageServer paths to be a JSON representation rather than a single path/URL; 4 Added support for UUID to be stored in each PathObject (introducted QuPath v0.4.",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PathIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:2636,Deployability,release,releases,2636,"difier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IOException. readPointsObjectList; @Deprecated; public static List<PathObject> readPointsObjectList(File file); throws ZipException,; IOException; Deprecated.; Read a list of point annotations from a file. Not recommended for use (will be removed in future releases). Parameters:; file - ; Returns:; Throws:; ZipException; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:423,Modifiability,extend,extends,423,". PointIO (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1072,Modifiability,extend,extends,1072,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1211,Modifiability,extend,extends,1211,"l:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void w",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1300,Modifiability,inherit,inherited,1300,"thod. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:2001,Modifiability,extend,extends,2001,"difier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IOException. readPointsObjectList; @Deprecated; public static List<PathObject> readPointsObjectList(File file); throws ZipException,; IOException; Deprecated.; Read a list of point annotations from a file. Not recommended for use (will be removed in future releases). Parameters:; file - ; Returns:; Throws:; ZipException; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:2233,Modifiability,extend,extends,2233,"difier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IOException. readPointsObjectList; @Deprecated; public static List<PathObject> readPointsObjectList(File file); throws ZipException,; IOException; Deprecated.; Read a list of point annotations from a file. Not recommended for use (will be removed in future releases). Parameters:; file - ; Returns:; Throws:; ZipException; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1374,Security,hash,hashCode,1374,"path.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IO",MatchSource.WIKI,javadoc/docs/qupath/lib/io/PointIO.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:767,Availability,robust,robust,767,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:459,Modifiability,extend,extends,459,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:1886,Modifiability,inherit,inherited,1886,"AScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAScoreImporter; public TMAScoreImporter(). Method Details. importFromCSV; public static int importFromCSV(File file,; PathObjectHierarchy hierarchy); throws IOException; Import TMA scores from a file into the TMAGrid of an object hierarchy. Parameters:; file - ; hierarchy - ; Returns:; Throws:; IOException. importFromCSV; public static int importFromCSV(String text,; PathObjectHierarchy hierarchy); Import TMA scores from a String into the TMAGrid of an object hierarchy. Parameters:; text - ; hierarchy - ; Returns:. parseNumeric; public static double[] parseNumeric(List<String> list,; boolean allOrNothing); Parse numeric values from a list of strings.; . Parameters:; list - list of strings containing the input text. Empty or null strings are treated as missing and returned as NaN.; allOrNothing - is true, the assumption is made that all values ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:728,Safety,detect,detect,728,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:1960,Security,hash,hashCode,1960,"ethods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAScoreImporter; public TMAScoreImporter(). Method Details. importFromCSV; public static int importFromCSV(File file,; PathObjectHierarchy hierarchy); throws IOException; Import TMA scores from a file into the TMAGrid of an object hierarchy. Parameters:; file - ; hierarchy - ; Returns:; Throws:; IOException. importFromCSV; public static int importFromCSV(String text,; PathObjectHierarchy hierarchy); Import TMA scores from a String into the TMAGrid of an object hierarchy. Parameters:; text - ; hierarchy - ; Returns:. parseNumeric; public static double[] parseNumeric(List<String> list,; boolean allOrNothing); Parse numeric values from a list of strings.; . Parameters:; list - list of strings containing the input text. Empty or null strings are treated as missing and returned as NaN.; allOrNothing - is true, the assumption is made that all values will be numeric or none of them will.; Consequently, if any non-missing,",MatchSource.WIKI,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:969,Deployability,update,updateUris,969,"iResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsupport",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:1020,Deployability,update,updateURIs,1020,"iResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsupport",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:1188,Deployability,update,updateUris,1188,"mmary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOE",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:1216,Deployability,update,updateUris,1216,"mmary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOE",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:1507,Deployability,update,updateURIs,1507," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:1527,Deployability,update,updateURIs,1527," ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException; Since:; v0.4.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:562,Integrability,interface,interface,562,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:612,Integrability,depend,depend,612,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html:705,Safety,predict,prediction,705,". UriResource (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Interface UriResource. All Known Subinterfaces:; ImageDataOp, ImageOp, ProjectImageEntry<T>. All Known Implementing Classes:; DnnObjectClassifier, ImageOps.PaddedOp, OpenCVDnn, OpenCVModelObjectClassifier. public interface UriResource; Interface for objects that depend upon URIs.; Examples include images, where the URI refer to the image file or URL, or prediction models. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default Collection<URI>; getUris();  ; Collection<URI>; getURIs(). Get all the URIs required for this resource. default boolean; updateUris(Map<URI,URI> replacements);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Method Details. getUris; default Collection<URI> getUris(); throws IOException. Throws:; IOException. updateUris; default boolean updateUris(Map<URI,URI> replacements); throws IOException. Throws:; IOException. getURIs; Collection<URI> getURIs(); throws IOException; Get all the URIs required for this resource. This is often an empty or singleton list. Returns:; the required URIs; Throws:; IOException; Since:; v0.4.0. updateURIs; boolean updateURIs(Map<URI,URI> replacements); throws IOException; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an Unsup",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriResource.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriResource.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:838,Availability,avail,available,838,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:2373,Deployability,update,update,2373," to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap o",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:2505,Deployability,update,update,2505,"lection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getCla",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:2631,Deployability,update,updatedItem,2631,"dater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3319,Deployability,update,updated,3319,"ateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> repl",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3439,Deployability,update,updated,3439," static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a co",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5026,Deployability,update,updated,5026,"RIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... s",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5245,Deployability,update,updated,5245,"Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the sea",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5520,Deployability,update,update,5520,"include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as 'path' that does exist, ; or path unchanged if no existing file could be found.; Throws:; IOException. fixUris; public static int fixUris(UriResource resource,; Project<?> project); Attempt to f",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:6048,Deployability,update,update,6048," changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as 'path' that does exist, ; or path unchanged if no existing file could be found.; Throws:; IOException. fixUris; public static int fixUris(UriResource resource,; Project<?> project); Attempt to fix any broken paths by updating URIs based upon the current project. Parameters:; resource - the resource to update; project - ; Returns:; number of URIs that were updated. searchDepth; public UriUpdater<T> searchDepth(int maxDepth); Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. Parameters:; maxDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:6642,Deployability,update,update,6642,"epth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as 'path' that does exist, ; or path unchanged if no existing file could be found.; Throws:; IOException. fixUris; public static int fixUris(UriResource resource,; Project<?> project); Attempt to fix any broken paths by updating URIs based upon the current project. Parameters:; resource - the resource to update; project - ; Returns:; number of URIs that were updated. searchDepth; public UriUpdater<T> searchDepth(int maxDepth); Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. Parameters:; maxDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is generally used to make corrections whenever a project has been moved. Parameters:; uriOriginal - the previous path (usually for the project); uriCurrent - the current path; Returns:. relative; public UriUpdater<T> relative(Path pathOriginal,; Path pathCurrent); Identify replacements for missing URIs by relativizing paths.; This is generally used to make corrections whenever a project has been moved. Parameters:; pathOriginal - the previous path (usually for the project); pathCurrent - the current path; Returns:. searchPath; public UriUpdater<T> searchPath(Path path); Search for filenames that mat",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:6697,Deployability,update,updated,6697,"epth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as 'path' that does exist, ; or path unchanged if no existing file could be found.; Throws:; IOException. fixUris; public static int fixUris(UriResource resource,; Project<?> project); Attempt to fix any broken paths by updating URIs based upon the current project. Parameters:; resource - the resource to update; project - ; Returns:; number of URIs that were updated. searchDepth; public UriUpdater<T> searchDepth(int maxDepth); Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. Parameters:; maxDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is generally used to make corrections whenever a project has been moved. Parameters:; uriOriginal - the previous path (usually for the project); uriCurrent - the current path; Returns:. relative; public UriUpdater<T> relative(Path pathOriginal,; Path pathCurrent); Identify replacements for missing URIs by relativizing paths.; This is generally used to make corrections whenever a project has been moved. Parameters:; pathOriginal - the previous path (usually for the project); pathCurrent - the current path; Returns:. searchPath; public UriUpdater<T> searchPath(Path path); Search for filenames that mat",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:7908,Deployability,update,updatedItem,7908,"axDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is generally used to make corrections whenever a project has been moved. Parameters:; uriOriginal - the previous path (usually for the project); uriCurrent - the current path; Returns:. relative; public UriUpdater<T> relative(Path pathOriginal,; Path pathCurrent); Identify replacements for missing URIs by relativizing paths.; This is generally used to make corrections whenever a project has been moved. Parameters:; pathOriginal - the previous path (usually for the project); pathCurrent - the current path; Returns:. searchPath; public UriUpdater<T> searchPath(Path path); Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). Parameters:; path - the base directory within which to search; Returns:; See Also:. searchDepth(int). makeReplacement; public UriUpdater<T> makeReplacement(URI originalItem,; URI updatedItem); Add a single replacement to the replacement map. Parameters:; originalItem - current URI for a missing resource; updatedItem - updated URI to use instead; Returns:. getReplacements; public Map<URI,URI> getReplacements(); Get a map of all replacements. Returns:. applyReplacements; public int applyReplacements(); throws IOException; Apply all current replacements, updating the UriResource objects. Returns:; Throws:; IOException. countMissing; public int countMissing(); Get a count of the items flagged as missing. Returns:. countReplacements; public int countReplacements(); Get a count of the number of replacements for missing items. Returns:. getMissingItems; public Collection<UriUpdater.SingleUriItem> getMissingItems(); Get all missing items. Returns:. getItems; public Collection<UriUpdater.SingleUriItem> getItems(UriUpdater.UriStatus status); Get all items with the specified status, or all items is status is null. Parameters:; status - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:8035,Deployability,update,updatedItem,8035,"axDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is generally used to make corrections whenever a project has been moved. Parameters:; uriOriginal - the previous path (usually for the project); uriCurrent - the current path; Returns:. relative; public UriUpdater<T> relative(Path pathOriginal,; Path pathCurrent); Identify replacements for missing URIs by relativizing paths.; This is generally used to make corrections whenever a project has been moved. Parameters:; pathOriginal - the previous path (usually for the project); pathCurrent - the current path; Returns:. searchPath; public UriUpdater<T> searchPath(Path path); Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). Parameters:; path - the base directory within which to search; Returns:; See Also:. searchDepth(int). makeReplacement; public UriUpdater<T> makeReplacement(URI originalItem,; URI updatedItem); Add a single replacement to the replacement map. Parameters:; originalItem - current URI for a missing resource; updatedItem - updated URI to use instead; Returns:. getReplacements; public Map<URI,URI> getReplacements(); Get a map of all replacements. Returns:. applyReplacements; public int applyReplacements(); throws IOException; Apply all current replacements, updating the UriResource objects. Returns:; Throws:; IOException. countMissing; public int countMissing(); Get a count of the items flagged as missing. Returns:. countReplacements; public int countReplacements(); Get a count of the number of replacements for missing items. Returns:. getMissingItems; public Collection<UriUpdater.SingleUriItem> getMissingItems(); Get all missing items. Returns:. getItems; public Collection<UriUpdater.SingleUriItem> getItems(UriUpdater.UriStatus status); Get all items with the specified status, or all items is status is null. Parameters:; status - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:8049,Deployability,update,updated,8049,"axDepth - ; Returns:. relative; public UriUpdater<T> relative(URI uriOriginal,; URI uriCurrent); Identify replacements for missing URIs by relativizing URI.; This is generally used to make corrections whenever a project has been moved. Parameters:; uriOriginal - the previous path (usually for the project); uriCurrent - the current path; Returns:. relative; public UriUpdater<T> relative(Path pathOriginal,; Path pathCurrent); Identify replacements for missing URIs by relativizing paths.; This is generally used to make corrections whenever a project has been moved. Parameters:; pathOriginal - the previous path (usually for the project); pathCurrent - the current path; Returns:. searchPath; public UriUpdater<T> searchPath(Path path); Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). Parameters:; path - the base directory within which to search; Returns:; See Also:. searchDepth(int). makeReplacement; public UriUpdater<T> makeReplacement(URI originalItem,; URI updatedItem); Add a single replacement to the replacement map. Parameters:; originalItem - current URI for a missing resource; updatedItem - updated URI to use instead; Returns:. getReplacements; public Map<URI,URI> getReplacements(); Get a map of all replacements. Returns:. applyReplacements; public int applyReplacements(); throws IOException; Apply all current replacements, updating the UriResource objects. Returns:; Throws:; IOException. countMissing; public int countMissing(); Get a count of the items flagged as missing. Returns:. countReplacements; public int countReplacements(); Get a count of the number of replacements for missing items. Returns:. getMissingItems; public Collection<UriUpdater.SingleUriItem> getMissingItems(); Get all missing items. Returns:. getItems; public Collection<UriUpdater.SingleUriItem> getItems(UriUpdater.UriStatus status); Get all items with the specified status, or all items is status is null. Parameters:; status - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3246,Integrability,wrap,wrap,3246,"cements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3357,Integrability,wrap,wrap,3357,". Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:4921,Integrability,wrap,wrap,4921,"ows IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public sta",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:4953,Integrability,wrap,wrap,4953,"ows IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public sta",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5131,Integrability,wrap,wrap,5131,"Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the sea",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5163,Integrability,wrap,wrap,5163,"Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the sea",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:367,Modifiability,extend,extends,367,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:486,Modifiability,extend,extends,486,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:508,Modifiability,extend,extends,508,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1299,Modifiability,extend,extends,1299,"ckage qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int s",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1463,Modifiability,extend,extends,1463,"rce>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt t",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1713,Modifiability,extend,extends,1713," Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,;",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3465,Modifiability,inherit,inherited,3465,"ath... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3637,Modifiability,extend,extends,3637,"pdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3870,Modifiability,extend,extends,3870,"dater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static Uri",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:4128,Modifiability,extend,extends,4128," URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResour",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:818,Security,access,access,818,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3539,Security,hash,hashCode,3539,"ing the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5333,Security,access,accessed,5333," a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:616,Availability,avail,available,616,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:483,Modifiability,extend,extends,483,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:551,Modifiability,extend,extends,551,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:995,Modifiability,inherit,inherited,995,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:596,Security,access,access,596,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:949,Security,hash,hashCode,949,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:1448,Security,hash,hashCode,1448,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:1469,Security,hash,hashCode,1469,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:1493,Security,hash,hashCode,1493,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:859,Integrability,interface,interfaces,859,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:634,Modifiability,extend,extends,634,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:697,Modifiability,extend,extends,697,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:870,Modifiability,inherit,inherited,870,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:923,Modifiability,extend,extends,923,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1537,Modifiability,inherit,inherited,1537,"erializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the spec",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1700,Modifiability,inherit,inherited,1700,"m<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:803,Security,access,accessible,803,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1648,Security,hash,hashCode,1648,"er<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum co",MatchSource.WIKI,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html:425,Integrability,interface,interface,425,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/Measurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html:476,Integrability,interface,interface,476,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/Measurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html:448,Modifiability,extend,extends,448,". Measurement (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface Measurement. All Superinterfaces:; Serializable. public interface Measurement; extends Serializable; Basic interface to define a measurement.; ; This was originally intended to support both static and dynamic measurements, ; but the functionality is rarely used now. It may be removed in the future. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDeprecated Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the measurement. double; getValue(). Get the numeric value of the measurement. boolean; isDynamic(). Deprecated. Method Details. getName; String getName(); Get the name of the measurement. Returns:. getValue; double getValue(); Get the numeric value of the measurement. Returns:. isDynamic; @Deprecated; boolean isDynamic(); Deprecated.; Returns true if a measurement can change its value, for example because of changes in ; a object or hierarchy. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/Measurement.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/Measurement.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html:500,Modifiability,extend,extends,500,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html:1166,Modifiability,inherit,inherited,1166,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html:1240,Security,hash,hashCode,1240,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:2911,Availability,avail,available,2911,"list contains a measurement with the specified name. default boolean; containsNamedMeasurement(String name). Deprecated.; since v0.4.0; replaced by containsKey(String). double; get(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in the list. boolean; isEmpty(). Returns true if the list does not contain any measurements. default Set<String>; keySet(). Get all available names as a set. void; put(String name,; double value). Put a measurement value into the list, replacing any previous measurement with the same name. default void; putAll(Map<String,? extends Number> map). Put all the values from the specified map into this list. default void; putAll(MeasurementList list). Put all the values from the specified list into this one. default void; putMeasurement(String name,; double value). Deprecated.; since v0.4.0; replaced by put(String, double). Measurement; putMeasurement(Measurement measurement). Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. default double; remove(String name). Remove a named measurement. void; removeMeasurements(String... measurementNames). Remove all the measurements with the specified names. int; size(). Returns the number of measurements in the list. boolean; supportsDynamicMeasurements(). Deprecated.; since v0.4.0; the initial implementat",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:6486,Availability,avail,available,6486,"eplaced). Parameters:; name - ; value - ; Since:; v0.4.0. getOrDefault; default double getOrDefault(String name,; double defaultValue); Get the specified measurement, or the provided default value if it is not contained in the list.; ; This provides an alternative to get(String) which always uses a default of Double.NaN. Parameters:; name - ; defaultValue - ; Returns:; Since:; v0.4.0. containsNamedMeasurement; @Deprecated; default boolean containsNamedMeasurement(String name); Deprecated.; since v0.4.0; replaced by containsKey(String). Query if a value with the specified name is in the list. Parameters:; name - ; Returns:. values; default double[] values(); Get all measurement values as a double array. Returns:; Since:; v0.4.0. getMeasurementValue; @Deprecated; default double getMeasurementValue(String name); Deprecated.; since v0.4.0; use get(String) instead. Get the measurement with the specified name. Parameters:; name - ; Returns:; the value, or Double.NaN if no measurement is available with the specified name. putMeasurement; @Deprecated; default void putMeasurement(String name,; double value); Deprecated.; since v0.4.0; replaced by put(String, double). Alternative method to call putMeasurement(String, double). Parameters:; name - ; value - . remove; default double remove(String name); Remove a named measurement. Parameters:; name - ; Returns:; the value that was removed, or Double.NaN if the value was not in the list; Since:; v0.4.0. putAll; default void putAll(Map<String,? extends Number> map); Put all the values from the specified map into this list. Parameters:; map - ; Since:; v0.4.0. putAll; default void putAll(MeasurementList list); Put all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Depre",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:7305,Availability,avail,available,7305,"ue(String name); Deprecated.; since v0.4.0; use get(String) instead. Get the measurement with the specified name. Parameters:; name - ; Returns:; the value, or Double.NaN if no measurement is available with the specified name. putMeasurement; @Deprecated; default void putMeasurement(String name,; double value); Deprecated.; since v0.4.0; replaced by put(String, double). Alternative method to call putMeasurement(String, double). Parameters:; name - ; value - . remove; default double remove(String name); Remove a named measurement. Parameters:; name - ; Returns:; the value that was removed, or Double.NaN if the value was not in the list; Since:; v0.4.0. putAll; default void putAll(Map<String,? extends Number> map); Put all the values from the specified map into this list. Parameters:; map - ; Since:; v0.4.0. putAll; default void putAll(MeasurementList list); Put all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Deprecated; String getMeasurementName(int ind); Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. Get name for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. getMeasurementValue; @Deprecated; double getMeasurementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:8168,Availability,avail,available,8168,"ut all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Deprecated; String getMeasurementName(int ind); Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. Get name for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. getMeasurementValue; @Deprecated; double getMeasurementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interfa",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:767,Deployability,update,updated,767,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9122,Energy Efficiency,efficient,efficient,9122,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:448,Integrability,interface,interface,448,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9157,Integrability,interface,interface,9157,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:475,Modifiability,extend,extends,475,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:3104,Modifiability,extend,extends,3104,"et(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in the list. boolean; isEmpty(). Returns true if the list does not contain any measurements. default Set<String>; keySet(). Get all available names as a set. void; put(String name,; double value). Put a measurement value into the list, replacing any previous measurement with the same name. default void; putAll(Map<String,? extends Number> map). Put all the values from the specified map into this list. default void; putAll(MeasurementList list). Put all the values from the specified list into this one. default void; putMeasurement(String name,; double value). Deprecated.; since v0.4.0; replaced by put(String, double). Measurement; putMeasurement(Measurement measurement). Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. default double; remove(String name). Remove a named measurement. void; removeMeasurements(String... measurementNames). Remove all the measurements with the specified names. int; size(). Returns the number of measurements in the list. boolean; supportsDynamicMeasurements(). Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. default double[]; values(). Get all measurement values as a double array. Method Details. addMeasurement; @Deprecated; default boolean",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:6995,Modifiability,extend,extends,6995,"ntainsKey(String). Query if a value with the specified name is in the list. Parameters:; name - ; Returns:. values; default double[] values(); Get all measurement values as a double array. Returns:; Since:; v0.4.0. getMeasurementValue; @Deprecated; default double getMeasurementValue(String name); Deprecated.; since v0.4.0; use get(String) instead. Get the measurement with the specified name. Parameters:; name - ; Returns:; the value, or Double.NaN if no measurement is available with the specified name. putMeasurement; @Deprecated; default void putMeasurement(String name,; double value); Deprecated.; since v0.4.0; replaced by put(String, double). Alternative method to call putMeasurement(String, double). Parameters:; name - ; value - . remove; default double remove(String name); Remove a named measurement. Parameters:; name - ; Returns:; the value that was removed, or Double.NaN if the value was not in the list; Since:; v0.4.0. putAll; default void putAll(Map<String,? extends Number> map); Put all the values from the specified map into this list. Parameters:; map - ; Since:; v0.4.0. putAll; default void putAll(MeasurementList list); Put all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Deprecated; String getMeasurementName(int ind); Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. Get name for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. getMeasurementValue; @Deprecated; double getMeasurementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String nam",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:916,Usability,simpl,simply,916,". MeasurementList (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Interface MeasurementList. All Superinterfaces:; AutoCloseable, Serializable. public interface MeasurementList; extends Serializable, AutoCloseable; Interface defining a feature measurement list, consisting of key value pairs.; ; To help enable efficiency for large sets of PathObjects requiring measurement lists,; only String keys and numeric values are included.; ; QuPath v0.4.0: MeasurementList was updated to have more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsName",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:1780,Usability,clear,clear,1780,"ve more map-like behavior, ; while still using primitive values. In particular, addMeasurement(String, double) ; was deprecated and now simply defers to put(String, double).; ; Additionally, the wordy putMeasurement(String, double) and getMeasurementValue(String) ; were deprecated in favor of put(String, double) and get(String) - which do the same thing, ; but with more familiar syntax. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; default boolean; addMeasurement(String name,; double value). Deprecated.; v0.4.0 use put(String, double) instead. default Map<String,Number>; asMap(). Get a map view of this measurements list. void; clear(). Remove all the measurements from the list. void; close(). Close the list. boolean; containsKey(String name). Returns true if this list contains a measurement with the specified name. default boolean; containsNamedMeasurement(String name). Deprecated.; since v0.4.0; replaced by containsKey(String). double; get(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9343,Usability,clear,clear,9343,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:9355,Usability,clear,clear,9355,"rementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String name); Get value for the measurement with the specified name. Parameters:; name - ; Returns:; the measurement value, or Double.NaN if the measurement is not available; Since:; v0.4.0; See Also:. put(String, double). containsKey; boolean containsKey(String name); Returns true if this list contains a measurement with the specified name. Parameters:; name - ; Returns:; Since:; v0.4.0. isEmpty; boolean isEmpty(); Returns true if the list does not contain any measurements. Returns:. size; int size(); Returns the number of measurements in the list. Returns:. supportsDynamicMeasurements; @Deprecated; boolean supportsDynamicMeasurements(); Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. Returns true if the list supports dynamic measurements. ; Dynamic measurements can change their values, and in the interests of efficiency ; are not supported by all MeasurementList implementations.; ; Use of this is strongly discouraged. Returns:. close; void close(); Close the list. Depending on the implementation, the list may then adjust its internal storage to be; more efficient. Specified by:; close in interface AutoCloseable. removeMeasurements; void removeMeasurements(String... measurementNames); Remove all the measurements with the specified names. Parameters:; measurementNames - . clear; void clear(); Remove all the measurements from the list. asMap; default Map<String,Number> asMap(); Get a map view of this measurements list. ; This is a map that is backed by the list, which means that putting or retrieving elements ; modifies the list. It also means that there can be some loss of precision if the list does ; not support Double (e.g. it uses a float array for storage).; . Returns:; a map view of this measurement list. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:708,Integrability,interface,interface,708,". MeasurementList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1002,Integrability,interface,interfaces,1002,"tList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:793,Modifiability,extend,extends,793,". MeasurementList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1013,Modifiability,inherit,inherited,1013,"tList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1066,Modifiability,extend,extends,1066,"isabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.Measu",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1747,Modifiability,inherit,inherited,1747," MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType va",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1910,Modifiability,inherit,inherited,1910,"rities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1858,Security,hash,hashCode,1858,"pe>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:570,Energy Efficiency,efficient,efficiently,570,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:503,Modifiability,extend,extends,503,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:913,Modifiability,inherit,inherited,913,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:632,Safety,detect,detection,632,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:987,Security,hash,hashCode,987,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-summary.html:527,Integrability,interface,interface,527,". qupath.lib.measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.measurements. package qupath.lib.measurements. Provides measurement lists for use with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; Measurement. Basic interface to define a measurement. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-tree.html:493,Modifiability,extend,extends,493,". qupath.lib.measurements Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.measurements. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory. Interface Hierarchy. java.lang.AutoCloseable. qupath.lib.measurements.MeasurementList (also extends java.io.Serializable). java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.measurements.MeasurementList.MeasurementListType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-tree.html:629,Modifiability,extend,extends,629,". qupath.lib.measurements Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.measurements. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.measurements.MeasurementFactory; qupath.lib.measurements.MeasurementListFactory. Interface Hierarchy. java.lang.AutoCloseable. qupath.lib.measurements.MeasurementList (also extends java.io.Serializable). java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.measurements.MeasurementList.MeasurementListType. ",MatchSource.WIKI,javadoc/docs/qupath/lib/measurements/package-tree.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/package-tree.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:2796,Deployability,update,updated,2796,"CellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:5303,Deployability,update,updated,5303,"bject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; distance - distance (in pixels) by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:441,Modifiability,extend,extends,441,". CellTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class CellTools. java.lang.Object; qupath.lib.objects.CellTools. public class CellTools; extends Object; Helper class for working with PathObjects that represent cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Detai",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1313,Modifiability,extend,extends,1313," Constr | ; Method. SEARCH. Package qupath.lib.objects; Class CellTools. java.lang.Object; qupath.lib.objects.CellTools. public class CellTools; extends Object; Helper class for working with PathObjects that represent cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scalin",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1506,Modifiability,extend,extends,1506," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1853,Modifiability,inherit,inherited,1853,"undary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its bou",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3034,Modifiability,extend,extends,3034,"rainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3439,Modifiability,extend,extends,3439,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1475,Safety,detect,detectionsToCells,1475," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1526,Safety,detect,detections,1526," cells. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cel",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1645,Safety,detect,detections,1645,". All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathCellObject; constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cel",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3358,Safety,detect,detectionsToCells,3358,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3408,Safety,detect,detectionsToCells,3408,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3459,Safety,detect,detections,3459,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3578,Safety,detect,detections,3578,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3641,Safety,detect,detections,3641,"rd existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary t",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3658,Safety,detect,detection,3658,"rd existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary t",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3937,Safety,detect,detections,3937," boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically pl",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3988,Safety,detect,detections,3988,"PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:4211,Safety,avoid,avoids,4211,"lls - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; distance - distance (in pixels) by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creati",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1927,Security,hash,hashCode,1927,"ex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nuc",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/CellTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1692,Integrability,interface,interface,1692,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:2035,Integrability,interface,interface,2035,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:566,Modifiability,extend,extends,566,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1538,Modifiability,inherit,inherited,1538,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1677,Modifiability,inherit,inherited,1677,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:972,Performance,optimiz,optimization,972,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:677,Safety,predict,predictable,677,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:744,Safety,detect,detection,744,". DefaultPathObjectComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1612,Security,hash,hashCode,1612,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:2847,Integrability,interface,interface,2847,"sect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void w",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3009,Integrability,interface,interface,3009,"ject; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3169,Integrability,interface,interface,3169,"final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; I",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3411,Integrability,interface,interface,3411,"tructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; contai",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3610,Integrability,interface,interface,3610,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3768,Integrability,interface,interface,3768,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3951,Integrability,interface,interface,3951,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:4131,Integrability,interface,interface,4131,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:4297,Integrability,interface,interface,4297,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:4441,Integrability,interface,interface,4441,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:619,Modifiability,extend,extends,619,". DefaultPathObjectConnectionGroup (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectConnectionGroup. java.lang.Object; qupath.lib.objects.DefaultPathObjectConnectionGroup. All Implemented Interfaces:; Externalizable, Serializable, PathObjectConnectionGroup. public class DefaultPathObjectConnectionGroup; extends Object; implements PathObjectConnectionGroup, Externalizable; Simple, default implementation of PathObjectConnectionGroup. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; static final String; KEY_OBJECT_CONNECTIONS. Key to use when storing object connections as a property of an ImageData object. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from clas",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:1982,Modifiability,inherit,inherited,1982,"Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:2056,Security,hash,hashCode,2056,"ObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/MetadataStore.html:436,Integrability,interface,interface,436,". MetadataStore (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface MetadataStore. All Known Implementing Classes:; TMACoreObject. public interface MetadataStore; Interface that may be used to indicate that a PathObject (or other object) can store metadata.; ; Implementing classes should ensure that entries are stored in insertion order. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. Object; putMetadataValue(String key,; String value). Store a new metadata value. Method Details. putMetadataValue; Object putMetadataValue(String key,; String value); Store a new metadata value. Parameters:; key - ; value - ; Returns:. getMetadataString; String getMetadataString(String key); Get a metadata value, cast as a String if possible. Parameters:; key - ; Returns:. getMetadataValue; Object getMetadataValue(String key); Get a metadata value of any kind. Parameters:; key - ; Returns:. getMetadataKeys; Set<String> getMetadataKeys(); Get all metadata keys. Returns:. getMetadataMap; Map<String,String> getMetadataMap(); Returns an unmodifiable map containing the metadata. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/MetadataStore.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/MetadataStore.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1101,Energy Efficiency,efficient,efficient,1101,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:3615,Integrability,interface,interface,3615," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1037,Modifiability,flexible,flexible,1037,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:3687,Performance,cache,cache,3687," Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TMACoreObject. A special PathObject used exclusively to represent TMA cores. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:932,Safety,detect,detection,932,". qupath.lib.objects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectCon",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1068,Safety,detect,detections,1068,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1961,Safety,predict,predictable,1961,"n, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:2395,Safety,detect,detection,2395,"al classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectTools. A collection of static methods to help work with PathObjects. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObject",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:609,Modifiability,extend,extends,609,". PathAnnotationObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathAnnotationObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathAnnotationObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathAnnotationObject; extends PathROIObject; An annotation PathObject.; ; These tend to be larger and less common than PathDetectionObjects.; ; As such, they can be represented and displayed with more emphasis on flexibility, rather than efficiency. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, is",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1299,Modifiability,inherit,inherited,1299,"Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathAnnotationObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathAnnotationObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathAnnotationObject; extends PathROIObject; An annotation PathObject.; ; These tend to be larger and less common than PathDetectionObjects.; ; As such, they can be represented and displayed with more emphasis on flexibility, rather than efficiency. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setCo",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1489,Modifiability,inherit,inherited,1489,"nnotationObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathAnnotationObject; extends PathROIObject; An annotation PathObject.; ; These tend to be larger and less common than PathDetectionObjects.; ; As such, they can be represented and displayed with more emphasis on flexibility, rather than efficiency. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait,",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:2385,Modifiability,inherit,inherited,2385,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:2459,Security,hash,hashCode,2459,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1605,Usability,clear,clearChildObjects,1605,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1624,Usability,clear,clearMetadataMap,1624,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1642,Usability,clear,clearPathObjects,1642,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:3207,Integrability,interface,interface,3207,"cked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:3437,Integrability,interface,interface,3437,"cked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:625,Modifiability,extend,extends,625,". PathCellObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathCellObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathCellObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetada",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1323,Modifiability,inherit,inherited,1323,"kage qupath.lib.objects; Class PathCellObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathCellObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setCl",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1445,Modifiability,inherit,inherited,1445,"Object; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathCellObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inheri",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1594,Modifiability,inherit,inherited,1594,"class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObjec",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:2449,Modifiability,inherit,inherited,2449,"om class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externaliza",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:2523,Security,hash,hashCode,2523,"PathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOEx",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1710,Usability,clear,clearChildObjects,1710,"hodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getRO",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1729,Usability,clear,clearMetadataMap,1729,"hodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getRO",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1747,Usability,clear,clearPathObjects,1747,"hodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getRO",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathCellObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:849,Energy Efficiency,efficient,efficiently,849,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:663,Modifiability,extend,extends,663,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1547,Modifiability,inherit,inherited,1547," Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataVa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1725,Modifiability,inherit,inherited,1725," very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetection",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:2580,Modifiability,inherit,inherited,2580,"athROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to av",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:688,Safety,detect,detection,688,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:786,Safety,detect,detection,786,". PathDetectionObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getD",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1500,Safety,detect,detection,1500,"ect. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColor",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3145,Safety,detect,detection,3145,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3540,Safety,detect,detection,3540,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3587,Safety,avoid,avoid,3587,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:2654,Security,hash,hashCode,2654,"readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObje",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1357,Usability,simpl,simple,1357,"ss PathDetectionObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathCellObject, PathTileObject. public class PathDetectionObject; extends PathROIObject; A detection PathObject.; ; Detections tend to be very numerous (e.g. millions of nuclei, each one a detection), and so need to be ; represented and displayed very efficiently. Author:; Pete Bankhead; See Also:. PathAnnotationObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathDetectionObject(). Default constructor. protected ; PathDetectionObject(ROI pathROI,; PathClass pathClass). Create a new PathDetectionObject with a float measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, remov",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1841,Usability,clear,clearChildObjects,1841,"measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1860,Usability,clear,clearMetadataMap,1860,"measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:1878,Usability,clear,clearPathObjects,1878,"measurement list. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected MeasurementList; createEmptyMeasurementList(). Default to a simple, float measurement list. Map<String,String>; getMetadata(). Get a map of metadata values. boolean; isEditable(). Always returns false - detection objects shouldn't be edited. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shoul",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3338,Usability,simpl,simple,3338,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:2420,Availability,avail,available,2420,"laced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDisplayedName(). Request an object name in a form suitable for displaying. UUID; getID(). Get the ID for this object. int; getLevel(). The level of the object in a hierarchy. MeasurementList; getMeasurementList(). Retrieve the list stored measurements for the object. Map<String,Number>; getMeasurements(). Get a map-based view on getMeasurementList(). Map<String,String>; getMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:18517,Availability,avail,available,18517,"QuPath v0.4.0 to ; provide an alternative way to interact with classifications and to add support for ; multiple classifications. It is possible that this becomes the 'standard' approach ; in future versions, with PathClass being deprecated.; ; Feedback or discussion on the approach is welcome on the forum at ; image.sc. Returns:; an empty collection is the PathClass is null, otherwise a collection of strings ; where each string gives the name of one component of the PathClass; Since:; v0.4.0; See Also:. setClassifications(Collection). setPathClass; public abstract void setPathClass(PathClass pathClass,; double classProbability); Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Parameters:; pathClass - ; classProbability - . getClassProbability; public abstract double getClassProbability(); Request the classification probability, or Double.NaN if no probability is available. Returns:. getDisplayedName; public String getDisplayedName(); Request an object name in a form suitable for displaying.; ; This may combine various properties of the object. Returns:. getName; public String getName(); Request the stored object name. Returns:. setName; public void setName(String name); Set the stored object name. Parameters:; name - . getROI; public abstract ROI getROI(); Get the region of interest (ROI) for the object. Returns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); D",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:5963,Energy Efficiency,green,green,5963,"athObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). void; removePathObjects(Collection<PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). boolean; resetPathClass(). Reset the classification (i.e. protected Set<String>; retrieveMetadataKeys(). Get the set of metadata keys. protected Object; retrieveMetadataValue(String key). Get a metadata value. void; setClassifications(Collection<String> classifications). Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived PathClass with each ; unique element the name of a PathClass component; ; The uniqueness is equivalent to copying the elements into a set; if a set is provided ; as input then a defensive copy will be made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wai",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:7172,Energy Efficiency,efficient,efficient,7172,"). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status.; ; Subclasses should override this method to support locking or unlocking. ; Default implementation always returns true. Returns:; true if the object is locked and should not be modified. getLevel; public int getLevel(); The level of the object in a hierarchy.; ; If the object has no parent, this is ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:8724,Energy Efficiency,efficient,efficient,8724,"an isLocked(); Query the locked status.; ; Subclasses should override this method to support locking or unlocking. ; Default implementation always returns true. Returns:; true if the object is locked and should not be modified. getLevel; public int getLevel(); The level of the object in a hierarchy.; ; If the object has no parent, this is 0. Otherwise, it is equal to parent.getLevel() + 1. Returns:. isRootObject; public boolean isRootObject(); Returns true if the object is the 'root' of an object hierarchy. Returns:; See Also:. PathObjectHierarchy. getMeasurementList; public MeasurementList getMeasurementList(); Retrieve the list stored measurements for the object.; ; This can be used to query or add specific numeric measurements. Returns:. getMeasurements; public Map<String,Number> getMeasurements(); Get a map-based view on getMeasurementList().; This is likely to be less efficient (because it does not support primitives), but has several advantages ; ; it uses a familiar and standard API; it is much more amenable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:9860,Energy Efficiency,efficient,efficient,9860,"enable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjec",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:15539,Energy Efficiency,efficient,efficient,15539,"ly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an array.; ; Why? Well perhaps you want to iterate through it and getChildObjects() may result in synchronization problems if ; the list is modified by another thread. In such a case a defensive copy may already be required, and it is more efficient to request ; it here. Returns:. getPathClass; public abstract PathClass getPathClass(); Get the classification of the object. Returns:. setPathClass; public void setPathClass(PathClass pc); Set the classification of the object, without specifying any classification probability. Parameters:; pc - . resetPathClass; public boolean resetPathClass(); Reset the classification (i.e. set it to null). Returns:; true if the classification has changed, false otherwise (i.e. it was already null). setClassifications; public void setClassifications(Collection<String> classifications); Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived PathClass with each ; unique element the name of a PathClass component. The uniqueness is equivalent to copying the elements into ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:19199,Energy Efficiency,green,green,19199,"on probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Parameters:; pathClass - ; classProbability - . getClassProbability; public abstract double getClassProbability(); Request the classification probability, or Double.NaN if no probability is available. Returns:. getDisplayedName; public String getDisplayedName(); Request an object name in a form suitable for displaying.; ; This may combine various properties of the object. Returns:. getName; public String getName(); Request the stored object name. Returns:. setName; public void setName(String name); Set the stored object name. Parameters:; name - . getROI; public abstract ROI getROI(); Get the region of interest (ROI) for the object. Returns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); Deprecated.; since v0.4.0, use setColor(Integer) instead. Set the display color. Parameters:; color - . setColor; public void setColor(Integer color); Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). Parameters:; color - packed (A)RGB value, or null if a color should not stored; Since:; v0.4.0; See Also:. setColor(int, int, int); ColorTools.packRGB(int, int, int). setColor; public void setColor(int red,; int green,; int blue); Set the display color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getID; public UUID getID(); Get the ID for this object. Returns:; See Also:. setID(UUID); refreshID(). setID; public void setID(U",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:19964,Energy Efficiency,green,green,19964,"urns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); Deprecated.; since v0.4.0, use setColor(Integer) instead. Set the display color. Parameters:; color - . setColor; public void setColor(Integer color); Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). Parameters:; color - packed (A)RGB value, or null if a color should not stored; Since:; v0.4.0; See Also:. setColor(int, int, int); ColorTools.packRGB(int, int, int). setColor; public void setColor(int red,; int green,; int blue); Set the display color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getID; public UUID getID(); Get the ID for this object. Returns:; See Also:. setID(UUID); refreshID(). setID; public void setID(UUID id); throws IllegalArgumentException; Set the ID for this object.; ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:20047,Energy Efficiency,green,green,20047,"RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); Deprecated.; since v0.4.0, use setColor(Integer) instead. Set the display color. Parameters:; color - . setColor; public void setColor(Integer color); Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). Parameters:; color - packed (A)RGB value, or null if a color should not stored; Since:; v0.4.0; See Also:. setColor(int, int, int); ColorTools.packRGB(int, int, int). setColor; public void setColor(int red,; int green,; int blue); Set the display color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getID; public UUID getID(); Get the ID for this object. Returns:; See Also:. setID(UUID); refreshID(). setID; public void setID(UUID id); throws IllegalArgumentException; Set the ID for this object.; ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(St",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21296,Energy Efficiency,efficient,efficiently,21296," ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:14308,Integrability,depend,depend,14308,"rue also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon it). Returns:. getChildObjects; public Collection<PathObject> getChildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an arr",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:15397,Integrability,synchroniz,synchronization,15397,"ildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an array.; ; Why? Well perhaps you want to iterate through it and getChildObjects() may result in synchronization problems if ; the list is modified by another thread. In such a case a defensive copy may already be required, and it is more efficient to request ; it here. Returns:. getPathClass; public abstract PathClass getPathClass(); Get the classification of the object. Returns:. setPathClass; public void setPathClass(PathClass pc); Set the classification of the object, without specifying any classification probability. Parameters:; pc - . resetPathClass; public boolean resetPathClass(); Reset the classification (i.e. set it to null). Returns:; true if the classification has changed, false otherwise (i.e. it was already null). setClassifications; public void setClassifications(Collection<String> classifications); Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22771,Integrability,interface,interface,22771,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22951,Integrability,interface,interface,22951,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:570,Modifiability,extend,extends,570,". PathObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Col",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1242,Modifiability,extend,extends,1242,"sted | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1483,Modifiability,extend,extends,1483,"ect Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a p",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:6851,Modifiability,inherit,inherited,6851," set; if a set is provided ; as input then a defensive copy will be made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query t",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:10492,Modifiability,extend,extends,10492,"duced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:10702,Modifiability,extend,extends,10702,"erred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Para",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:696,Safety,detect,detections,696,". PathObject (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Col",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:3992,Safety,detect,detection,3992,"ap<String,Number>; getMeasurements(). Get a map-based view on getMeasurementList(). Map<String,String>; getMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected Map<String,String>; getUnmodifiableMetadataMap(). Get an unmodifiable map of the metadata. boolean; hasChildObjects(). Check if this object has children, or if its child object list is empty. boolean; hasChildren(). Deprecated.; since v0.4.0, replaced by hasChildObjects(). boolean; hasMeasurements(). Returns true if the measurement list for this object is not empty. boolean; hasROI(). Returns true if this object has a ROI. boolean; isAnnotation(). Returns true if the object is an annotation. boolean; isCell(). Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). boolean; isDetection(). Returns true if the object is a detection. abstract boolean; isEditable(). Flag indicating that the object is editable. boolean; isLocked(). Query the locked status. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. boolean; isTile(). Returns true if this object represents an image tile. boolean; isTMACore(). Returns true if this object represents a TMA core. int; nChildObjects(). Total number of child objects. int; nDescendants(). Total number of descendant objects. protected String; objectCountPostfix();  ; void; readExternal(ObjectInput in);  ; void; refreshID(). Regenerate a new random ID. void; removeChildObject(PathObject pathObject). Remove a single object from the child list of this object. void; removeChildObjects(Collection<PathObject> pathObjects). Remove multiple objects from the child list of this object. void; removePathObject(PathObject pathObject)",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:4106,Safety,detect,detection,4106,"tMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected Map<String,String>; getUnmodifiableMetadataMap(). Get an unmodifiable map of the metadata. boolean; hasChildObjects(). Check if this object has children, or if its child object list is empty. boolean; hasChildren(). Deprecated.; since v0.4.0, replaced by hasChildObjects(). boolean; hasMeasurements(). Returns true if the measurement list for this object is not empty. boolean; hasROI(). Returns true if this object has a ROI. boolean; isAnnotation(). Returns true if the object is an annotation. boolean; isCell(). Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). boolean; isDetection(). Returns true if the object is a detection. abstract boolean; isEditable(). Flag indicating that the object is editable. boolean; isLocked(). Query the locked status. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. boolean; isTile(). Returns true if this object represents an image tile. boolean; isTMACore(). Returns true if this object represents a TMA core. int; nChildObjects(). Total number of child objects. int; nDescendants(). Total number of descendant objects. protected String; objectCountPostfix();  ; void; readExternal(ObjectInput in);  ; void; refreshID(). Regenerate a new random ID. void; removeChildObject(PathObject pathObject). Remove a single object from the child list of this object. void; removeChildObjects(Collection<PathObject> pathObjects). Remove multiple objects from the child list of this object. void; removePathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). void; removePathObjects(Collection",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13266,Safety,detect,detection,13266," public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object h",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13346,Safety,detect,detection,13346,"ng objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13560,Safety,detect,detection,13560,"jects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon it). Returns:. getChildObjects; public Collection<PathObject> getChildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChild",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21186,Safety,detect,detections,21186," ; Important! Use this with caution or, even better, not at all!; ; In general, the ID for an object should be unique.; This is best achieved by allowing the ID to be generated randomly when the object ; is created, and never changing it to anything else.; ; However, there are times when it is necessary to transfer the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21755,Safety,avoid,avoid,21755,"ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizab",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:6925,Security,hash,hashCode,6925," made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status.; ; Subclasses should override this method to supp",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21592,Security,expose,expose,21592," the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/v",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:9530,Testability,test,testing,9530," to query or add specific numeric measurements. Returns:. getMeasurements; public Map<String,Number> getMeasurements(); Get a map-based view on getMeasurementList().; This is likely to be less efficient (because it does not support primitives), but has several advantages ; ; it uses a familiar and standard API; it is much more amenable for scripting, especially in Groovy; it is possible to return null for missing values, rather than only Double.NaN. The MeasurementList is retained for backwards-compatibility, particularly the ability to ; read older data files.; Changes made to the map are propagated through to the MeasurementList, so it should be possible to ; use them interchangeably - however note that there may be some loss of precision if the backing measurement ; list uses floats rather than doubles.; ; It is possible that a map implementation becomes the standard in the future and getMeasurementList(); may be deprecated; this is an experimental feature introduced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1591,Usability,clear,clearChildObjects,1591,"Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1654,Usability,clear,clearMetadataMap,1654," ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants).",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1715,Usability,clear,clearPathObjects,1715,"res, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1774,Usability,clear,clearChildObjects,1774,"ized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDisplayedName(). Request an object name in a form suitable",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11715,Usability,clear,clearChildObjects,11715,"e v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecat",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11746,Usability,clear,clearChildObjects,11746,"e v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecat",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11809,Usability,clear,clearPathObjects,11809,"eters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). L",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11852,Usability,clear,clearPathObjects,11852,"eters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). L",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:11911,Usability,clear,clearChildObjects,11911,"ject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Parameters:; pathObjects - . clearChildObjects; public void clearChildObjects(); Remove all child objects. Since:; v0.4.0. clearPathObjects; @Deprecated; public void clearPathObjects(); Deprecated.; since v0.4.0, replaced by clearChildObjects(). Legacy method to remove all child objects. nChildObjects; public int nChildObjects(); Total number of child objects.; Note that this is the size of the child object list - it does not check descendants recursively. Returns:; the number of direct child objects; See Also:. nDescendants(). nDescendants; public int nDescendants(); Total number of descendant objects.; This involves counting objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public bo",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22445,Usability,clear,clearMetadataMap,22445,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:22478,Usability,clear,clearMetadataMap,22478,"Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/value pair map for object metadata. Returns:; Since:; v0.5.0. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObject.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html:502,Integrability,interface,interface,502,". PathObjectConnectionGroup (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectConnectionGroup. All Known Implementing Classes:; DefaultPathObjectConnectionGroup, DelaunayTriangulation. public interface PathObjectConnectionGroup; Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy.; ; Example applications would be Delaunay triangulation.; ; Such connections can be represented on an overlay by drawing lines between object centroids. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. default Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. Method Details. containsObject; boolean containsObject(PathObject pathObject); Returns true if the specified PathObject is contained within this group. Parameters:; pathObject - ; Returns:. getPathObjects; Collection<PathObject> getPathObjects(); Get an unmodifiable collection containing all the PathObjects contained within this group. Returns:. getConnectedObjects; List<PathObject> getConnectedObjects(PathObject pathObject); Get all the connections to a specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnectionGroup.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:2838,Integrability,interface,interface,2838,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:3018,Integrability,interface,interface,3018,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:548,Modifiability,extend,extends,548,". PathObjectConnections (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectConnections. java.lang.Object; qupath.lib.objects.PathObjectConnections. All Implemented Interfaces:; Externalizable, Serializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:1492,Modifiability,inherit,inherited,1492,"rializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectC",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:1566,Security,hash,hashCode,1566,"ts Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:999,Usability,clear,clear,999,". PathObjectConnections (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectConnections. java.lang.Object; qupath.lib.objects.PathObjectConnections. All Implemented Interfaces:; Externalizable, Serializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:2666,Usability,clear,clear,2666,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:2685,Usability,clear,clear,2685,"ps(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectConnectionGroup group); Remove a connections group. Parameters:; group - ; Returns:. isEmpty; public boolean isEmpty(); Returns true if the group is empty. Returns:. clear; public void clear(); Clear all existing connections. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:978,Integrability,interface,interfaces,978,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2273,Integrability,interface,interface,2273,"etection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static fi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4296,Integrability,interface,interface,4296," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:646,Modifiability,extend,extends,646,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:989,Modifiability,inherit,inherited,989,". PathObjectFilter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1042,Modifiability,extend,extends,1042," is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enu",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2011,Modifiability,inherit,inherited,2011,".Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accep",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2164,Modifiability,inherit,inherited,2164,". Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static fina",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2258,Modifiability,inherit,inherited,2258,"etection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static fi",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1207,Safety,detect,detection,1207,"um Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify,",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1267,Safety,detect,detection,1267,"stants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interfa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2511,Safety,detect,detection,2511,"LES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2632,Safety,detect,detection,2632,"ethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; p",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2122,Security,hash,hashCode,2122," Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1713,Testability,test,test,1713," (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TIL",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4232,Testability,test,test,4232," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4253,Testability,test,test,4253," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:4288,Testability,test,test,4288," Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectFilter valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<PathObjectFilter>. test; public boolean test(PathObject p). Specified by:; test in interface Predicate<PathObject>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:673,Integrability,interface,interface,673,". PathObjectPredicates (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectPredicates. java.lang.Object; qupath.lib.objects.PathObjectPredicates. public class PathObjectPredicates; extends Object; Classes to define JSON-serializable Predicates for PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. Constructor Summary; Constructors. Constructor; Description; PathObjectPredicates();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectPredicates.PathObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:485,Modifiability,extend,extends,485,". PathObjectPredicates (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjectPredicates. java.lang.Object; qupath.lib.objects.PathObjectPredicates. public class PathObjectPredicates; extends Object; Classes to define JSON-serializable Predicates for PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. Constructor Summary; Constructors. Constructor; Description; PathObjectPredicates();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectPredicates.PathObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:1991,Modifiability,inherit,inherited,1991,"athObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other p",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:2065,Security,hash,hashCode,2065,"ate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. Parameters:; filter - ; Returns:. exactClassification; public",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:534,Integrability,interface,interface,534,". PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1205,Integrability,interface,interface,1205,"; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:2547,Integrability,interface,interface,2547,"cate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. negate; default PathObjectPredicates.PathObjectPredicate negate(). Specified by:; negate in interface Predicate<PathObject>. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:586,Modifiability,extend,extends,586,". PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1190,Modifiability,inherit,inherited,1190,"; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:1254,Testability,test,test,1254,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectPredicates.PathObjectPredicate. All Superinterfaces:; Predicate<PathObject>. Enclosing class:; PathObjectPredicates. public static interface PathObjectPredicates.PathObjectPredicate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html:1128,Availability,avail,available,1128,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectReader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html:472,Integrability,interface,interface,472,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectReader.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6846,Integrability,interface,interfaces,6846,"Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segment",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7411,Integrability,interface,interfaces,7411,"nts); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; r",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7939,Integrability,interface,interfaces,7939,"eateTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; ro",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8520,Integrability,interface,interfaces,8520,"public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:9046,Integrability,interface,interfaces,9046,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:9504,Integrability,interface,interfaces,9504,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:449,Modifiability,extend,extends,449,". PathObjects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObjects. java.lang.Object; qupath.lib.objects.PathObjects. public class PathObjects; extends Object; Helper class to create PathObject. This should be used in preference of any constructors, ; which linger only for historical reasons and compatibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PathObjects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurem",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:3039,Modifiability,inherit,inherited,3039,"ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are us",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1706,Safety,detect,detection,1706,"PathObjects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACor",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1817,Safety,detect,detection,1817,"on; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a T",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1959,Safety,detect,detection,1959," pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePla",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:5400,Safety,detect,detection,5400,"ar ROI. Parameters:; xCenter - ; yCenter - ; diameter - ; isMissing - ; plane - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing); Create a TMA core object with an circular ROI. Parameters:; xCenter - ; yCenter - ; diameter - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createT",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:5830,Safety,detect,detection,5830," x,; double y,; double width,; double height,; boolean isMissing); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measur",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6123,Safety,detect,detection,6123,",; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represen",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6535,Safety,detect,detection,6535,"fficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject cr",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7102,Safety,detect,detection,7102,"fied detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNu",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7659,Safety,detect,detection,7659,"llection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8301,Safety,detect,detection,8301," pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, wh",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8829,Safety,detect,detection,8829,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:9301,Safety,detect,detection,9301,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:3113,Security,hash,hashCode,3113,"ileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjects.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7306,Availability,avail,availableObjects,7306," double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7405,Availability,avail,available,7405,"ollection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy).",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7655,Availability,avail,available,7655,"bjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,;",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:24613,Availability,avail,available,24613,"ldObject - ; Returns:. isAncestor; public static boolean isAncestor(PathObject pathObject,; PathObject possibleAncestor); Query if one object is the ancestor of another. Parameters:; pathObject - ; possibleAncestor - ; Returns:. getTMACoreObjects; public static List<TMACoreObject> getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores); Extract a list of TMA cores from an object hierarchy. If no cores are present, an empty list is returned. Parameters:; hierarchy - ; includeMissingCores - ; Returns:. getAncestorTMACore; public static TMACoreObject getAncestorTMACore(PathObject pathObject); Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core.; ; If the passed object already is a TMACore, it is returned directly. Otherwise, all ancestors are checked. Parameters:; pathObject - ; Returns:. getTMACoreForPixel; public static TMACoreObject getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y); Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. Parameters:; tmaGrid - ; x - ; y - ; Returns:. addTMAGrid; public static void addTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated); Create a new regular TMAGrid and set it as active on the hierarchy for an image.; ; For the label string format, see see parseTMALabelString(String). Parameters:; imageData - the image to which the TMA grid should be added. This is used to determine ; dimensions and pixel calibration. If there is a ROI selected, it will be used ; to define the bounding box for the grid.; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units. createTMAGrid; public static TMAGrid createTMAG",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:29616,Availability,toler,tolerance,29616," cell objects where possible; if false, request the outer ROI. ; This has no effect if the object is not a cell, or does not have two ROIs.; Returns:; a collection of annotations with point ROIs; See Also:. convertToPoints(PathObjectHierarchy, Collection, boolean, boolean). hierarchyContainsObject; public static boolean hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject); Check if a hierarchy contains a specified PathObject.; The actual check if carried out by seeing in the PathObject is descended from the root object of the hierarchy. Parameters:; hierarchy - ; pathObject - ; Returns:. getObjectsForLocation; public static Collection<PathObject> getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance); Get a collection of objects that overlap a specified pixel location.; ; For area ROIs, this means the ROI should contain the pixel. For non-area ROIs an ; optional vertex distance can be used to define a distance tolerance to the nearest vertex ; or line segment. Parameters:; hierarchy - object hierarchy within which to find the object; x - x-coordinate of the pixel; y - y-coordinate of the pixel; zPos - z-slice number; tPos - time-point number; vertexDistance - for non-area ROIs, the distance from the closest vertex or line segment (or < 0 to ignore non-area ROIs).; Returns:. getAncestorList; public static List<PathObject> getAncestorList(PathObject pathObject); Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31093,Availability,avail,availableObjects,31093," the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Si",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31192,Availability,avail,available,31192," the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Si",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31289,Availability,avail,availableObjects,31289,"wapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusOrMainROI(PathObject). getDescendantObjects; public static Collection<PathObject> getDescendantObjects(PathObject pathObject,; Collection<PathObject> ",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:8484,Deployability,update,update,8484,"s. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single m",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:13099,Deployability,toggle,toggleObjectsLocked,13099,"ess. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Toggle the 'locked' status of specified objects. static void; toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy). Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create a transformed version of a PathObject with a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean cop",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:13260,Deployability,toggle,toggleSelectedObjectsLocked,13260," split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Toggle the 'locked' status of specified objects. static void; toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy). Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create a transformed version of a PathObject with a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create (optionally) transformed versions of the PathObject and all its descendants, recursively, option",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:13378,Deployability,update,update,13378," ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Toggle the 'locked' status of specified objects. static void; toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy). Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create a transformed version of a PathObject with a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create (optionally) transformed versions of the PathObject and all its descendants, recursively, optionally assigning; new IDs to the created objects. static void; unlockObjects(PathObjectHierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:14593,Deployability,update,update,14593," a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create (optionally) transformed versions of the PathObject and all its descendants, recursively, optionally assigning; new IDs to the created objects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:14665,Deployability,update,updatePlane,14665,"surements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create (optionally) transformed versions of the PathObject and all its descendants, recursively, optionally assigning; new IDs to the created objects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pa",MatchSource.WIKI,javadoc/docs/qupath/lib/objects/PathObjectTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html
