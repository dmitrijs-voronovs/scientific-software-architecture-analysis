id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://root.cern/doc/master/rf104__classfactory_8py.html:4330,Integrability,integrat,integrator,4330,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:4849,Integrability,integrat,integrator,4849,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:5077,Integrability,integrat,integrator,5077,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:617,Modifiability,variab,variable,617,". ROOT: tutorials/roofit/rf104_classfactory.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf104_classfactory.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: the class factory for functions and pdfs ; NOTE: This demo uses code that is generated by the macro, which can be compiled on the fly (set to MyPdfV3 below). To use MyPdfV1 or MyPdfV2, adjust lines below accordingly. ; import ROOT; ; # Write class skeleton code; # --------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV1"", ""x,A,B""); ; # With added initial value expression; # ---------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV2"", ""x,A,B"", """", ""A*fabs(x)+pow(x-B,2)""); ; # With added analytical integral expression; # ---------------------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #; ROOT.RooClassFactory.makePdf(; ""MyPdfV3"",; ""x,A,B"",; """",; ""A*fabs(x)+pow(x-B,2)"",; True,; False,; ""x:(A/2)*(pow(x.max(rangeName),2)+pow(x.min(rangeName),2))+(1./3)*(pow(x.max(rangeName)-B,3)-pow(x.min(rangeName)-B,3))"",; ); ; # Use instance of created class; # ---------------------------------------------------------; ; # Compile MyPdfV3 class; ROOT.gROOT.ProcessLineSync("".x MyPdfV3.cxx+""); ; # Creat instance of MyPdfV3 class; a = ROOT.RooRealVar(""a"", ""a"", 1); ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:996,Modifiability,variab,variable,996,". ROOT: tutorials/roofit/rf104_classfactory.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf104_classfactory.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: the class factory for functions and pdfs ; NOTE: This demo uses code that is generated by the macro, which can be compiled on the fly (set to MyPdfV3 below). To use MyPdfV1 or MyPdfV2, adjust lines below accordingly. ; import ROOT; ; # Write class skeleton code; # --------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV1"", ""x,A,B""); ; # With added initial value expression; # ---------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV2"", ""x,A,B"", """", ""A*fabs(x)+pow(x-B,2)""); ; # With added analytical integral expression; # ---------------------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #; ROOT.RooClassFactory.makePdf(; ""MyPdfV3"",; ""x,A,B"",; """",; ""A*fabs(x)+pow(x-B,2)"",; True,; False,; ""x:(A/2)*(pow(x.max(rangeName),2)+pow(x.min(rangeName),2))+(1./3)*(pow(x.max(rangeName)-B,3)-pow(x.min(rangeName)-B,3))"",; ); ; # Use instance of created class; # ---------------------------------------------------------; ; # Compile MyPdfV3 class; ROOT.gROOT.ProcessLineSync("".x MyPdfV3.cxx+""); ; # Creat instance of MyPdfV3 class; a = ROOT.RooRealVar(""a"", ""a"", 1); ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:1361,Modifiability,variab,variable,1361,"es code that is generated by the macro, which can be compiled on the fly (set to MyPdfV3 below). To use MyPdfV1 or MyPdfV2, adjust lines below accordingly. ; import ROOT; ; # Write class skeleton code; # --------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV1"", ""x,A,B""); ; # With added initial value expression; # ---------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #; ROOT.RooClassFactory.makePdf(""MyPdfV2"", ""x,A,B"", """", ""A*fabs(x)+pow(x-B,2)""); ; # With added analytical integral expression; # ---------------------------------------------------------------------------------; ; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #; ROOT.RooClassFactory.makePdf(; ""MyPdfV3"",; ""x,A,B"",; """",; ""A*fabs(x)+pow(x-B,2)"",; True,; False,; ""x:(A/2)*(pow(x.max(rangeName),2)+pow(x.min(rangeName),2))+(1./3)*(pow(x.max(rangeName)-B,3)-pow(x.min(rangeName)-B,3))"",; ); ; # Use instance of created class; # ---------------------------------------------------------; ; # Compile MyPdfV3 class; ROOT.gROOT.ProcessLineSync("".x MyPdfV3.cxx+""); ; # Creat instance of MyPdfV3 class; a = ROOT.RooRealVar(""a"", ""a"", 1); b = ROOT.RooRealVar(""b"", ""b"", 2, -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); pdf = ROOT.MyPdfV3(""pdf"", ""pdf"", y, a, b); ; # Generate toy data from pdf and plot data and pdf on frame; frame1 = y.frame(Title=""Compiled class MyPdfV3""); data = pdf.generate({y}, 1000); pdf.fitTo(data, PrintLevel=-1); data.plotOn(frame1); pd",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:2542,Performance,perform,performs,2542,"""A*fabs(x)+pow(x-B,2)"",; True,; False,; ""x:(A/2)*(pow(x.max(rangeName),2)+pow(x.min(rangeName),2))+(1./3)*(pow(x.max(rangeName)-B,3)-pow(x.min(rangeName)-B,3))"",; ); ; # Use instance of created class; # ---------------------------------------------------------; ; # Compile MyPdfV3 class; ROOT.gROOT.ProcessLineSync("".x MyPdfV3.cxx+""); ; # Creat instance of MyPdfV3 class; a = ROOT.RooRealVar(""a"", ""a"", 1); b = ROOT.RooRealVar(""b"", ""b"", 2, -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); pdf = ROOT.MyPdfV3(""pdf"", ""pdf"", y, a, b); ; # Generate toy data from pdf and plot data and pdf on frame; frame1 = y.frame(Title=""Compiled class MyPdfV3""); data = pdf.generate({y}, 1000); pdf.fitTo(data, PrintLevel=-1); data.plotOn(frame1); pdf.plotOn(frame1); ; # /; # C o m p i l e d v e r s i o n o f e x a m p l e r f 1 0 3 #; # /; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", -20, 20); ; # The ROOT.RooClassFactory.makePdfInstance() function performs code writing, compiling, linking; # and object instantiation in one go and can serve as a straight; # replacement of ROOT.RooGenericPdf; ; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", 5, 0.1, 10); genpdf = ROOT.RooClassFactory.makePdfInstance(""GenPdf"", ""(1+0.1*fabs(x)+sin(sqrt(fabs(x*alpha+0.1))))"", [x, alpha]); ; # Generate a toy dataset from the interpreted pdf; data2 = genpdf.generate({x}, 50000); ; # Fit the interpreted pdf to the generated data; genpdf.fitTo(data2, PrintLevel=-1); ; # Make a plot of the data and the pdf overlaid; frame2 = x.frame(Title=""Compiled version of pdf of rf103""); data2.plotOn(frame2); genpdf.plotOn(frame2); ; # Draw all frames on a canvas; c = ROOT.TCanvas(""rf104_classfactory"", ""rf104_classfactory"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:4005,Performance,optimiz,optimization,4005,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:4102,Performance,optimiz,optimization,4102,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:4752,Performance,optimiz,optimization,4752,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf104__classfactory_8py.html:4980,Performance,optimiz,optimization,4980,"t(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf104_classfactory.png""); (MyPdfV3) An instance of MyPdfV3.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pdf_over_pdf_Int[y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pdf_over_pdf_Int[y]_pdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(GenPdf_over_GenPdf_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_GenPdf_over_GenPdf_Int[x]_GenPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(GenPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf104_classfactory.py. tutorialsroofitrf104_classfactory.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf104__classfactory_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf104__classfactory_8py.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:824,Availability,error,errorFunc,824,". ROOT: tutorials/roofit/rf105_funcbinding.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf105_funcbinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: binding ROOT math functions as RooFit functions and pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""Math/DistFunc.h""; #include ""RooTFnBinding.h""; ; using namespace RooFit;; ; void rf105_funcbinding(); {; ; // B i n d T M a t h : : E r f C f u n c t i o n; // ---------------------------------------------------; ; // Bind one-dimensional TMath::Erf function as RooAbsReal function; RooRealVar x(""x"", ""x"", -3, 3);; RooAbsReal *errorFunc = bindFunction(""erf"", TMath::Erf, x);; ; // Print erf definition; errorFunc->Print();; ; // Plot erf on frame; RooPlot *frame1 = x.frame(Title(""TMath::Erf bound as RooFit function""));; errorFunc->plotOn(frame1);; ; // B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; ; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; RooRealVar x2(""x2"", ""x2"", 0, 0.999);; RooRealVar a(""a"", ""a"", 5, 0, 10);; RooRealVar b(""b"", ""b"", 2, 0, 10);; RooAbsPdf *beta = bindPdf(""beta"", ROOT::Math::beta_pdf, x2, a, b);; ; // Perf beta definition; beta->Print();; ; // Generate some events and fit; std::unique_ptr<RooDataSet> data{beta->generate(x2, 10000)};; beta->fitTo(*data, PrintLevel(-1));; ; // Plot data and pdf on frame; RooPlot *frame2 = x2.frame(Title(""ROOT::Math::Beta bound as RooFit pdf""));; data->plotOn(frame2);; beta->plotOn(frame2);; ; // B i n d R O O T T F 1 a s R o o F i t f u n c t i o n; // ---------------------------------------------------------------; ; // Create a ROOT TF1 function; TF1 *fa1 = new TF1(""fa1"", ""sin(x)/x"", 0, 10);; ; // Create an ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:900,Availability,error,errorFunc,900,". ROOT: tutorials/roofit/rf105_funcbinding.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf105_funcbinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: binding ROOT math functions as RooFit functions and pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""Math/DistFunc.h""; #include ""RooTFnBinding.h""; ; using namespace RooFit;; ; void rf105_funcbinding(); {; ; // B i n d T M a t h : : E r f C f u n c t i o n; // ---------------------------------------------------; ; // Bind one-dimensional TMath::Erf function as RooAbsReal function; RooRealVar x(""x"", ""x"", -3, 3);; RooAbsReal *errorFunc = bindFunction(""erf"", TMath::Erf, x);; ; // Print erf definition; errorFunc->Print();; ; // Plot erf on frame; RooPlot *frame1 = x.frame(Title(""TMath::Erf bound as RooFit function""));; errorFunc->plotOn(frame1);; ; // B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; ; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; RooRealVar x2(""x2"", ""x2"", 0, 0.999);; RooRealVar a(""a"", ""a"", 5, 0, 10);; RooRealVar b(""b"", ""b"", 2, 0, 10);; RooAbsPdf *beta = bindPdf(""beta"", ROOT::Math::beta_pdf, x2, a, b);; ; // Perf beta definition; beta->Print();; ; // Generate some events and fit; std::unique_ptr<RooDataSet> data{beta->generate(x2, 10000)};; beta->fitTo(*data, PrintLevel(-1));; ; // Plot data and pdf on frame; RooPlot *frame2 = x2.frame(Title(""ROOT::Math::Beta bound as RooFit pdf""));; data->plotOn(frame2);; beta->plotOn(frame2);; ; // B i n d R O O T T F 1 a s R o o F i t f u n c t i o n; // ---------------------------------------------------------------; ; // Create a ROOT TF1 function; TF1 *fa1 = new TF1(""fa1"", ""sin(x)/x"", 0, 10);; ; // Create an ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:1019,Availability,error,errorFunc,1019,"Matches. rf105_funcbinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: binding ROOT math functions as RooFit functions and pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""Math/DistFunc.h""; #include ""RooTFnBinding.h""; ; using namespace RooFit;; ; void rf105_funcbinding(); {; ; // B i n d T M a t h : : E r f C f u n c t i o n; // ---------------------------------------------------; ; // Bind one-dimensional TMath::Erf function as RooAbsReal function; RooRealVar x(""x"", ""x"", -3, 3);; RooAbsReal *errorFunc = bindFunction(""erf"", TMath::Erf, x);; ; // Print erf definition; errorFunc->Print();; ; // Plot erf on frame; RooPlot *frame1 = x.frame(Title(""TMath::Erf bound as RooFit function""));; errorFunc->plotOn(frame1);; ; // B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; ; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; RooRealVar x2(""x2"", ""x2"", 0, 0.999);; RooRealVar a(""a"", ""a"", 5, 0, 10);; RooRealVar b(""b"", ""b"", 2, 0, 10);; RooAbsPdf *beta = bindPdf(""beta"", ROOT::Math::beta_pdf, x2, a, b);; ; // Perf beta definition; beta->Print();; ; // Generate some events and fit; std::unique_ptr<RooDataSet> data{beta->generate(x2, 10000)};; beta->fitTo(*data, PrintLevel(-1));; ; // Plot data and pdf on frame; RooPlot *frame2 = x2.frame(Title(""ROOT::Math::Beta bound as RooFit pdf""));; data->plotOn(frame2);; beta->plotOn(frame2);; ; // B i n d R O O T T F 1 a s R o o F i t f u n c t i o n; // ---------------------------------------------------------------; ; // Create a ROOT TF1 function; TF1 *fa1 = new TF1(""fa1"", ""sin(x)/x"", 0, 10);; ; // Create an observable; RooRealVar x3(""x3"", ""x3"", 0.01, 20);; ; // Create binding of TF1 object to above observable; RooAbsReal *rfa1 = bindFunc",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:5277,Availability,error,error,5277,"uble xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; ROOT::Math::beta_pdfdouble beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6172,Availability,error,error,6172,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:5647,Deployability,integrat,integrator,5647,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:5778,Deployability,integrat,integrator,5778,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6362,Deployability,integrat,integrator,6362,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6590,Deployability,integrat,integrator,6590,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:3480,Integrability,interface,interface,3480,"GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.6);; frame3->Draw();; }; DistFunc.h; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; RooTFnBinding.h; TAxis.h; TCanvas.h; TF1.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; TMath.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overr",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:5647,Integrability,integrat,integrator,5647,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:5778,Integrability,integrat,integrator,5778,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6362,Integrability,integrat,integrator,6362,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6590,Integrability,integrat,integrator,6590,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:1237,Modifiability,variab,variables,1237,"Matches. rf105_funcbinding.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: binding ROOT math functions as RooFit functions and pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TMath.h""; #include ""TF1.h""; #include ""Math/DistFunc.h""; #include ""RooTFnBinding.h""; ; using namespace RooFit;; ; void rf105_funcbinding(); {; ; // B i n d T M a t h : : E r f C f u n c t i o n; // ---------------------------------------------------; ; // Bind one-dimensional TMath::Erf function as RooAbsReal function; RooRealVar x(""x"", ""x"", -3, 3);; RooAbsReal *errorFunc = bindFunction(""erf"", TMath::Erf, x);; ; // Print erf definition; errorFunc->Print();; ; // Plot erf on frame; RooPlot *frame1 = x.frame(Title(""TMath::Erf bound as RooFit function""));; errorFunc->plotOn(frame1);; ; // B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; ; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; RooRealVar x2(""x2"", ""x2"", 0, 0.999);; RooRealVar a(""a"", ""a"", 5, 0, 10);; RooRealVar b(""b"", ""b"", 2, 0, 10);; RooAbsPdf *beta = bindPdf(""beta"", ROOT::Math::beta_pdf, x2, a, b);; ; // Perf beta definition; beta->Print();; ; // Generate some events and fit; std::unique_ptr<RooDataSet> data{beta->generate(x2, 10000)};; beta->fitTo(*data, PrintLevel(-1));; ; // Plot data and pdf on frame; RooPlot *frame2 = x2.frame(Title(""ROOT::Math::Beta bound as RooFit pdf""));; data->plotOn(frame2);; beta->plotOn(frame2);; ; // B i n d R O O T T F 1 a s R o o F i t f u n c t i o n; // ---------------------------------------------------------------; ; // Create a ROOT TF1 function; TF1 *fa1 = new TF1(""fa1"", ""sin(x)/x"", 0, 10);; ; // Create an observable; RooRealVar x3(""x3"", ""x3"", 0.01, 20);; ; // Create binding of TF1 object to above observable; RooAbsReal *rfa1 = bindFunc",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:4325,Modifiability,variab,variable,4325,":70; TMath.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; ROOT::Math::beta_pdfdouble beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Comp",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6266,Performance,optimiz,optimization,6266,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8C.html:6494,Performance,optimiz,optimization,6494,"le beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Computation of the error function erf(x).Definition TMath.cxx:190; rf105_funcbindingDefinition rf105_funcbinding.py:1; ; RooCFunction1Binding<double,double>::erf[ function=TMath::Erf x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=(0x7fb320797e70) x=x2 y=a z=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf105_funcbinding.C. tutorialsroofitrf105_funcbinding.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3202,Availability,error,error,3202,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:2677,Deployability,integrat,integrator,2677,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:2808,Deployability,integrat,integrator,2808,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3392,Deployability,integrat,integrator,3392,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3620,Deployability,integrat,integrator,3620,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:2677,Integrability,integrat,integrator,2677,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:2808,Integrability,integrat,integrator,2808,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3392,Integrability,integrat,integrator,3392,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3620,Integrability,integrat,integrator,3620,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:954,Modifiability,variab,variables,954,". ROOT: tutorials/roofit/rf105_funcbinding.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf105_funcbinding.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'BASIC FUNCTIONALITY' RooFit tutorial macro #105 Demonstration of binding ROOT Math functions as RooFit functions and pdfs . ; import ROOT; ; # Bind ROOT TMath::Erf C function; # ---------------------------------------------------; ; # Bind one-dimensional ROOT.TMath.Erf function as ROOT.RooAbsReal function; x = ROOT.RooRealVar(""x"", ""x"", -3, 3); erf = ROOT.RooFit.bindFunction(""erf"", ROOT.TMath.Erf, x); ; # Print erf definition; erf.Print(); ; # Plot erf on frame; frame1 = x.frame(Title=""TMath.Erf bound as ROOT.RooFit function""); erf.plotOn(frame1); ; # Bind ROOT::Math::beta_pdf C function; # -----------------------------------------------------------------------; ; # Bind pdf ROOT.Math.Beta with three variables as ROOT.RooAbsPdf function; x2 = ROOT.RooRealVar(""x2"", ""x2"", 0, 0.999); a = ROOT.RooRealVar(""a"", ""a"", 5, 0, 10); b = ROOT.RooRealVar(""b"", ""b"", 2, 0, 10); beta = ROOT.RooFit.bindPdf(""beta"", ROOT.Math.beta_pdf, x2, a, b); ; # Perf beta definition; beta.Print(); ; # Generate some events and fit; data = beta.generate({x2}, 10000); beta.fitTo(data, PrintLevel=-1); ; # Plot data and pdf on frame; frame2 = x2.frame(Title=""ROOT.Math.Beta bound as ROOT.RooFit pdf""); data.plotOn(frame2); beta.plotOn(frame2); ; # Bind ROOT TF1 as RooFit function; # ---------------------------------------------------------------; ; # Create a ROOT TF1 function; fa1 = ROOT.TF1(""fa1"", ""sin(x)/x"", 0, 10); ; # Create an observable; x3 = ROOT.RooRealVar(""x3"", ""x3"", 0.01, 20); ; # Create binding of TF1 object to above observable; rfa1 = ROOT.RooFit.bindFunction(fa1, x3); ; # Print rfa1 definition; rfa1.Print(); ; # Make plot frame in observable, TF1 binding function; frame3 = x3.frame(Title=""TF1 bound as ROOT.RooFit function""); rfa1.plotOn(frame3); ; c = R",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3296,Performance,optimiz,optimization,3296,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf105__funcbinding_8py.html:3524,Performance,optimiz,optimization,3524,"ame3); ; c = ROOT.TCanvas(""rf105_funcbinding"", ""rf105_funcbinding"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); ; c.SaveAs(""rf105_funcbinding.png""); RooCFunction1Binding<double,double>::erf[ function=(0x7f013b501000) x=x ] = 0; RooCFunction3PdfBinding<double,double,double,double>::beta[ function=ROOT::Math::beta_pdf x=x2 a=a b=b ] = 0.934689; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Fitting -- RooAbsPdf::fitTo(beta_over_beta_Int[x2]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_beta_over_beta_Int[x2]_betaData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(beta_Int[x2]) using numeric integrator RooIntegrator1D to calculate Int(x2); RooTFnBinding::fa1[ TFn={fa1=sin(x)/x} obs=(x3) ] = -0.0547936; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf105_funcbinding.py. tutorialsroofitrf105_funcbinding.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf105__funcbinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8py.html
https://root.cern/doc/master/rf106__plotdecoration_8C.html:5463,Availability,error,error,5463,"iable that can be changed from the outside.Definition RooRealVar.h:37; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TTextBase class for several text objects.Definition TText.h:22; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; arrowDefinition RArrowDS.hxx:17; rf106_plotdecorationDefinition rf106_plotdecoration.py:1; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf106_plotdecoration.C. tutorialsroofitrf106_plotdecoration.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8C.html
https://root.cern/doc/master/rf106__plotdecoration_8C.html:3476,Modifiability,variab,variable,3476,">Write();; f.Close();; ; // To read back and plot frame with all decorations in clean root session do; // root> TFile f(""rf106_plotdecoration.root"") ;; // root> xframe->Draw() ;; ; new TCanvas(""rf106_plotdecoration"", ""rf106_plotdecoration"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; }; f#define f(i)Definition RSha256.hxx:104; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; TArrow.h; TAxis.h; TCanvas.h; TFile.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TText.h; gPad#define gPadDefinition TVirtualPad.h:308; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::addObjectvoid addObject(TObject *obj, Option_t *drawOptions="""", bool invisible=false)Add a generic object to this plot.Definition RooPlot.cxx:366; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Defini",MatchSource.WIKI,doc/master/rf106__plotdecoration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8C.html
https://root.cern/doc/master/rf106__plotdecoration_8C.html:5557,Performance,optimiz,optimization,5557,"iable that can be changed from the outside.Definition RooRealVar.h:37; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TTextBase class for several text objects.Definition TText.h:22; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; arrowDefinition RArrowDS.hxx:17; rf106_plotdecorationDefinition rf106_plotdecoration.py:1; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf106_plotdecoration.C. tutorialsroofitrf106_plotdecoration.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8C.html
https://root.cern/doc/master/rf106__plotdecoration_8C.html:5654,Performance,optimiz,optimization,5654,"iable that can be changed from the outside.Definition RooRealVar.h:37; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttText::SetTextColorvirtual void SetTextColor(Color_t tcolor=1)Set the text color.Definition TAttText.h:44; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TTextBase class for several text objects.Definition TText.h:22; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; arrowDefinition RArrowDS.hxx:17; rf106_plotdecorationDefinition rf106_plotdecoration.py:1; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf106_plotdecoration.C. tutorialsroofitrf106_plotdecoration.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8C.html
https://root.cern/doc/master/rf106__plotdecoration_8py.html:2735,Availability,error,error,2735,"t=0.55); ; # Add box with data statistics; # -------------------------------------------------------; ; # X size of box is from 55% to 99% of Xaxis range, of box is at 80% of; # Yaxis range); data.statOn(frame, Layout=(0.55, 0.99, 0.8)); ; # Add text and arrow; # -----------------------------------; ; # Add text to frame; txt = ROOT.TText(2, 100, ""Signal""); txt.SetTextSize(0.04); txt.SetTextColor(ROOT.kRed); frame.addObject(txt); ; # Add arrow to frame; arrow = ROOT.TArrow(2, 100, -1, 50, 0.01, ""|>""); arrow.SetLineColor(ROOT.kRed); arrow.SetFillColor(ROOT.kRed); arrow.SetLineWidth(3); frame.addObject(arrow); ; # Persist frame with all decorations in ROOT file; # ---------------------------------------------------------------------------------------------; ; f = ROOT.TFile(""rf106_plotdecoration.root"", ""RECREATE""); frame.Write(); f.Close(); ; # To read back and plot frame with all decorations in clean root session do; # root> ROOT.TFile f(""rf106_plotdecoration.root""); # root> xframe.Draw(); ; c = ROOT.TCanvas(""rf106_plotdecoration"", ""rf106_plotdecoration"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf106_plotdecoration.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf106_plotdecoration.py. tutorialsroofitrf106_plotdecoration.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8py.html
https://root.cern/doc/master/rf106__plotdecoration_8py.html:2829,Performance,optimiz,optimization,2829,"t=0.55); ; # Add box with data statistics; # -------------------------------------------------------; ; # X size of box is from 55% to 99% of Xaxis range, of box is at 80% of; # Yaxis range); data.statOn(frame, Layout=(0.55, 0.99, 0.8)); ; # Add text and arrow; # -----------------------------------; ; # Add text to frame; txt = ROOT.TText(2, 100, ""Signal""); txt.SetTextSize(0.04); txt.SetTextColor(ROOT.kRed); frame.addObject(txt); ; # Add arrow to frame; arrow = ROOT.TArrow(2, 100, -1, 50, 0.01, ""|>""); arrow.SetLineColor(ROOT.kRed); arrow.SetFillColor(ROOT.kRed); arrow.SetLineWidth(3); frame.addObject(arrow); ; # Persist frame with all decorations in ROOT file; # ---------------------------------------------------------------------------------------------; ; f = ROOT.TFile(""rf106_plotdecoration.root"", ""RECREATE""); frame.Write(); f.Close(); ; # To read back and plot frame with all decorations in clean root session do; # root> ROOT.TFile f(""rf106_plotdecoration.root""); # root> xframe.Draw(); ; c = ROOT.TCanvas(""rf106_plotdecoration"", ""rf106_plotdecoration"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf106_plotdecoration.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf106_plotdecoration.py. tutorialsroofitrf106_plotdecoration.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8py.html
https://root.cern/doc/master/rf106__plotdecoration_8py.html:2926,Performance,optimiz,optimization,2926,"t=0.55); ; # Add box with data statistics; # -------------------------------------------------------; ; # X size of box is from 55% to 99% of Xaxis range, of box is at 80% of; # Yaxis range); data.statOn(frame, Layout=(0.55, 0.99, 0.8)); ; # Add text and arrow; # -----------------------------------; ; # Add text to frame; txt = ROOT.TText(2, 100, ""Signal""); txt.SetTextSize(0.04); txt.SetTextColor(ROOT.kRed); frame.addObject(txt); ; # Add arrow to frame; arrow = ROOT.TArrow(2, 100, -1, 50, 0.01, ""|>""); arrow.SetLineColor(ROOT.kRed); arrow.SetFillColor(ROOT.kRed); arrow.SetLineWidth(3); frame.addObject(arrow); ; # Persist frame with all decorations in ROOT file; # ---------------------------------------------------------------------------------------------; ; f = ROOT.TFile(""rf106_plotdecoration.root"", ""RECREATE""); frame.Write(); f.Close(); ; # To read back and plot frame with all decorations in clean root session do; # root> ROOT.TFile f(""rf106_plotdecoration.root""); # root> xframe.Draw(); ; c = ROOT.TCanvas(""rf106_plotdecoration"", ""rf106_plotdecoration"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf106_plotdecoration.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf106_plotdecoration.py. tutorialsroofitrf106_plotdecoration.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf106__plotdecoration_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf106__plotdecoration_8py.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:1166,Availability,error,errors,1166,"File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: various plotting styles of data, functions in a RooPlot . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf107_plotstyles(); {; ; // S e t u p m o d e l; // ---------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create Gaussian; RooRealVar sigma(""sigma"", ""sigma"", 3, 0.1, 10);; RooRealVar mean(""mean"", ""mean"", -3, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style t",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:1585,Availability,error,error,1585,"s(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style to dashed; gauss.plotOn(frame2, LineStyle(kDashed));; ; // Filled shapes in green color; gauss.plotOn(frame3, DrawOption(""F""), FillColor(kOrange), MoveToBack());; ; //; gauss.plotOn(frame4, Range(-8, 3), LineColor(kMagenta));; ; TCanvas *c = new TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleO",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:1610,Availability,error,errors,1610,"s(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style to dashed; gauss.plotOn(frame2, LineStyle(kDashed));; ; // Filled shapes in green color; gauss.plotOn(frame3, DrawOption(""F""), FillColor(kOrange), MoveToBack());; ; //; gauss.plotOn(frame4, Range(-8, 3), LineColor(kMagenta));; ; TCanvas *c = new TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleO",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:1694,Availability,error,error,1694,"s(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style to dashed; gauss.plotOn(frame2, LineStyle(kDashed));; ; // Filled shapes in green color; gauss.plotOn(frame3, DrawOption(""F""), FillColor(kOrange), MoveToBack());; ; //; gauss.plotOn(frame4, Range(-8, 3), LineColor(kMagenta));; ; TCanvas *c = new TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleO",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:1766,Availability,error,error,1766,"s(""gauss"", ""gauss"", x, mean, sigma);; ; // Generate a sample of 100 events with sigma=3; std::unique_ptr<RooDataSet> data{gauss.generate(x, 100)};; ; // Fit pdf to data; gauss.fitTo(*data, PrintLevel(-1));; ; // M a k e p l o t f r a m e s; // -------------------------------; ; // Make four plot frames to demonstrate various plotting features; RooPlot *frame1 = x.frame(Name(""xframe""), Title(""Red Curve / SumW2 Histo errors""), Bins(20));; RooPlot *frame2 = x.frame(Name(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style to dashed; gauss.plotOn(frame2, LineStyle(kDashed));; ; // Filled shapes in green color; gauss.plotOn(frame3, DrawOption(""F""), FillColor(kOrange), MoveToBack());; ; //; gauss.plotOn(frame4, Range(-8, 3), LineColor(kMagenta));; ; TCanvas *c = new TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleO",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:5061,Availability,error,error,5061,"n that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf107_plotstylesDefinition rf107_plotstyles.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf107_plotstyles.C. tutorialsroofitrf107_plotstyles.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:2236,Energy Efficiency,green,green,2236,"me(""xframe""), Title(""Dashed Curve / No XError bars""), Bins(20));; RooPlot *frame3 = x.frame(Name(""xframe""), Title(""Filled Curve / Blue Histo""), Bins(20));; RooPlot *frame4 = x.frame(Name(""xframe""), Title(""Partial Range / Filled Bar chart""), Bins(20));; ; // D a t a p l o t t i n g s t y l e s; // ---------------------------------------; ; // Use sqrt(sum(weights^2)) error instead of Poisson errors; data->plotOn(frame1, DataError(RooAbsData::SumW2));; ; // Remove horizontal error bars; data->plotOn(frame2, XErrorSize(0));; ; // Blue markers and error bors; data->plotOn(frame3, MarkerColor(kBlue), LineColor(kBlue));; ; // Filled bar chart; data->plotOn(frame4, DrawOption(""B""), DataError(RooAbsData::None), XErrorSize(0), FillColor(kGray));; ; // F u n c t i o n p l o t t i n g s t y l e s; // -----------------------------------------------; ; // Change line color to red; gauss.plotOn(frame1, LineColor(kRed));; ; // Change line style to dashed; gauss.plotOn(frame2, LineStyle(kDashed));; ; // Filled shapes in green color; gauss.plotOn(frame3, DrawOption(""F""), FillColor(kOrange), MoveToBack());; ; //; gauss.plotOn(frame4, Range(-8, 3), LineColor(kMagenta));; ; TCanvas *c = new TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800);; c->Divide(2, 2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame1->GetYaxis()->SetTitleOffset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.6);; frame3->Draw();; c->cd(4);; gPad->SetLeftMargin(0.15);; frame4->GetYaxis()->SetTitleOffset(1.6);; frame4->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kGray@ kGrayDefinition Rtypes.h:65; kRed@ kRedDefinition Rtypes.h:66; kOrange@ kOrangeDefinition Rtypes.h:67; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCa",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:3874,Modifiability,variab,variable,3874,".15);; frame4->GetYaxis()->SetTitleOffset(1.6);; frame4->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kGray@ kGrayDefinition Rtypes.h:65; kRed@ kRedDefinition Rtypes.h:66; kOrange@ kOrangeDefinition Rtypes.h:67; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::None@ NoneDefinition RooAbsData.h:108; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf107_plotstylesDefinition rf107_plotstyles.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coeffi",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:5155,Performance,optimiz,optimization,5155,"n that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf107_plotstylesDefinition rf107_plotstyles.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf107_plotstyles.C. tutorialsroofitrf107_plotstyles.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8C.html:5252,Performance,optimiz,optimization,5252,"n that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf107_plotstylesDefinition rf107_plotstyles.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf107_plotstyles.C. tutorialsroofitrf107_plotstyles.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8C.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:976,Availability,error,errors,976,". ROOT: tutorials/roofit/rf107_plotstyles.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf107_plotstyles.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: demonstration of various plotting styles of data, functions in a RooPlot . ; import ROOT; ; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ;",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:1335,Availability,error,error,1335,"tration of various plotting styles of data, functions in a RooPlot . ; import ROOT; ; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:1360,Availability,error,errors,1360,"tration of various plotting styles of data, functions in a RooPlot . ; import ROOT; ; ; # Set up model; # ---------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:1430,Availability,error,error,1430,"servables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create Gaussian; sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); ",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:1498,Availability,error,error,1498," sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, -10, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); ; # Generate a sample of 100 events with sigma=3; data = gauss.generate({x}, 100); ; # Fit pdf to data; gauss.fitTo(data, PrintLevel=-1); ; # Make plot frames; # -------------------------------; ; # Make four plot frames to demonstrate various plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis(",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:2903,Availability,error,error,2903,"hart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis().SetTitleOffset(1.6); frame4.Draw(); ; c.SaveAs(""rf107_plotstyles.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf107_plotstyles.py. tutorialsroofitrf107_plotstyles.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:1911,Energy Efficiency,green,green,1911,"plotting features; frame1 = x.frame(Name=""xframe"", Title=""Red Curve / SumW2 Histo errors"", Bins=20); frame2 = x.frame(Name=""xframe"", Title=""Dashed Curve / No XError bars"", Bins=20); frame3 = x.frame(Name=""xframe"", Title=""Filled Curve / Blue Histo"", Bins=20); frame4 = x.frame(Name=""xframe"", Title=""Partial Range / Filled Bar chart"", Bins=20); ; # Data plotting styles; # ---------------------------------------; ; # Use sqrt(sum(weights^2)) error instead of Poisson errors; data.plotOn(frame1, DataError=""SumW2""); ; # Remove horizontal error bars; data.plotOn(frame2, XErrorSize=0); ; # Blue markers and error bors; data.plotOn(frame3, MarkerColor=""b"", LineColor=""b""); ; # Filled bar chart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis().SetTitleOffset(1.6); frame4.Draw(); ; c.SaveAs(""rf107_plotstyles.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, u",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:2997,Performance,optimiz,optimization,2997,"hart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis().SetTitleOffset(1.6); frame4.Draw(); ; c.SaveAs(""rf107_plotstyles.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf107_plotstyles.py. tutorialsroofitrf107_plotstyles.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf107__plotstyles_8py.html:3094,Performance,optimiz,optimization,3094,"hart; data.plotOn(frame4, DrawOption=""B"", DataError=None, XErrorSize=0, FillColor=""kGray""); ; # Function plotting styles; # -----------------------------------------------; ; # Change line color to red; gauss.plotOn(frame1, LineColor=""r""); ; # Change line style to dashed; gauss.plotOn(frame2, LineStyle=""--""); ; # Filled shapes in green color; gauss.plotOn(frame3, MoveToBack=True, DrawOption=""F"", FillColor=""kOrange""); ; #; gauss.plotOn(frame4, Range=(-8, 3), LineColor=""m""); ; c = ROOT.TCanvas(""rf107_plotstyles"", ""rf107_plotstyles"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.6); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis().SetTitleOffset(1.6); frame4.Draw(); ; c.SaveAs(""rf107_plotstyles.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_gaussData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(gauss) only plotting range [-8,3], curve is normalized to data in given range; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'plotRange' created with bounds [-8,3]; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf107_plotstyles.py. tutorialsroofitrf107_plotstyles.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf107__plotstyles_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf107__plotstyles_8py.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:6400,Deployability,integrat,integrates,6400,"is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf108_plotbinning.C. tutorialsroofitrf108_plotbinning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:6400,Integrability,integrat,integrates,6400,"is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf108_plotbinning.C. tutorialsroofitrf108_plotbinning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:291,Modifiability,variab,variable,291,". ROOT: tutorials/roofit/rf108_plotbinning.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf108_plotbinning.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: plotting unbinned data with alternate and variable binnings . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooBMixDecay.h""; #include ""RooCategory.h""; #include ""RooBinning.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf108_plotbinning(); {; ; // S e t u p m o d e l; // ---------------------; ; // Build a B decay pdf with mixing; RooRealVar dt(""dt"", ""dt"", -20, 20);; RooRealVar dm(""dm"", ""dm"", 0.472);; RooRealVar tau(""tau"", ""tau"", 1.547);; RooRealVar w(""w"", ""mistag rate"", 0.1);; RooRealVar dw(""dw"", ""delta mistag rate"", 0.);; ; RooCategory mixState(""mixState"", ""B0/B0bar mixing state"");; mixState.defineType(""mixed"", -1);; mixState.defineType(""unmixed"", 1);; RooCategory tagFlav(""tagFlav"", ""Flavour of the tagged B0"");; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.1);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct Bdecay (x) gauss; RooBMixDecay bmix(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // S a m p l e d a t a f r o m m o d e l; // --------------------------------------------; ; // Sample 2000 events in (dt,mixState,tagFlav) from bmix; std::unique_ptr<RooDataSet> data{bmix.generate(RooArgSet(dt, mixState, tagFlav), 2000)};; ; // S h o w d t d i s t r i b u t i o n w i t h c u s t o m b i n n i n g; // -------------------------------------------------------------------------------; ; // Make plot of dt distribution of data in range (-15,15) with fine binning for dt>0 and coa",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:2923,Modifiability,variab,variable,2923,"--------------------------------------------------------; ; // Make plot of dt distribution of data in range (-15,15) with fine binning for dt>0 and coarse binning for dt<0; ; // Create binning object with range (-15,15); RooBinning tbins(-15, 15);; ; // Add 60 bins with uniform spacing in range (-15,0); tbins.addUniform(60, -15, 0);; ; // Add 15 bins with uniform spacing in range (0,15); tbins.addUniform(15, 0, 15);; ; // Make plot with specified binning; RooPlot *dtframe = dt.frame(Range(-15, 15), Title(""dt distribution with custom binning""));; data->plotOn(dtframe, Binning(tbins));; bmix.plotOn(dtframe);; ; // NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; // in Y axis label (100 bins --> Events/0.4*Xaxis-dim) so that all bins represent a consistent density distribution; ; // S h o w m i x s t a t e a s y m m e t r y w i t h c u s t o m b i n n i n g; // ------------------------------------------------------------------------------------; ; // Make plot of dt distribution of data asymmetry in 'mixState' with variable binning; ; // Create binning object with range (-10,10); RooBinning abins(-10, 10);; ; // Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0);; abins.addBoundaryPair(1);; abins.addBoundaryPair(2);; abins.addBoundaryPair(3);; abins.addBoundaryPair(4);; abins.addBoundaryPair(6);; ; // Create plot frame in dt; RooPlot *aframe = dt.frame(Range(-10, 10), Title(""mixState asymmetry distribution with custom binning""));; ; // Plot mixState asymmetry of data with specified custom binning; data->plotOn(aframe, Asymmetry(mixState), Binning(abins));; ; // Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry(mixState));; ; // Adjust vertical range of plot to sensible values for an asymmetry; aframe->SetMinimum(-1.1);; aframe->SetMaximum(1.1);; ; // NB: For asymmetry distributions no density corrects are needed (and are thus not applied); ; // Draw plots on canvas; TCanvas ",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:5524,Modifiability,variab,variable,5524,"h GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooBMixDecayClass RooBMixDecay is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plott",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:6416,Modifiability,variab,variables,6416,"is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf108_plotbinning.C. tutorialsroofitrf108_plotbinning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8C.html:6517,Modifiability,variab,variables,6517,"is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooBinningImplements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choi...Definition RooBinning.h:27; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMaximumSetMaximum(ymax); RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf108_plotbinningDefinition rf108_plotbinning.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf108_plotbinning.C. tutorialsroofitrf108_plotbinning.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8C.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:3785,Deployability,integrat,integrates,3785,"nning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c = ROOT.TCanvas(""rf108_plotbinning"", ""rf108_plotbinning"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); dtframe.GetYaxis().SetTitleOffset(1.6); dtframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); aframe.GetYaxis().SetTitleOffset(1.6); aframe.Draw(); ; c.SaveAs(""rf108_plotbinning.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf108_plotbinning.py. tutorialsroofitrf108_plotbinning.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:3785,Integrability,integrat,integrates,3785,"nning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c = ROOT.TCanvas(""rf108_plotbinning"", ""rf108_plotbinning"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); dtframe.GetYaxis().SetTitleOffset(1.6); dtframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); aframe.GetYaxis().SetTitleOffset(1.6); aframe.Draw(); ; c.SaveAs(""rf108_plotbinning.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf108_plotbinning.py. tutorialsroofitrf108_plotbinning.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:306,Modifiability,variab,variable,306,". ROOT: tutorials/roofit/rf108_plotbinning.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf108_plotbinning.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: plotting unbinned data with alternate and variable binnings . ; import ROOT; ; # Set up model; # ---------------------; ; # Build a B decay pdf with mixing; dt = ROOT.RooRealVar(""dt"", ""dt"", -20, 20); dm = ROOT.RooRealVar(""dm"", ""dm"", 0.472); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.547); w = ROOT.RooRealVar(""w"", ""mistag rate"", 0.1); dw = ROOT.RooRealVar(""dw"", ""delta mistag rate"", 0.0); ; mixState = ROOT.RooCategory(""mixState"", ""B0/B0bar mixing state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Build a gaussian resolution model; dterr = ROOT.RooRealVar(""dterr"", ""dterr"", 0.1, 1.0); bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.1); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct Bdecay (x) gauss; bmix = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Sample data from model; # --------------------------------------------; ; # Sample 2000 events in (dt,mixState,tagFlav) from bmix; data = bmix.generate({dt, mixState, tagFlav}, 2000); ; # Show dt distribution with custom binning; # -------------------------------------------------------------------------------; ; # Make plot of dt distribution of data in range (-15,15) with fine binning; # for dt>0 and coarse binning for dt<0; ; # Create binning object with range (-15,15); tbins = ROOT.RooBinning(-15, 15); ; # Add 60 bins with uniform spacing in range (-15,0); tbins.addUniform(60, -15, 0); ; # Add 15 bins with uniform spacing in range (0,15); tbins.addUniform(15, 0, 15); ; # Make plot with specified binning; dtframe = dt.frame(Range=(-15, 15), Title=""dt",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:2523,Modifiability,variab,variable,2523,"0); ; # Show dt distribution with custom binning; # -------------------------------------------------------------------------------; ; # Make plot of dt distribution of data in range (-15,15) with fine binning; # for dt>0 and coarse binning for dt<0; ; # Create binning object with range (-15,15); tbins = ROOT.RooBinning(-15, 15); ; # Add 60 bins with uniform spacing in range (-15,0); tbins.addUniform(60, -15, 0); ; # Add 15 bins with uniform spacing in range (0,15); tbins.addUniform(15, 0, 15); ; # Make plot with specified binning; dtframe = dt.frame(Range=(-15, 15), Title=""dt distribution with custom binning""); data.plotOn(dtframe, Binning=tbins); bmix.plotOn(dtframe); ; # NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:3801,Modifiability,variab,variables,3801,"nning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c = ROOT.TCanvas(""rf108_plotbinning"", ""rf108_plotbinning"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); dtframe.GetYaxis().SetTitleOffset(1.6); dtframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); aframe.GetYaxis().SetTitleOffset(1.6); aframe.Draw(); ; c.SaveAs(""rf108_plotbinning.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf108_plotbinning.py. tutorialsroofitrf108_plotbinning.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf108__plotbinning_8py.html:3902,Modifiability,variab,variables,3902,"nning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; ; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; ; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; ; # Create binning object with range (-10,10); abins = ROOT.RooBinning(-10, 10); ; # Add boundaries at 0, (-1,1), (-2,2), (-3,3), (-4,4) and (-6,6); abins.addBoundary(0); abins.addBoundaryPair(1); abins.addBoundaryPair(2); abins.addBoundaryPair(3); abins.addBoundaryPair(4); abins.addBoundaryPair(6); ; # Create plot frame in dt; aframe = dt.frame(Range=(-10, 10), Title=""mixState asymmetry distribution with custom binning""); ; # Plot mixState asymmetry of data with specified customg binning; data.plotOn(aframe, Asymmetry=mixState, Binning=abins); ; # Plot corresponding property of pdf; bmix.plotOn(aframe, Asymmetry=mixState); ; # Adjust vertical range of plot to sensible values for an asymmetry; aframe.SetMinimum(-1.1); aframe.SetMaximum(1.1); ; # NB: For asymmetry distributions no density corrects are needed (and are; # thus not applied); ; # Draw plots on canvas; c = ROOT.TCanvas(""rf108_plotbinning"", ""rf108_plotbinning"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); dtframe.GetYaxis().SetTitleOffset(1.6); dtframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); aframe.GetYaxis().SetTitleOffset(1.6); aframe.Draw(); ; c.SaveAs(""rf108_plotbinning.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooAbsReal::plotAsymOn(bmix) plot on dt projects variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf108_plotbinning.py. tutorialsroofitrf108_plotbinning.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf108__plotbinning_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf108__plotbinning_8py.html
https://root.cern/doc/master/rf109__chi2residpull_8C.html:3666,Modifiability,variab,variable,3666,"Offset(1.6);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.6);; frame3->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooHist.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooHistGraphical representation of binned data based on the TGraphAsymmErrors class.Definition RooHist.h:29; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::chiSquaredouble chiSquare(int nFitParam=0) constShortcut for RooPlot::chiSquare(const char* pdfname, const char* histname, int nFitParam=nullptr)Definition RooPlot.h:180; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::residHistRooHist * residHist(const char *histname=nullptr, const char *pdfname=nullptr, bool normalize=false, bool useAverage=true) constReturn a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.Definition RooPlot.cxx:1101; RooPlot::pullHistRooHist * pullHist(const char *histname=nullptr, const char *pdfname=nullptr, bool useAverage=true) constUses residHist() and sets normalize=true.Definition RooPlot.h:185; RooPlot::addPlotablevoid addPlotable(RooPlotable *plota",MatchSource.WIKI,doc/master/rf109__chi2residpull_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf109__chi2residpull_8C.html
https://root.cern/doc/master/rf110__normintegration_8C.html:275,Deployability,integrat,integration,275,". ROOT: tutorials/roofit/rf110_normintegration.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf110_normintegration.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: normalization and integration of pdfs, construction of cumulative distribution monodimensional functions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf110_normintegration(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create pdf gaussx(x,-2,3); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gx = "" << gx.getVal() << endl;; ; // Return value of gx normalized over x in range [-10,10]; RooArgSet nset(x);; cout << ""gx_Norm[x] = "" << gx.getVal(&nset) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x] == gx / gx_Int[x]; std::unique_ptr<RooAbsReal> igx{gx.createIntegral(x)};; cout << ""gx_Int[x] = "" << igx->getVal() << endl;; ; // I n t e g r a t e n o r m a l i z e d p d f o v e r s u b r a n g e; // ----------------------------------------------------------------------------; ; // Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5);; ; // Create an integral of gx_Norm[x] over x in range ""signal""; // This is the fraction of of pdf gx_Norm[x] which is in the; // range named ""signal""; std::unique_ptr<RooAbsReal> igx_sig{gx.createIntegral(x, NormSet(x), Range(""signal""))};; cout << ""gx_Int[x|signal]_Norm[x] = "" << igx_sig->getVal() << endl;; ; // C o n s t r u c t c u m u l a t i v e d i s t r i b u t i o n f u ",MatchSource.WIKI,doc/master/rf110__normintegration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8C.html
https://root.cern/doc/master/rf110__normintegration_8C.html:275,Integrability,integrat,integration,275,". ROOT: tutorials/roofit/rf110_normintegration.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf110_normintegration.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: normalization and integration of pdfs, construction of cumulative distribution monodimensional functions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; using namespace RooFit;; ; void rf110_normintegration(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; ; // Create pdf gaussx(x,-2,3); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gx = "" << gx.getVal() << endl;; ; // Return value of gx normalized over x in range [-10,10]; RooArgSet nset(x);; cout << ""gx_Norm[x] = "" << gx.getVal(&nset) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x] == gx / gx_Int[x]; std::unique_ptr<RooAbsReal> igx{gx.createIntegral(x)};; cout << ""gx_Int[x] = "" << igx->getVal() << endl;; ; // I n t e g r a t e n o r m a l i z e d p d f o v e r s u b r a n g e; // ----------------------------------------------------------------------------; ; // Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5);; ; // Create an integral of gx_Norm[x] over x in range ""signal""; // This is the fraction of of pdf gx_Norm[x] which is in the; // range named ""signal""; std::unique_ptr<RooAbsReal> igx_sig{gx.createIntegral(x, NormSet(x), Range(""signal""))};; cout << ""gx_Int[x|signal]_Norm[x] = "" << igx_sig->getVal() << endl;; ; // C o n s t r u c t c u m u l a t i v e d i s t r i b u t i o n f u ",MatchSource.WIKI,doc/master/rf110__normintegration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8C.html
https://root.cern/doc/master/rf110__normintegration_8C.html:3107,Modifiability,variab,variable,3107,"-----------------------------------------------------------------------------------------; ; // Create the cumulative distribution function of gx; // i.e. calculate Int[-10,x] gx(x') dx'; std::unique_ptr<RooAbsReal> gx_cdf{gx.createCdf(x)};; ; // Plot cdf of gx versus x; RooPlot *frame = x.frame(Title(""cdf of Gaussian pdf""));; gx_cdf->plotOn(frame);; ; // Draw plot on canvas; new TCanvas(""rf110_normintegration"", ""rf110_normintegration"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; }; RooAbsReal.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf110_normintegrationDefinition rf110_normintegration.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; gx = 0.800737; gx_Norm[x] = 0.106896; gx_Int[x] = 7.49084; [#1] INFO:Eval -- RooRealVar",MatchSource.WIKI,doc/master/rf110__normintegration_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8C.html
https://root.cern/doc/master/rf110__normintegration_8py.html:302,Deployability,integrat,integration,302,". ROOT: tutorials/roofit/rf110_normintegration.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf110_normintegration.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: examples on normalization and integration of pdfs, construction of cumulative distribution functions from monodimensional pdfs . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create pdf gaussx(x,-2,3); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2, 3); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gx = "", gx.getVal()); ; # Return value of gx normalized over x in range [-10,10]; nset = {x}; print(""gx_Norm[x] = "", gx.getVal(nset)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x] == gx / gx_Int[x]; igx = gx.createIntegral({x}); print(""gx_Int[x] = "", igx.getVal()); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); ; # Create an integral of gx_Norm[x] over x in range ""signal""; # ROOT.This is the fraction of of pdf gx_Norm[x] which is in the; # range named ""signal""; xset = {x}; igx_sig = gx.createIntegral(xset, NormSet=xset, Range=""signal""); print(""gx_Int[x|signal]_Norm[x] = "", igx_sig.getVal()); ; # Construct cumulative distribution function from pdf; # -----------------------------------------------------------------------------------------------------; ; # Create the cumulative distribution function of gx; # i.e. calculate Int[-10,x] gx(x') dx'; gx_cdf = gx.createCdf({x}); ; # Plot cdf of gx versus x; frame = x.frame(Title=""cdf of Gaussian pd",MatchSource.WIKI,doc/master/rf110__normintegration_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8py.html
https://root.cern/doc/master/rf110__normintegration_8py.html:302,Integrability,integrat,integration,302,". ROOT: tutorials/roofit/rf110_normintegration.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf110_normintegration.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: examples on normalization and integration of pdfs, construction of cumulative distribution functions from monodimensional pdfs . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create pdf gaussx(x,-2,3); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2, 3); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gx = "", gx.getVal()); ; # Return value of gx normalized over x in range [-10,10]; nset = {x}; print(""gx_Norm[x] = "", gx.getVal(nset)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x] == gx / gx_Int[x]; igx = gx.createIntegral({x}); print(""gx_Int[x] = "", igx.getVal()); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); ; # Create an integral of gx_Norm[x] over x in range ""signal""; # ROOT.This is the fraction of of pdf gx_Norm[x] which is in the; # range named ""signal""; xset = {x}; igx_sig = gx.createIntegral(xset, NormSet=xset, Range=""signal""); print(""gx_Int[x|signal]_Norm[x] = "", igx_sig.getVal()); ; # Construct cumulative distribution function from pdf; # -----------------------------------------------------------------------------------------------------; ; # Create the cumulative distribution function of gx; # i.e. calculate Int[-10,x] gx(x') dx'; gx_cdf = gx.createCdf({x}); ; # Plot cdf of gx versus x; frame = x.frame(Title=""cdf of Gaussian pd",MatchSource.WIKI,doc/master/rf110__normintegration_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf110__normintegration_8py.html
https://root.cern/doc/master/rf111__derivatives_8C.html:5099,Deployability,integrat,integrator,5099," Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf111_derivativesDefinition rf111_derivatives.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf111_derivatives.C. tutorialsroofitrf111_derivatives.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf111__derivatives_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html
https://root.cern/doc/master/rf111__derivatives_8C.html:5099,Integrability,integrat,integrator,5099," Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf111_derivativesDefinition rf111_derivatives.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf111_derivatives.C. tutorialsroofitrf111_derivatives.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf111__derivatives_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html
https://root.cern/doc/master/rf111__derivatives_8C.html:686,Modifiability,variab,variables,686,". ROOT: tutorials/roofit/rf111_derivatives.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf111_derivatives.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: numerical 1st,2nd and 3rd order derivatives w.r.t. ; observables and parameters; pdf = gauss(x,m,s); xDouble_t x[n]Definition legend1.C:17; mTMarker mDefinition textangle.C:8. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf111_derivatives(); {; // S e t u p m o d e l; // ---------------------; ; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);; ; // Build gaussian pdf in terms of x,mean and sigma; RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);; ; // C r e a t e a n d p l o t d e r i v a t i v e s w . r . t . x; // ----------------------------------------------------------------------; ; // Derivative of normalized gauss(x) w.r.t. observable x; RooAbsReal *dgdx = gauss.derivative(x, 1);; ; // Second and third derivative of normalized gauss(x) w.r.t. observable x; RooAbsReal *d2gdx2 = gauss.derivative(x, 2);; RooAbsReal *d3gdx3 = gauss.derivative(x, 3);; ; // Construct plot frame in 'x'; RooPlot *xframe = x.frame(Title(""d(Gauss)/dx""));; ; // Plot gauss in frame (i.e. in x); gauss.plotOn(xframe);; ; // Plot derivatives in same frame; dgdx->plotOn(xframe, LineColor(kMagenta));; d2gdx2->plotOn(xframe, LineColor(kRed));; d3gdx3->plotOn(xframe, LineColor(kOrange));; ; // C r e a t e a n d p l o t d e r i v a t i v e s w . r . t . s i g m a; // ------------------------------------------------------------------------------; ; // Derivative of normalized gauss(x) w.r.t. parameter sigma; RooAbsReal ",MatchSource.WIKI,doc/master/rf111__derivatives_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html
https://root.cern/doc/master/rf111__derivatives_8C.html:4211,Modifiability,variab,variable,4211,"irtualPad.h:308; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::derivativeRooDerivative * derivative(RooRealVar &obs, Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf111_derivativesDefinition rf111_derivatives.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma",MatchSource.WIKI,doc/master/rf111__derivatives_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html
https://root.cern/doc/master/rf111__derivatives_8py.html:2549,Deployability,integrat,integrator,2549,"---------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. observable x; dgdx = gauss.derivative(x, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. observable x; d2gdx2 = gauss.derivative(x, 2); d3gdx3 = gauss.derivative(x, 3); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""d(Gauss)/dx""); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Plot derivatives in same frame; dgdx.plotOn(xframe, LineColor=""m""); d2gdx2.plotOn(xframe, LineColor=""r""); d3gdx3.plotOn(xframe, LineColor=""kOrange""); ; # Create and plot derivatives w.r.t. sigma; # ------------------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. parameter sigma; dgds = gauss.derivative(sigma, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. parameter sigma; d2gds2 = gauss.derivative(sigma, 2); d3gds3 = gauss.derivative(sigma, 3); ; # Construct plot frame in 'sigma'; sframe = sigma.frame(Title=""d(Gauss)/d(sigma)"", Range=(0.0, 2.0)); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(sframe); ; # Plot derivatives in same frame; dgds.plotOn(sframe, LineColor=""m""); d2gds2.plotOn(sframe, LineColor=""r""); d3gds3.plotOn(sframe, LineColor=""kOrange""); ; # Draw all frames on a canvas; c = ROOT.TCanvas(""rf111_derivatives"", ""rf111_derivatives"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); sframe.GetYaxis().SetTitleOffset(1.6); sframe.Draw(); ; c.SaveAs(""rf111_derivatives.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf111_derivatives.py. tutorialsroofitrf111_derivatives.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf111__derivatives_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8py.html
https://root.cern/doc/master/rf111__derivatives_8py.html:2549,Integrability,integrat,integrator,2549,"---------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. observable x; dgdx = gauss.derivative(x, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. observable x; d2gdx2 = gauss.derivative(x, 2); d3gdx3 = gauss.derivative(x, 3); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""d(Gauss)/dx""); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Plot derivatives in same frame; dgdx.plotOn(xframe, LineColor=""m""); d2gdx2.plotOn(xframe, LineColor=""r""); d3gdx3.plotOn(xframe, LineColor=""kOrange""); ; # Create and plot derivatives w.r.t. sigma; # ------------------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. parameter sigma; dgds = gauss.derivative(sigma, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. parameter sigma; d2gds2 = gauss.derivative(sigma, 2); d3gds3 = gauss.derivative(sigma, 3); ; # Construct plot frame in 'sigma'; sframe = sigma.frame(Title=""d(Gauss)/d(sigma)"", Range=(0.0, 2.0)); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(sframe); ; # Plot derivatives in same frame; dgds.plotOn(sframe, LineColor=""m""); d2gds2.plotOn(sframe, LineColor=""r""); d3gds3.plotOn(sframe, LineColor=""kOrange""); ; # Draw all frames on a canvas; c = ROOT.TCanvas(""rf111_derivatives"", ""rf111_derivatives"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); sframe.GetYaxis().SetTitleOffset(1.6); sframe.Draw(); ; c.SaveAs(""rf111_derivatives.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf111_derivatives.py. tutorialsroofitrf111_derivatives.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf111__derivatives_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8py.html
https://root.cern/doc/master/rf111__derivatives_8py.html:432,Modifiability,variab,variables,432,". ROOT: tutorials/roofit/rf111_derivatives.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf111_derivatives.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Basic functionality: numerical 1st, and 3rd order derivatives w.r.t. ; observables and parameters; pdf = gauss(x,m,s). ; import ROOT; ; # Set up model; # ---------------------; ; # Declare variables x,mean, with associated name, title, value and allowed; # range; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean of gaussian"", 1, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 1, 0.1, 10); ; # Build gaussian pdf in terms of x, and sigma; gauss = ROOT.RooGaussian(""gauss"", ""gaussian PDF"", x, mean, sigma); ; # Create and plot derivatives w.r.t. x; # ----------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. observable x; dgdx = gauss.derivative(x, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. observable x; d2gdx2 = gauss.derivative(x, 2); d3gdx3 = gauss.derivative(x, 3); ; # Construct plot frame in 'x'; xframe = x.frame(Title=""d(Gauss)/dx""); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(xframe); ; # Plot derivatives in same frame; dgdx.plotOn(xframe, LineColor=""m""); d2gdx2.plotOn(xframe, LineColor=""r""); d3gdx3.plotOn(xframe, LineColor=""kOrange""); ; # Create and plot derivatives w.r.t. sigma; # ------------------------------------------------------------------------------; ; # Derivative of normalized gauss(x) w.r.t. parameter sigma; dgds = gauss.derivative(sigma, 1); ; # Second and third derivative of normalized gauss(x) w.r.t. parameter sigma; d2gds2 = gauss.derivative(sigma, 2); d3gds3 = gauss.derivative(sigma, 3); ; # Construct plot frame in 'sigma'; sframe = sigma.frame(Title=""d(Gauss)/d(sigma)"", Range=(0.0, 2.0)); ; # Plot gauss in frame (i.e. in x); gauss.plotOn(sframe); ; # Plot derivatives in same fram",MatchSource.WIKI,doc/master/rf111__derivatives_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8py.html
https://root.cern/doc/master/rf201__composite_8C.html:6750,Availability,error,error,6750,"ss.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7fff963ebea0 RooAddPdf::model = 0.898624/1 [Auto,Clean] ; 0x7fff963eb588/V- RooChebychev::bkg = 0.79893 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963e9588/V- RooRealVar::a0 = 0.441621 +/- 0.0731875; 0x7fff963e9970/V- RooRealVar::a1 = 0.20107 +/- 0.117637; 0x7fff963eac48/V- RooRealVar::bkgfrac = 0.504184 +/- 0.0359091; 0x7fff963e9d58/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7fff963e8860/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963ea478/V- RooRealVar::mean = 5; 0x7fff963e8db8/V- RooRealVar::sigma1 = 0.5; 0x7fff963ea8",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8C.html:5391,Modifiability,variab,variable,5391,"kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' wit",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8C.html:6844,Performance,optimiz,optimization,6844,"ss.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7fff963ebea0 RooAddPdf::model = 0.898624/1 [Auto,Clean] ; 0x7fff963eb588/V- RooChebychev::bkg = 0.79893 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963e9588/V- RooRealVar::a0 = 0.441621 +/- 0.0731875; 0x7fff963e9970/V- RooRealVar::a1 = 0.20107 +/- 0.117637; 0x7fff963eac48/V- RooRealVar::bkgfrac = 0.504184 +/- 0.0359091; 0x7fff963e9d58/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7fff963e8860/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963ea478/V- RooRealVar::mean = 5; 0x7fff963e8db8/V- RooRealVar::sigma1 = 0.5; 0x7fff963ea8",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8C.html:6941,Performance,optimiz,optimization,6941,"ss.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7fff963ebea0 RooAddPdf::model = 0.898624/1 [Auto,Clean] ; 0x7fff963eb588/V- RooChebychev::bkg = 0.79893 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963e9588/V- RooRealVar::a0 = 0.441621 +/- 0.0731875; 0x7fff963e9970/V- RooRealVar::a1 = 0.20107 +/- 0.117637; 0x7fff963eac48/V- RooRealVar::bkgfrac = 0.504184 +/- 0.0359091; 0x7fff963e9d58/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7fff963e8860/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7fff963ebab8/V- RooRealVar::x = 5; 0x7fff963ea478/V- RooRealVar::mean = 5; 0x7fff963e8db8/V- RooRealVar::sigma1 = 0.5; 0x7fff963ea8",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8C.html:6219,Safety,safe,safe,6219," frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8C.html:6386,Safety,safe,safe,6386,"le xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf201_compositeDefinition rf201_composite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7fff963ebea0 RooAddPdf::",MatchSource.WIKI,doc/master/rf201__composite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8C.html
https://root.cern/doc/master/rf201__composite_8py.html:4138,Availability,error,error,4138,"aw the frame on the canvas; c = ROOT.TCanvas(""rf201_composite"", ""rf201_composite"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf201_composite.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x5b64db0 RooAddPdf::model = 0.886326/1 [Auto,Clean] ; 0x7475710/V- RooChebychev::bkg = 0.734412 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x703aa10/V- RooRealVar::a0 = 0.506755 +/- 0.0795919; 0x6eef060/V- RooRealVar::a1 = 0.265588 +/- 0.133931; 0x748b980/V- RooRealVar::bkgfrac = 0.428008 +/- 0.0356013; 0x7492e20/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7078360/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x6dab710/V- RooRealVar::mean = 5; 0x69f2060/V- RooRealVar::sigma1 = 0.5; 0x72776d0/V- RooRealVar::sig1frac = 0.641992 +/- 0.0969095; 0x",MatchSource.WIKI,doc/master/rf201__composite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html
https://root.cern/doc/master/rf201__composite_8py.html:4232,Performance,optimiz,optimization,4232,"aw the frame on the canvas; c = ROOT.TCanvas(""rf201_composite"", ""rf201_composite"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf201_composite.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x5b64db0 RooAddPdf::model = 0.886326/1 [Auto,Clean] ; 0x7475710/V- RooChebychev::bkg = 0.734412 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x703aa10/V- RooRealVar::a0 = 0.506755 +/- 0.0795919; 0x6eef060/V- RooRealVar::a1 = 0.265588 +/- 0.133931; 0x748b980/V- RooRealVar::bkgfrac = 0.428008 +/- 0.0356013; 0x7492e20/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7078360/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x6dab710/V- RooRealVar::mean = 5; 0x69f2060/V- RooRealVar::sigma1 = 0.5; 0x72776d0/V- RooRealVar::sig1frac = 0.641992 +/- 0.0969095; 0x",MatchSource.WIKI,doc/master/rf201__composite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html
https://root.cern/doc/master/rf201__composite_8py.html:4329,Performance,optimiz,optimization,4329,"aw the frame on the canvas; c = ROOT.TCanvas(""rf201_composite"", ""rf201_composite"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf201_composite.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x5b64db0 RooAddPdf::model = 0.886326/1 [Auto,Clean] ; 0x7475710/V- RooChebychev::bkg = 0.734412 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x703aa10/V- RooRealVar::a0 = 0.506755 +/- 0.0795919; 0x6eef060/V- RooRealVar::a1 = 0.265588 +/- 0.133931; 0x748b980/V- RooRealVar::bkgfrac = 0.428008 +/- 0.0356013; 0x7492e20/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7078360/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x6e5aa50/V- RooRealVar::x = 5; 0x6dab710/V- RooRealVar::mean = 5; 0x69f2060/V- RooRealVar::sigma1 = 0.5; 0x72776d0/V- RooRealVar::sig1frac = 0.641992 +/- 0.0969095; 0x",MatchSource.WIKI,doc/master/rf201__composite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html
https://root.cern/doc/master/rf201__composite_8py.html:3607,Safety,safe,safe,3607,"---------; ; # Construct sum of models on one go using recursive fraction interpretations; #; # model2 = bkg + (sig1 + sig2); #; model2 = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig1, sig2], [bkgfrac, sig1frac], True); ; # NB: Each coefficient is interpreted as the fraction of the; # left-hand component of the i-th recursive sum, i.e.; #; # sum4 = A + ( B + ( C + D) with fraction fA, and fC expands to; #; # sum4 = fA*A + (1-fA)*(fB*B + (1-fB)*(fC*C + (1-fC)*D)); ; # Plot recursive addition model; # ---------------------------------------------------------; model2.plotOn(xframe, LineColor=""r"", LineStyle=""--""); model2.plotOn(xframe, Components={bkg, sig2}, LineColor=""r"", LineStyle=""--""); model2.Print(""t""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf201_composite"", ""rf201_composite"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf201_composite.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(",MatchSource.WIKI,doc/master/rf201__composite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html
https://root.cern/doc/master/rf201__composite_8py.html:3774,Safety,safe,safe,3774,""", [bkg, sig1, sig2], [bkgfrac, sig1frac], True); ; # NB: Each coefficient is interpreted as the fraction of the; # left-hand component of the i-th recursive sum, i.e.; #; # sum4 = A + ( B + ( C + D) with fraction fA, and fC expands to; #; # sum4 = fA*A + (1-fA)*(fB*B + (1-fB)*(fC*C + (1-fC)*D)); ; # Plot recursive addition model; # ---------------------------------------------------------; model2.plotOn(xframe, LineColor=""r"", LineStyle=""--""); model2.plotOn(xframe, Components={bkg, sig2}, LineColor=""r"", LineStyle=""--""); model2.Print(""t""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf201_composite"", ""rf201_composite"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf201_composite.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x5b64db0 RooAddPdf::model",MatchSource.WIKI,doc/master/rf201__composite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf201__composite_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6896,Availability,error,error,6896,"s of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7ffc9b6dfb50 RooAddPdf::model = 0.898615/1 [Auto,Clean] ; 0x7ffc9b6df238/V- RooChebychev::bkg = 0.79892 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6dd3a8/V- RooRealVar::a0 = 0.441701 +/- 0.0731848; 0x7ffc9b6dd790/V- RooRealVar::a1 = 0.20108 +/- 0.1176; 0x7ffc9b6dee50/V- RooRealVar::nbkg = 504.206 +/- 39.3065; 0x7ffc9b6ddf60/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7ffc9b6dc128/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6de680/V- RooRealVar::mean = 5; 0x7ffc9b6dcbd8/V- RooRealVar::sigma1 = 0.5; 0x7ffc9b6ddb78/V- Ro",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:4971,Integrability,wrap,wrapper,4971,"leOffset(1.4);; xframe->Draw();; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExtendPdf.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h:276; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly swi",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:246,Modifiability,extend,extended,246,". ROOT: tutorials/roofit/rf202_extendedmlfit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf202_extendedmlfit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Setting up an extended maximum likelihood fit. . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf202_extendedmlfit(); {; ; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; //----------------; // M E T H O D 1; //================; ; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; ; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg; RooRealVar nsig(""nsig"", ""number of signal events"", 500, 0., 10000);; RooRealVar nbkg(""nbkg"", ""number of background events"", 500, 0, 10000);; RooAddPdf model(""model"", ""(g1+g2)+a"", RooArgList(bkg, sig), RooArgList(nbkg, nsig));; ; // ",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:1737,Modifiability,extend,extended,1737,"-----------------------; ; // Declare observable x; RooRealVar x(""x"", ""x"", 0, 10);; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"", ""mean of gaussians"", 5);; RooRealVar sigma1(""sigma1"", ""width of gaussians"", 0.5);; RooRealVar sigma2(""sigma2"", ""width of gaussians"", 1);; ; RooGaussian sig1(""sig1"", ""Signal component 1"", x, mean, sigma1);; RooGaussian sig2(""sig2"", ""Signal component 2"", x, mean, sigma2);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg(""bkg"", ""Background"", x, RooArgSet(a0, a1));; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; //----------------; // M E T H O D 1; //================; ; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; ; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg; RooRealVar nsig(""nsig"", ""number of signal events"", 500, 0., 10000);; RooRealVar nbkg(""nbkg"", ""number of background events"", 500, 0, 10000);; RooAddPdf model(""model"", ""(g1+g2)+a"", RooArgList(bkg, sig), RooArgList(nbkg, nsig));; ; // S a m p l e , f i t a n d p l o t e x t e n d e d m o d e l; // ---------------------------------------------------------------------; ; // Generate a data sample of expected number events in x from model; // = model.expectedEvents() = nsig+nbkg; std::unique_ptr<RooDataSet> data{model.generate(x)};; ; // Fit model to data, extended ML term automatically included; model.fitTo(*data, PrintLevel(-1));; ; // Plot data and PDF overlaid, use expected number of events for pdf projection normalization; // rather than observed number of events (==data->numEntries()); RooPlot *xframe = x.frame(Title(""extended ML fit examp",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:2326,Modifiability,extend,extended,2326,"f; RooRealVar sig1frac(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0., 1.);; RooAddPdf sig(""sig"", ""Signal"", RooArgList(sig1, sig2), sig1frac);; ; //----------------; // M E T H O D 1; //================; ; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; ; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg; RooRealVar nsig(""nsig"", ""number of signal events"", 500, 0., 10000);; RooRealVar nbkg(""nbkg"", ""number of background events"", 500, 0, 10000);; RooAddPdf model(""model"", ""(g1+g2)+a"", RooArgList(bkg, sig), RooArgList(nbkg, nsig));; ; // S a m p l e , f i t a n d p l o t e x t e n d e d m o d e l; // ---------------------------------------------------------------------; ; // Generate a data sample of expected number events in x from model; // = model.expectedEvents() = nsig+nbkg; std::unique_ptr<RooDataSet> data{model.generate(x)};; ; // Fit model to data, extended ML term automatically included; model.fitTo(*data, PrintLevel(-1));; ; // Plot data and PDF overlaid, use expected number of events for pdf projection normalization; // rather than observed number of events (==data->numEntries()); RooPlot *xframe = x.frame(Title(""extended ML fit example""));; data->plotOn(xframe);; model.plotOn(xframe, Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background component of model with a dashed line; model.plotOn(xframe, Components(bkg), LineStyle(kDashed), Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components(RooArgSet(bkg, sig2)), LineStyle(kDotted),; Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Print structure of composite pdf; model.Print(""t"");; ; //----------------; // M E T H O D 2; //================; ; // C o n s t r u c t e x t e n d e d c o m p o n e n t s f i r s t; // -------------------------------------",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:2599,Modifiability,extend,extended,2599,"-------------------------------------------------------------; ; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg; RooRealVar nsig(""nsig"", ""number of signal events"", 500, 0., 10000);; RooRealVar nbkg(""nbkg"", ""number of background events"", 500, 0, 10000);; RooAddPdf model(""model"", ""(g1+g2)+a"", RooArgList(bkg, sig), RooArgList(nbkg, nsig));; ; // S a m p l e , f i t a n d p l o t e x t e n d e d m o d e l; // ---------------------------------------------------------------------; ; // Generate a data sample of expected number events in x from model; // = model.expectedEvents() = nsig+nbkg; std::unique_ptr<RooDataSet> data{model.generate(x)};; ; // Fit model to data, extended ML term automatically included; model.fitTo(*data, PrintLevel(-1));; ; // Plot data and PDF overlaid, use expected number of events for pdf projection normalization; // rather than observed number of events (==data->numEntries()); RooPlot *xframe = x.frame(Title(""extended ML fit example""));; data->plotOn(xframe);; model.plotOn(xframe, Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background component of model with a dashed line; model.plotOn(xframe, Components(bkg), LineStyle(kDashed), Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components(RooArgSet(bkg, sig2)), LineStyle(kDotted),; Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Print structure of composite pdf; model.Print(""t"");; ; //----------------; // M E T H O D 2; //================; ; // C o n s t r u c t e x t e n d e d c o m p o n e n t s f i r s t; // ---------------------------------------------------------------------; ; // Associated nsig/nbkg as expected number of events with sig/bkg; RooExtendPdf esig(""esig"", ""extended signal pdf"", sig, nsig);; RooExtendPdf ebkg(""ebkg"", ""extended background pdf"", bkg, nbkg);; ; // S u m e x t e n d e d c o m p o n e n t s w i t h o u t ",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:3460,Modifiability,extend,extended,3460,"ntries()); RooPlot *xframe = x.frame(Title(""extended ML fit example""));; data->plotOn(xframe);; model.plotOn(xframe, Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background component of model with a dashed line; model.plotOn(xframe, Components(bkg), LineStyle(kDashed), Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components(RooArgSet(bkg, sig2)), LineStyle(kDotted),; Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Print structure of composite pdf; model.Print(""t"");; ; //----------------; // M E T H O D 2; //================; ; // C o n s t r u c t e x t e n d e d c o m p o n e n t s f i r s t; // ---------------------------------------------------------------------; ; // Associated nsig/nbkg as expected number of events with sig/bkg; RooExtendPdf esig(""esig"", ""extended signal pdf"", sig, nsig);; RooExtendPdf ebkg(""ebkg"", ""extended background pdf"", bkg, nbkg);; ; // S u m e x t e n d e d c o m p o n e n t s w i t h o u t c o e f s; // -------------------------------------------------------------------------; ; // Construct sum of two extended pdf (no coefficients required); RooAddPdf model2(""model2"", ""(g1+g2)+a"", RooArgList(ebkg, esig));; ; // Draw the frame on the canvas; new TCanvas(""rf202_composite"", ""rf202_composite"", 600, 600);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExtendPdf.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:3522,Modifiability,extend,extended,3522,"ntries()); RooPlot *xframe = x.frame(Title(""extended ML fit example""));; data->plotOn(xframe);; model.plotOn(xframe, Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background component of model with a dashed line; model.plotOn(xframe, Components(bkg), LineStyle(kDashed), Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components(RooArgSet(bkg, sig2)), LineStyle(kDotted),; Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Print structure of composite pdf; model.Print(""t"");; ; //----------------; // M E T H O D 2; //================; ; // C o n s t r u c t e x t e n d e d c o m p o n e n t s f i r s t; // ---------------------------------------------------------------------; ; // Associated nsig/nbkg as expected number of events with sig/bkg; RooExtendPdf esig(""esig"", ""extended signal pdf"", sig, nsig);; RooExtendPdf ebkg(""ebkg"", ""extended background pdf"", bkg, nbkg);; ; // S u m e x t e n d e d c o m p o n e n t s w i t h o u t c o e f s; // -------------------------------------------------------------------------; ; // Construct sum of two extended pdf (no coefficients required); RooAddPdf model2(""model2"", ""(g1+g2)+a"", RooArgList(ebkg, esig));; ; // Draw the frame on the canvas; new TCanvas(""rf202_composite"", ""rf202_composite"", 600, 600);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExtendPdf.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:3737,Modifiability,extend,extended,3737,"ntries()); RooPlot *xframe = x.frame(Title(""extended ML fit example""));; data->plotOn(xframe);; model.plotOn(xframe, Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background component of model with a dashed line; model.plotOn(xframe, Components(bkg), LineStyle(kDashed), Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Overlay the background+sig2 components of model with a dotted line; model.plotOn(xframe, Components(RooArgSet(bkg, sig2)), LineStyle(kDotted),; Normalization(1.0, RooAbsReal::RelativeExpected));; ; // Print structure of composite pdf; model.Print(""t"");; ; //----------------; // M E T H O D 2; //================; ; // C o n s t r u c t e x t e n d e d c o m p o n e n t s f i r s t; // ---------------------------------------------------------------------; ; // Associated nsig/nbkg as expected number of events with sig/bkg; RooExtendPdf esig(""esig"", ""extended signal pdf"", sig, nsig);; RooExtendPdf ebkg(""ebkg"", ""extended background pdf"", bkg, nbkg);; ; // S u m e x t e n d e d c o m p o n e n t s w i t h o u t c o e f s; // -------------------------------------------------------------------------; ; // Construct sum of two extended pdf (no coefficients required); RooAddPdf model2(""model2"", ""(g1+g2)+a"", RooArgList(ebkg, esig));; ; // Draw the frame on the canvas; new TCanvas(""rf202_composite"", ""rf202_composite"", 600, 600);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExtendPdf.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:5026,Modifiability,extend,extended,5026,"leOffset(1.4);; xframe->Draw();; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExtendPdf.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h:276; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly swi",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:5381,Modifiability,variab,variable,5381,"eColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition RooAbsReal.h:276; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNI",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6554,Modifiability,extend,extended,6554,"verrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7ffc9b6dfb50 RooAddPdf::model = 0.898615/1 [Auto,Clean] ; 0x7ffc9b6df238/V- RooCheby",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6990,Performance,optimiz,optimization,6990,"s of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7ffc9b6dfb50 RooAddPdf::model = 0.898615/1 [Auto,Clean] ; 0x7ffc9b6df238/V- RooChebychev::bkg = 0.79892 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6dd3a8/V- RooRealVar::a0 = 0.441701 +/- 0.0731848; 0x7ffc9b6dd790/V- RooRealVar::a1 = 0.20108 +/- 0.1176; 0x7ffc9b6dee50/V- RooRealVar::nbkg = 504.206 +/- 39.3065; 0x7ffc9b6ddf60/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7ffc9b6dc128/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6de680/V- RooRealVar::mean = 5; 0x7ffc9b6dcbd8/V- RooRealVar::sigma1 = 0.5; 0x7ffc9b6ddb78/V- Ro",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:7087,Performance,optimiz,optimization,7087,"s of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x7ffc9b6dfb50 RooAddPdf::model = 0.898615/1 [Auto,Clean] ; 0x7ffc9b6df238/V- RooChebychev::bkg = 0.79892 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6dd3a8/V- RooRealVar::a0 = 0.441701 +/- 0.0731848; 0x7ffc9b6dd790/V- RooRealVar::a1 = 0.20108 +/- 0.1176; 0x7ffc9b6dee50/V- RooRealVar::nbkg = 504.206 +/- 39.3065; 0x7ffc9b6ddf60/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7ffc9b6dc128/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7ffc9b6df768/V- RooRealVar::x = 5; 0x7ffc9b6de680/V- RooRealVar::mean = 5; 0x7ffc9b6dcbd8/V- RooRealVar::sigma1 = 0.5; 0x7ffc9b6ddb78/V- Ro",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6256,Safety,safe,safe,6256,"hin that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plottin",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8C.html:6423,Safety,safe,safe,6423,"iven variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf202_extendedmlfitDefinition rf202_extendedmlfit.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] IN",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8C.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:4493,Availability,error,error,4493,"rgin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x79f4920 RooAddPdf::model = 0.885989/1 [Auto,Clean] ; 0x5091a50/V- RooChebychev::bkg = 0.733482 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x779ae60/V- RooRealVar::a0 = 0.507382 +/- 0.0795949; 0x76ed210/V- RooRealVar::a1 = 0.266518 +/- 0.133887; 0x797fc10/V- RooRealVar::nbkg = 427.704 +/- 38.0643; 0x77a8710/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7775040/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x70eb750/V- RooRealVar::mean = 5; 0x3efb120/V- RooRealVar::sigma1 = 0.5; 0x7a11850/V- RooRealVar::sig1frac = 0.640056 +/- 0.0966619; 0x772a3c",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:287,Modifiability,extend,extended,287,". ROOT: tutorials/roofit/rf202_extendedmlfit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf202_extendedmlfit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: setting up an extended maximum likelihood fit . ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model ",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:1325,Modifiability,extend,extended,1325,"---------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model to data, ML term automatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsRea",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:1474,Modifiability,extend,extended,1474,"---------------------; ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); ; # Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and; # their parameters; mean = ROOT.RooRealVar(""mean"", ""mean of gaussians"", 5); sigma1 = ROOT.RooRealVar(""sigma1"", ""width of gaussians"", 0.5); sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model to data, ML term automatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsRea",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:1760,Modifiability,extend,extended,1760," mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model to data, ML term automatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(sc",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:2255,Modifiability,extend,extended,2255,"Signal"", [sig1, sig2], [sig1frac]); ; # Method 1 - Construct extended composite model; # -------------------------------------------------------------------; ; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events"", 500, 0, 10000); model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample, fit and plot extended model; # ---------------------------------------------------------------------; ; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg; data = model.generate({x}); ; # Fit model to data, ML term automatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:2950,Modifiability,extend,extended,2950,"tomatically included; model.fitTo(data, PrintLevel=-1); ; # Plot data and PDF overlaid, expected number of events for pdf projection normalization; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the s",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3152,Modifiability,extend,extended,3152,"on; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3220,Modifiability,extend,extended,3220,"alization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- us",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3266,Modifiability,extend,extended,3266,"alization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- us",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3403,Modifiability,extend,extended,3403,"alization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- us",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:4151,Modifiability,extend,extended,4151,"f(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x79f4920 RooAddPdf::model = 0.885989/1 [Auto,Clean] ; 0x5091a50/V- RooChebychev::bkg ",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:4587,Performance,optimiz,optimization,4587,"rgin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x79f4920 RooAddPdf::model = 0.885989/1 [Auto,Clean] ; 0x5091a50/V- RooChebychev::bkg = 0.733482 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x779ae60/V- RooRealVar::a0 = 0.507382 +/- 0.0795949; 0x76ed210/V- RooRealVar::a1 = 0.266518 +/- 0.133887; 0x797fc10/V- RooRealVar::nbkg = 427.704 +/- 38.0643; 0x77a8710/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7775040/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x70eb750/V- RooRealVar::mean = 5; 0x3efb120/V- RooRealVar::sigma1 = 0.5; 0x7a11850/V- RooRealVar::sig1frac = 0.640056 +/- 0.0966619; 0x772a3c",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:4684,Performance,optimiz,optimization,4684,"rgin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); 0x79f4920 RooAddPdf::model = 0.885989/1 [Auto,Clean] ; 0x5091a50/V- RooChebychev::bkg = 0.733482 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x779ae60/V- RooRealVar::a0 = 0.507382 +/- 0.0795949; 0x76ed210/V- RooRealVar::a1 = 0.266518 +/- 0.133887; 0x797fc10/V- RooRealVar::nbkg = 427.704 +/- 38.0643; 0x77a8710/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7775040/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x4d77490/V- RooRealVar::x = 5; 0x70eb750/V- RooRealVar::mean = 5; 0x3efb120/V- RooRealVar::sigma1 = 0.5; 0x7a11850/V- RooRealVar::sig1frac = 0.640056 +/- 0.0966619; 0x772a3c",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3853,Safety,safe,safe,3853,"aleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf202__extendedmlfit_8py.html:4020,Safety,safe,safe,4020,"st; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] IN",MatchSource.WIKI,doc/master/rf202__extendedmlfit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html
https://root.cern/doc/master/rf203__ranges_8C.html:2113,Availability,error,error,2113," ; // F i t f u l l r a n g e; // ---------------------------; ; // Fit pdf to all data; std::unique_ptr<RooFitResult> r_full{model.fitTo(*modelData, Save(true), PrintLevel(-1))};; ; // F i t p a r t i a l r a n g e; // ----------------------------------; ; // Define ""signal"" range in x as [-3,3]; x.setRange(""signal"", -3, 3);; ; // Fit pdf only to data in ""signal"" range; std::unique_ptr<RooFitResult> r_sig{model.fitTo(*modelData, Save(true), Range(""signal""), PrintLevel(-1))};; ; // P l o t / p r i n t r e s u l t s; // ---------------------------------------; ; // Make plot frame in x and add data and fitted model; RooPlot *frame = x.frame(Title(""Fitting a sub range""));; modelData->plotOn(frame);; model.plotOn(frame, Range(""""), LineStyle(kDashed), LineColor(kRed)); // Add shape in full ranged dashed; model.plotOn(frame); // By default only fitted range is shown; ; // Print fit results; cout << ""result of fit on all data "" << endl;; r_full->Print();; cout << ""result of fit in in signal region (note increased error on signal fraction)"" << endl;; r_sig->Print();; ; // Draw frame on canvas; new TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; ; return;; }; f#define f(i)Definition RSha256.hxx:104; RooAddPdf.h; RooDataSet.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; mxOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t ",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:5465,Availability,error,error,5465,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:6116,Availability,error,error,6116,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:8178,Availability,error,error,8178,".; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range ''; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; result of fit on all data ; ; RooFitResult: minimized FCN value: 25939.4, estimated distance to minimum: 3.77183e-06; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 5.0441e-01 +/- 6.32e-03; mx -2.1605e-02 +/- 1.77e-02; ; result of fit in in signal region (note increased error on signal fraction); ; RooFitResult: minimized FCN value: 10339.5, estimated distance to minimum: 0.000279216; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 4.8979e-01 +/- 1.62e-02; mx -2.1518e-02 +/- 1.79e-02; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf203_ranges.C. tutorialsroofitrf203_ranges.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:3733,Modifiability,variab,variable,3733,"olor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char mxDefinition TGWin32VirtualXProxy.cxx:228; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooPlot.h:138; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:5559,Performance,optimiz,optimization,5559,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:5656,Performance,optimiz,optimization,5656,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:6210,Performance,optimiz,optimization,6210,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8C.html:6307,Performance,optimiz,optimization,6307,"ooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf203_rangesDefinition rf203_ranges.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeNam",MatchSource.WIKI,doc/master/rf203__ranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html
https://root.cern/doc/master/rf203__ranges_8py.html:1740,Availability,error,error,1740,"= ROOT.RooAddPdf(""model"", ""model"", [gx, px], [f]); ; # Generated 10000 events in (x,y) from pdf model; modelData = model.generate({x}, 10000); ; # Fit full range; # ---------------------------; ; # Fit pdf to all data; r_full = model.fitTo(modelData, Save=True, PrintLevel=-1); ; # Fit partial range; # ----------------------------------; ; # Define ""signal"" range in x as [-3,3]; x.setRange(""signal"", -3, 3); ; # Fit pdf only to data in ""signal"" range; r_sig = model.fitTo(modelData, Save=True, Range=""signal"", PrintLevel=-1); ; # Plot/print results; # ---------------------------------------; ; # Make plot frame in x and add data and fitted model; frame = x.frame(Title=""Fitting a sub range""); modelData.plotOn(frame); model.plotOn(frame, Range=""Full"", LineColor=""r"", LineStyle=""--"") # Add shape in full ranged dashed; model.plotOn(frame) # By default only fitted range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fittin",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:2297,Availability,error,error,2297," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:2948,Availability,error,error,2948," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:5426,Availability,error,error,5426,"ned for variable 'x'. Ignoring ...; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'Full'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; ; RooFitResult: minimized FCN value: 25939.4, estimated distance to minimum: 3.77183e-06; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 5.0441e-01 +/- 6.32e-03; mx -2.1605e-02 +/- 1.77e-02; ; ; RooFitResult: minimized FCN value: 10339.5, estimated distance to minimum: 0.000279216; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 4.8979e-01 +/- 1.62e-02; mx -2.1518e-02 +/- 1.79e-02; ; result of fit on all data ; result of fit in in signal region (note increased error on signal fraction); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf203_ranges.py. tutorialsroofitrf203_ranges.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:3707,Modifiability,variab,variable,3707,"ed with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#0] ERROR:Plotting -- Range 'Full' not defined for variable 'x'. Ignoring ...; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'Full'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData'; ; R",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:2391,Performance,optimiz,optimization,2391," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:2488,Performance,optimiz,optimization,2488," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:3042,Performance,optimiz,optimization,3042," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf203__ranges_8py.html:3139,Performance,optimiz,optimization,3139," range is shown; ; # Print fit results; print(""result of fit on all data ""); r_full.Print(); print(""result of fit in in signal region (note increased error on signal fraction)""); r_sig.Print(); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf203_ranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signal' created with bounds [-3,3]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-3,3]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The defa",MatchSource.WIKI,doc/master/rf203__ranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf203__ranges_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:7415,Availability,error,error,7415,"efinition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:8815,Availability,error,error,8815,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:17513,Availability,error,error,17513,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:306,Modifiability,extend,extended,306,". ROOT: tutorials/roofit/rf204a_extendedLikelihood.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204a_extendedLikelihood.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Extended maximum likelihood fit in multiple ranges. ; When an extended pdf and multiple ranges are used, the RooExtendPdf cannot correctly interpret the coefficients used for extension. This can be solved by using a RooAddPdf for extending the model.; ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit ;; ; ; void rf204a_extendedLikelihood(); {; ; ; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"",""x"",0,11) ;; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"",""mean of gaussians"",5) ;; RooRealVar sigma1(""sigma1"",""width of gaussians"",0.5) ;; RooRealVar sigma2(""sigma2"",""width of gaussians"",1) ;; ; RooGaussian sig1(""sig1"",""Signal component 1"",x,mean,sigma1) ;; RooGaussian sig2(""sig2"",""Signal component 2"",x,mean,sigma2) ;; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"",""a0"",0.5,0.,1.) ;; RooRealVar a1(""a1"",""a1"",0.2,0.,1.) ;; RooChebychev bkg(""bkg"",""Background"",x,RooArgSet(a0,a1)) ;; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"",""fraction of component 1 in signal"",0.8,0.,1.) ;; RooAddPdf sig(""sig"",""Signal"",RooArgList(sig1,sig2),sig1frac) ;; ; ; // E x t e n d t h e p d f s; // -----------------------------; ; ; // Define signal range in which events counts are to be defined; x.setRange(""signalRange"",4,6) ;; ; // Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; RooRealVar nsig(""nsi",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:474,Modifiability,extend,extending,474,". ROOT: tutorials/roofit/rf204a_extendedLikelihood.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204a_extendedLikelihood.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Extended maximum likelihood fit in multiple ranges. ; When an extended pdf and multiple ranges are used, the RooExtendPdf cannot correctly interpret the coefficients used for extension. This can be solved by using a RooAddPdf for extending the model.; ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooChebychev.h""; #include ""RooAddPdf.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit ;; ; ; void rf204a_extendedLikelihood(); {; ; ; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Declare observable x; RooRealVar x(""x"",""x"",0,11) ;; ; // Create two Gaussian PDFs g1(x,mean1,sigma) anf g2(x,mean2,sigma) and their parameters; RooRealVar mean(""mean"",""mean of gaussians"",5) ;; RooRealVar sigma1(""sigma1"",""width of gaussians"",0.5) ;; RooRealVar sigma2(""sigma2"",""width of gaussians"",1) ;; ; RooGaussian sig1(""sig1"",""Signal component 1"",x,mean,sigma1) ;; RooGaussian sig2(""sig2"",""Signal component 2"",x,mean,sigma2) ;; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"",""a0"",0.5,0.,1.) ;; RooRealVar a1(""a1"",""a1"",0.2,0.,1.) ;; RooChebychev bkg(""bkg"",""Background"",x,RooArgSet(a0,a1)) ;; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"",""fraction of component 1 in signal"",0.8,0.,1.) ;; RooAddPdf sig(""sig"",""Signal"",RooArgList(sig1,sig2),sig1frac) ;; ; ; // E x t e n d t h e p d f s; // -----------------------------; ; ; // Define signal range in which events counts are to be defined; x.setRange(""signalRange"",4,6) ;; ; // Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; RooRealVar nsig(""nsi",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:2165,Modifiability,extend,extend,2165,"""sigma1"",""width of gaussians"",0.5) ;; RooRealVar sigma2(""sigma2"",""width of gaussians"",1) ;; ; RooGaussian sig1(""sig1"",""Signal component 1"",x,mean,sigma1) ;; RooGaussian sig2(""sig2"",""Signal component 2"",x,mean,sigma2) ;; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"",""a0"",0.5,0.,1.) ;; RooRealVar a1(""a1"",""a1"",0.2,0.,1.) ;; RooChebychev bkg(""bkg"",""Background"",x,RooArgSet(a0,a1)) ;; ; // Sum the signal components into a composite signal pdf; RooRealVar sig1frac(""sig1frac"",""fraction of component 1 in signal"",0.8,0.,1.) ;; RooAddPdf sig(""sig"",""Signal"",RooArgList(sig1,sig2),sig1frac) ;; ; ; // E x t e n d t h e p d f s; // -----------------------------; ; ; // Define signal range in which events counts are to be defined; x.setRange(""signalRange"",4,6) ;; ; // Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; RooRealVar nsig(""nsig"",""number of signal events in signalRange"",500,0.,10000) ;; RooRealVar nbkg(""nbkg"",""number of background events in signalRange"",500,0,10000) ;; ; // Use AddPdf to extend the model. Giving as many coefficients as pdfs switches; // on extension.; RooAddPdf model(""model"",""(g1+g2)+a"", RooArgList(bkg,sig), RooArgList(nbkg,nsig)) ;; ; ; // S a m p l e d a t a , f i t m o d e l; // -------------------------------------------; ; // Generate 1000 events from model so that nsig,nbkg come out to numbers <<500 in fit; std::unique_ptr<RooDataSet> data{model.generate(x,1000)};; ; ; ; auto canv = new TCanvas(""Canvas"", ""Canvas"", 1500, 600);; canv->Divide(3,1);; ; // Fit full range; // -------------------------------------------; ; canv->cd(1);; ; // Perform unbinned ML fit to data, full range; ; // IMPORTANT:; // The model needs to be copied when fitting with different ranges because; // the interpretation of the coefficients is tied to the fit range; // that's used in the first fit; RooAddPdf model1(model);; std::unique_ptr<RooFitResult> r{model1.fitTo(*data,Save(), PrintLevel(-1))};; r->Print() ;; ; RooPlot * fr",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:5639,Modifiability,variab,variable,5639,"illStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:In",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:7073,Modifiability,extend,extended,7073,"el(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval --",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:8312,Modifiability,extend,extended,8312,"1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.241",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:17133,Modifiability,extend,extended,17133,"l_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:7509,Performance,optimiz,optimization,7509,"efinition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:7606,Performance,optimiz,optimization,7606,"efinition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:8909,Performance,optimiz,optimization,8909,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:9006,Performance,optimiz,optimization,9006,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:17607,Performance,optimiz,optimization,17607,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:17704,Performance,optimiz,optimization,17704,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:6676,Safety,safe,safe,6676,"ate a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimi",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:6843,Safety,safe,safe,6843,"tion RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204a_extendedLikelihoodDefinition rf204a_extendedLikelihood.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESS",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:4594,Availability,error,error,4594,"On(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:5994,Availability,error,error,5994,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:14692,Availability,error,error,14692,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:1723,Modifiability,extend,extend,1723,"igma2"", ""width of gaussians"", 1); ; sig1 = ROOT.RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2); ; # Build Chebychev polynomial pdf; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.2, 0.0, 1.0); bkg = ROOT.RooChebychev(""bkg"", ""Background"", x, [a0, a1]); ; # Sum the signal components into a composite signal pdf; sig1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], sig1frac); ; ; # Extend the pdfs; # -----------------------------; ; # Define signal range in which events counts are to be defined; x.setRange(""signalRange"", 4, 6); ; # Associated nsig/nbkg as expected number of events with sig/bkg _in_the_range_ ""signalRange""; nsig = ROOT.RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000); nbkg = ROOT.RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000); ; # Use AddPdf to extend the model. Giving as many coefficients as pdfs switches on extension.; model = ROOT.RooAddPdf(""model"", ""(g1+g2)+a"", [bkg, sig], [nbkg, nsig]); ; # Sample data, fit model; # -------------------------------------------; ; # Generate 1000 events from model so that nsig,nbkg come out to numbers <<500 in fit; data = model.generate(x, 1000); ; canv = ROOT.TCanvas(""Canvas"", ""Canvas"", 1500, 600); canv.Divide(3, 1); ; # Fit full range; # -------------------------------------------; ; # Perform unbinned ML fit to data, full range; ; # IMPORTANT:; # The model needs to be copied when fitting with different ranges because; # the interpretation of the coefficients is tied to the fit range; # that's used in the first fit; canv.cd(1); ; model1 = ROOT.RooAddPdf(model); r = model1.fitTo(data, Save=True, PrintLevel=-1); r.Print(); ; frame = x.frame(Title=""Full range fitted""); data.plotOn(frame); model1.plotOn(frame, VisualizeError=r); model1.plotOn(frame); ",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:4252,Modifiability,extend,extended,4252,"te how restricting the region to only the left tail increases; # the fit uncertainty; ; canv.cd(3); x.setRange(""leftToMiddle"", 0.0, 5.0); ; model3 = ROOT.RooAddPdf(model); r3 = model3.fitTo(data, Range=""leftToMiddle"", Save=True, PrintLevel=-1); r3.Print(); ; frame3 = x.frame(Title=""Fit from left to middle""); data.plotOn(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval --",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:5491,Modifiability,extend,extended,5491,"1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.241",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:14312,Modifiability,extend,extended,14312,"l_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:4688,Performance,optimiz,optimization,4688,"On(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:4785,Performance,optimiz,optimization,4785,"On(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:6088,Performance,optimiz,optimization,6088,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:6185,Performance,optimiz,optimization,6185,"0406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.2415e-01 +/- 1.09e-01; a1 3.0373e-02 +/- 2.12e-01; nbkg 5.0182e+02 +/- 3.94e+01; nsig 4.1091e+02 +/- 2.63e+02; sig1frac 8.5838e-01 +/- 2.74e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:14786,Performance,optimiz,optimization,14786,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:14883,Performance,optimiz,optimization,14883,"plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_left,fit_nll_model_modelData_right'; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'leftToMiddle' created with bounds [0,5]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [0,5]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1620.17, estimated distance to minimum: 0.000658484; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.0685e-01 +/- 7.00e-01; a1 2.2397e-01 +/- 6.03e-01; nbkg 7.1175e+02 +/- 1.22e+03; nsig 4.4359e+02 +/- 1.28e+02; sig1frac 9.7243e-01 +/- 8.92e-01; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify th",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:3855,Safety,safe,safe,3855," x.setRange(""left"", 0.0, 4.0); x.setRange(""right"", 6.0, 10.0); ; model2 = ROOT.RooAddPdf(model); r2 = model2.fitTo(data, Range=""left,right"", Save=True, PrintLevel=-1); r2.Print(); ; frame2 = x.frame(Title=""Fit in left/right sideband""); data.plotOn(frame2); model2.plotOn(frame2, VisualizeError=r2); model2.plotOn(frame2); model2.paramOn(frame2); frame2.Draw(); ; ; # Fit in one region; # -------------------------------------------; # Note how restricting the region to only the left tail increases; # the fit uncertainty; ; canv.cd(3); x.setRange(""leftToMiddle"", 0.0, 5.0); ; model3 = ROOT.RooAddPdf(model); r3 = model3.fitTo(data, Range=""leftToMiddle"", Save=True, PrintLevel=-1); r3.Print(); ; frame3 = x.frame(Title=""Fit from left to middle""); data.plotOn(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFi",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html:4022,Safety,safe,safe,4022,".Print(); ; frame2 = x.frame(Title=""Fit in left/right sideband""); data.plotOn(frame2); model2.plotOn(frame2, VisualizeError=r2); model2.plotOn(frame2); model2.paramOn(frame2); frame2.Draw(); ; ; # Fit in one region; # -------------------------------------------; # Note how restricting the region to only the left tail increases; # the fit uncertainty; ; canv.cd(3); x.setRange(""leftToMiddle"", 0.0, 5.0); ; model3 = ROOT.RooAddPdf(model); r3 = model3.fitTo(data, Range=""leftToMiddle"", Save=True, PrintLevel=-1); r3.Print(); ; frame3 = x.frame(Title=""Fit from left to middle""); data.plotOn(frame3); model3.plotOn(frame3, VisualizeError=r3); model3.plotOn(frame3); model3.paramOn(frame3); frame3.Draw(); ; canv.Draw(); ; canv.SaveAs(""rf204a_extendedLikelihood.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'signalRange' created with bounds [4,6]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESS",MatchSource.WIKI,doc/master/rf204a__extendedLikelihood_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:10864,Availability,error,error,10864,"NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204b_extendedLikelihood_rangedFitDefinition rf204b_extendedLikelihood_rangedFit.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:11655,Availability,error,error,11655,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:15993,Availability,error,error,15993,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:21786,Availability,error,error,21786,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:8568,Integrability,wrap,wrapper,8568,"ooExponential.h; RooExtendPdf.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TCanvas.h; N#define N; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::LayoutRooCmdArg Layout(double xmin, double xmax=0.99, double ymin=0.95)Definition RooGlobalFunc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdA",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:348,Modifiability,extend,extended,348,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:423,Modifiability,extend,extended,423,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:744,Modifiability,extend,extended,744,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:781,Modifiability,extend,extended,781,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:998,Modifiability,extend,extended,998,"master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their inte",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1247,Modifiability,extend,extended,1247,"Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1340,Modifiability,extend,extended,1340,"plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #i",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1624,Modifiability,extend,extended,1624," take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooDataSet.h""; #include ""RooPlot.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; ; #include ""TCanvas.",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1657,Modifiability,extend,extended,1657,"l as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooDataSet.h""; #include ""RooPlot.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; ; #include ""TCanvas.h""; ; void rf204b_extendedLikelihood_rangedFit(); {; using namespace RooFit;; ; // PART 1: Background-only fits; // ----------------------------; ; // Build plain exponential model; RooRealVar x(""x"", ""x"", 10, 100);; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);; RooExponential model(""mo",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:2252,Modifiability,extend,extended,2252,"espect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooDataSet.h""; #include ""RooPlot.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; ; #include ""TCanvas.h""; ; void rf204b_extendedLikelihood_rangedFit(); {; using namespace RooFit;; ; // PART 1: Background-only fits; // ----------------------------; ; // Build plain exponential model; RooRealVar x(""x"", ""x"", 10, 100);; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);; RooExponential model(""model"", ""Exponential model"", x, alpha);; ; // Define side band regions and full range; x.setRange(""LEFT"",10,20);; x.setRange(""RIGHT"",60,100);; ; x.setRange(""FULL"",10,100);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};; ; // Construct an extended pdf, which measures the event count N **on the full range**.; // If the actual domain of x that is fitted is identical to FULL, this has no affect.; //; //",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:3104,Modifiability,extend,extended,3104,"ected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooDataSet.h""; #include ""RooPlot.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; ; #include ""TCanvas.h""; ; void rf204b_extendedLikelihood_rangedFit(); {; using namespace RooFit;; ; // PART 1: Background-only fits; // ----------------------------; ; // Build plain exponential model; RooRealVar x(""x"", ""x"", 10, 100);; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);; RooExponential model(""model"", ""Exponential model"", x, alpha);; ; // Define side band regions and full range; x.setRange(""LEFT"",10,20);; x.setRange(""RIGHT"",60,100);; ; x.setRange(""FULL"",10,100);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};; ; // Construct an extended pdf, which measures the event count N **on the full range**.; // If the actual domain of x that is fitted is identical to FULL, this has no affect.; //; // If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; // \f[; // \mathrm{frac} = \frac{; // \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; // \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; // \f]; // `N` will therefore return the count extrapolated to the full range instead of the fit range.; //; // **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; // [RooAddPdf::fixCoefRange()](https://root.cern/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; RooRealVar N(""N"", ""Extended term"", 0, 20000);; RooExtendPdf extmodel(""extmodel"", ""Extended model"", model, N, ""FULL"");; ; ; // It can be instructive to fit the above model to either the LEFT or RIGHT range. `N` should approximately converge to the expected nu",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:3678,Modifiability,extend,extending,3678,"ild plain exponential model; RooRealVar x(""x"", ""x"", 10, 100);; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);; RooExponential model(""model"", ""Exponential model"", x, alpha);; ; // Define side band regions and full range; x.setRange(""LEFT"",10,20);; x.setRange(""RIGHT"",60,100);; ; x.setRange(""FULL"",10,100);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10000)};; ; // Construct an extended pdf, which measures the event count N **on the full range**.; // If the actual domain of x that is fitted is identical to FULL, this has no affect.; //; // If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; // \f[; // \mathrm{frac} = \frac{; // \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; // \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; // \f]; // `N` will therefore return the count extrapolated to the full range instead of the fit range.; //; // **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; // [RooAddPdf::fixCoefRange()](https://root.cern/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; RooRealVar N(""N"", ""Extended term"", 0, 20000);; RooExtendPdf extmodel(""extmodel"", ""Extended model"", model, N, ""FULL"");; ; ; // It can be instructive to fit the above model to either the LEFT or RIGHT range. `N` should approximately converge to the expected number; // of events in the full range. One may try to leave out `""FULL""` in the constructor, or the interpretation of `N` changes.; extmodel.fitTo(*data, Range(""LEFT""), PrintLevel(-1));; N.Print();; ; ; // If we now do a simultaneous fit to the extended model, instead of the original model, the LEFT and RIGHT range will each correct their local; // `N` such that it refers to the `FULL` range.; //; // This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; // \f[; // L_\mathrm{ext} = L; // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathr",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:4363,Modifiability,extend,extended,4363,"rm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; // \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; // \f]; // `N` will therefore return the count extrapolated to the full range instead of the fit range.; //; // **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; // [RooAddPdf::fixCoefRange()](https://root.cern/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; RooRealVar N(""N"", ""Extended term"", 0, 20000);; RooExtendPdf extmodel(""extmodel"", ""Extended model"", model, N, ""FULL"");; ; ; // It can be instructive to fit the above model to either the LEFT or RIGHT range. `N` should approximately converge to the expected number; // of events in the full range. One may try to leave out `""FULL""` in the constructor, or the interpretation of `N` changes.; extmodel.fitTo(*data, Range(""LEFT""), PrintLevel(-1));; N.Print();; ; ; // If we now do a simultaneous fit to the extended model, instead of the original model, the LEFT and RIGHT range will each correct their local; // `N` such that it refers to the `FULL` range.; //; // This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; // \f[; // L_\mathrm{ext} = L; // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:4608,Modifiability,extend,extended,4608,"ern/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; RooRealVar N(""N"", ""Extended term"", 0, 20000);; RooExtendPdf extmodel(""extmodel"", ""Extended model"", model, N, ""FULL"");; ; ; // It can be instructive to fit the above model to either the LEFT or RIGHT range. `N` should approximately converge to the expected number; // of events in the full range. One may try to leave out `""FULL""` in the constructor, or the interpretation of `N` changes.; extmodel.fitTo(*data, Range(""LEFT""), PrintLevel(-1));; N.Print();; ; ; // If we now do a simultaneous fit to the extended model, instead of the original model, the LEFT and RIGHT range will each correct their local; // `N` such that it refers to the `FULL` range.; //; // This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; // \f[; // L_\mathrm{ext} = L; // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; extmodel.plotOn(frame2);; extmodel.plotOn(frame2, VisualizeError(*r2));; extmodel.paramOn(frame2, Label(""Extended fit""), Layout(0.4,0.95));; frame2->Draw();; ; // PART 2: Extending with RooAddPdf; // --------------------------------; //; // Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape p",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:5224,Modifiability,extend,extended,5224,"el.fitTo(*data, Range(""LEFT""), PrintLevel(-1));; N.Print();; ; ; // If we now do a simultaneous fit to the extended model, instead of the original model, the LEFT and RIGHT range will each correct their local; // `N` such that it refers to the `FULL` range.; //; // This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; // \f[; // L_\mathrm{ext} = L; // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); // \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; extmodel.plotOn(frame2);; extmodel.plotOn(frame2, VisualizeError(*r2));; extmodel.paramOn(frame2, Label(""Extended fit""), Layout(0.4,0.95));; frame2->Draw();; ; // PART 2: Extending with RooAddPdf; // --------------------------------; //; // Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; // we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; //; // We add a Gaussian to the previously defined exponential background.; // The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c->cd(3);; ; RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 200",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:5754,Modifiability,extend,extended,5754," \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; extmodel.plotOn(frame2);; extmodel.plotOn(frame2, VisualizeError(*r2));; extmodel.paramOn(frame2, Label(""Extended fit""), Layout(0.4,0.95));; frame2->Draw();; ; // PART 2: Extending with RooAddPdf; // --------------------------------; //; // Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; // we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; //; // We add a Gaussian to the previously defined exponential background.; // The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c->cd(3);; ; RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);; RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);; ; RooRealVar mean(""mean"", ""Mean of signal model"", 40.);; RooRealVar width(""width"", ""Width of signal model"", 5.);; RooGaussian sig(""sig"", ""Signal model"", x, mean, width);; ; RooAddPdf modelsum(""modelsum"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});; ; // This model will automatically insert the correction factor for the reinterpretation of Nsig and Nnbkg in the full ranges.; //; // When this happens, it report",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:5846,Modifiability,extend,extended,5846," \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); // \f]; ; ; TCanvas* c = new TCanvas(""c"", ""c"", 2100, 700);; c->Divide(3);; c->cd(1);; ; std::unique_ptr<RooFitResult> r{model.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r->Print();; ; RooPlot* frame = x.frame();; data->plotOn(frame);; model.plotOn(frame, VisualizeError(*r));; model.plotOn(frame);; model.paramOn(frame, Label(""Non-extended fit""));; frame->Draw();; ; c->cd(2);; ; std::unique_ptr<RooFitResult> r2{extmodel.fitTo(*data, Range(""LEFT,RIGHT""), PrintLevel(-1), Save())};; r2->Print();; RooPlot* frame2 = x.frame();; data->plotOn(frame2);; extmodel.plotOn(frame2);; extmodel.plotOn(frame2, VisualizeError(*r2));; extmodel.paramOn(frame2, Label(""Extended fit""), Layout(0.4,0.95));; frame2->Draw();; ; // PART 2: Extending with RooAddPdf; // --------------------------------; //; // Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; // we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; //; // We add a Gaussian to the previously defined exponential background.; // The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c->cd(3);; ; RooRealVar Nsig(""Nsig"", ""Number of signal events"", 1000, 0, 2000);; RooRealVar Nbkg(""Nbkg"", ""Number of background events"", 10000, 0, 20000);; ; RooRealVar mean(""mean"", ""Mean of signal model"", 40.);; RooRealVar width(""width"", ""Width of signal model"", 5.);; RooGaussian sig(""sig"", ""Signal model"", x, mean, width);; ; RooAddPdf modelsum(""modelsum"", ""NSig*signal + NBkg*background"", {sig, model}, {Nsig, Nbkg});; ; // This model will automatically insert the correction factor for the reinterpretation of Nsig and Nnbkg in the full ranges.; //; // When this happens, it report",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:8623,Modifiability,extend,extended,8623,"ooExponential.h; RooExtendPdf.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TCanvas.h; N#define N; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::LayoutRooCmdArg Layout(double xmin, double xmax=0.99, double ymin=0.95)Definition RooGlobalFunc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdA",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:8978,Modifiability,variab,variable,8978,"ion_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::LayoutRooCmdArg Layout(double xmin, double xmax=0.99, double ymin=0.95)Definition RooGlobalFunc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; ROOT::R::Labelconst Rcpp::internal::NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:10400,Modifiability,extend,extended,10400,"unc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdArg VisualizeError(const RooDataSet &paramData, double Z=1)Definition RooGlobalFunc.cxx:300; xDouble_t x[n]Definition legend1.C:17; ROOT::R::Labelconst Rcpp::internal::NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204b_extendedLikelihood_rangedFitDefinition rf204b_extendedLikelihood_rangedFit.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::f",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:15474,Modifiability,extend,extended,15474,".d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:21267,Modifiability,extend,extended,21267,"odel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1014,Performance,perform,performed,1014,"master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their inte",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:1684,Performance,perform,performed,1684,"l as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretations such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; #include ""RooRealVar.h""; #include ""RooExponential.h""; #include ""RooGaussian.h""; #include ""RooAddPdf.h""; #include ""RooDataSet.h""; #include ""RooPlot.h""; #include ""RooExtendPdf.h""; #include ""RooFitResult.h""; ; #include ""TCanvas.h""; ; void rf204b_extendedLikelihood_rangedFit(); {; using namespace RooFit;; ; // PART 1: Background-only fits; // ----------------------------; ; // Build plain exponential model; RooRealVar x(""x"", ""x"", 10, 100);; RooRealVar alpha(""alpha"", ""alpha"", -0.04, -0.1, -0.0);; RooExponential model(""mo",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:10958,Performance,optimiz,optimization,10958,"NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204b_extendedLikelihood_rangedFitDefinition rf204b_extendedLikelihood_rangedFit.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:11055,Performance,optimiz,optimization,11055,"NamedPlaceHolder & Label; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf204b_extendedLikelihood_rangedFitDefinition rf204b_extendedLikelihood_rangedFit.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:11749,Performance,optimiz,optimization,11749,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:11846,Performance,optimiz,optimization,11846,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:16087,Performance,optimiz,optimization,16087,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:16184,Performance,optimiz,optimization,16184,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:21880,Performance,optimiz,optimization,21880,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:21977,Performance,optimiz,optimization,21977,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:587,Safety,predict,predicted,587,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:21136,Safety,safe,safe,21136,"plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:980,Usability,intuit,intuition,980,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf204b_extendedLikelihood_rangedFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf->fitTo(data,Range(""Range1,Range2"")), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model paramet",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:7993,Availability,error,error,7993,"t(); ; frame3 = x.frame(); data.plotOn(frame3); modelsum.plotOn(frame3); modelsum.plotOn(frame3, VisualizeError=r3); modelsum.paramOn(frame3, Label=""S+B fit with RooAddPdf"", Layout=(0.3, 0.95)); frame3.Draw(); ; c.Draw(); ; c.SaveAs(""rf204b_extendedLikelihood_rangedFit.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:8784,Availability,error,error,8784,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:13122,Availability,error,error,13122,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:18915,Availability,error,error,18915,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:363,Modifiability,extend,extended,363,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:438,Modifiability,extend,extended,438,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:757,Modifiability,extend,extended,757,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:794,Modifiability,extend,extended,794,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1011,Modifiability,extend,extended,1011,"rence Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their inte",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1260,Modifiability,extend,extended,1260,"d Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1353,Modifiability,extend,extended,1353," (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Bac",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1637,Modifiability,extend,extended,1637," take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1670,Modifiability,extend,extended,1670,"l as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which me",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:2264,Modifiability,extend,extended,2264,"respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will t",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:2843,Modifiability,extend,extended,2843," event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; N = ROOT.RooRealVar(""N"", ""Extended term"", 0, 20000); extmodel = ROOT.RooExtendPdf(""extmodel"", ""Extended model"", model, N, ""FULL""); ; ; # It can be instructive to fit the above model to either the LEFT or RIGHT; # range. `N` should approximately converge to the expecte",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:3406,Modifiability,extend,extending,3406,"------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; N = ROOT.RooRealVar(""N"", ""Extended term"", 0, 20000); extmodel = ROOT.RooExtendPdf(""extmodel"", ""Extended model"", model, N, ""FULL""); ; ; # It can be instructive to fit the above model to either the LEFT or RIGHT; # range. `N` should approximately converge to the expected number of events in; # the full range. One may try to leave out `""FULL""` in the constructor, or the; # interpretation of `N` changes.; extmodel.fitTo(data, Range=""LEFT"", PrintLevel=-1); N.Print(); ; ; # If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:4103,Modifiability,extend,extended,4103,"nge}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; N = ROOT.RooRealVar(""N"", ""Extended term"", 0, 20000); extmodel = ROOT.RooExtendPdf(""extmodel"", ""Extended model"", model, N, ""FULL""); ; ; # It can be instructive to fit the above model to either the LEFT or RIGHT; # range. `N` should approximately converge to the expected number of events in; # the full range. One may try to leave out `""FULL""` in the constructor, or the; # interpretation of `N` changes.; extmodel.fitTo(data, Range=""LEFT"", PrintLevel=-1); N.Print(); ; ; # If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:4348,Modifiability,extend,extended,4348,"[RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),; ; N = ROOT.RooRealVar(""N"", ""Extended term"", 0, 20000); extmodel = ROOT.RooExtendPdf(""extmodel"", ""Extended model"", model, N, ""FULL""); ; ; # It can be instructive to fit the above model to either the LEFT or RIGHT; # range. `N` should approximately converge to the expected number of events in; # the full range. One may try to leave out `""FULL""` in the constructor, or the; # interpretation of `N` changes.; extmodel.fitTo(data, Range=""LEFT"", PrintLevel=-1); N.Print(); ; ; # If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn(frame2, Label=""Extended fit"", Layout=(0.4, 0.95)); frame2.Draw(); ; # PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended like",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:4898,Modifiability,extend,extended,4898,"ge. One may try to leave out `""FULL""` in the constructor, or the; # interpretation of `N` changes.; extmodel.fitTo(data, Range=""LEFT"", PrintLevel=-1); N.Print(); ; ; # If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn(frame2, Label=""Extended fit"", Layout=(0.4, 0.95)); frame2.Draw(); ; # PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c.cd(3); ; Nsig = ROOT.RooRealVar(""Nsig"", ""Number of signal events"", 1000, 0, 2000); Nbkg = ROOT.RooRealV",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:5368,Modifiability,extend,extended,5368," L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn(frame2, Label=""Extended fit"", Layout=(0.4, 0.95)); frame2.Draw(); ; # PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c.cd(3); ; Nsig = ROOT.RooRealVar(""Nsig"", ""Number of signal events"", 1000, 0, 2000); Nbkg = ROOT.RooRealVar(""Nbkg"", ""Number of background events"", 10000, 0, 20000); ; mean = ROOT.RooRealVar(""mean"", ""Mean of signal model"", 40.0); width = ROOT.RooRealVar(""width"", ""Width of signal model"", 5.0); sig = ROOT.RooGaussian(""sig"", ""Signal model"", x, mean, width); ; modelsum = ROOT.RooAddPdf(""modelsum"", ""NSig*signal + NBkg*background"", [sig, model], [Nsig, Nbkg]); ; # This model will automatically insert the correction factor for the; # reinterpretation of Nsig and Nnbkg in the full ranges.; #; # When t",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:5459,Modifiability,extend,extended,5459," L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]; ; ; c = ROOT.TCanvas(""c"", ""c"", 2100, 700); c.Divide(3); c.cd(1); ; r = model.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r.Print(); ; frame = x.frame(); data.plotOn(frame); model.plotOn(frame, VisualizeError=r); model.plotOn(frame); model.paramOn(frame, Label=""Non-extended fit""); frame.Draw(); ; c.cd(2); ; r2 = extmodel.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r2.Print(); frame2 = x.frame(); data.plotOn(frame2); extmodel.plotOn(frame2); extmodel.plotOn(frame2, VisualizeError=r2); extmodel.paramOn(frame2, Label=""Extended fit"", Layout=(0.4, 0.95)); frame2.Draw(); ; # PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.; ; c.cd(3); ; Nsig = ROOT.RooRealVar(""Nsig"", ""Number of signal events"", 1000, 0, 2000); Nbkg = ROOT.RooRealVar(""Nbkg"", ""Number of background events"", 10000, 0, 20000); ; mean = ROOT.RooRealVar(""mean"", ""Mean of signal model"", 40.0); width = ROOT.RooRealVar(""width"", ""Width of signal model"", 5.0); sig = ROOT.RooGaussian(""sig"", ""Signal model"", x, mean, width); ; modelsum = ROOT.RooAddPdf(""modelsum"", ""NSig*signal + NBkg*background"", [sig, model], [Nsig, Nbkg]); ; # This model will automatically insert the correction factor for the; # reinterpretation of Nsig and Nnbkg in the full ranges.; #; # When t",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:7529,Modifiability,extend,extended,7529,"sum_modelsumData_LEFT) fixing interpretation of coefficients of any RooAddPdf to full domain of observables; # [#1] INFO:Fitting -- RooAbsOptTestStatistic::ctor(nll_modelsum_modelsumData_RIGHT) fixing interpretation of coefficients of any RooAddPdf to full domain of observables; # ```; ; r3 = modelsum.fitTo(data, Range=""LEFT,RIGHT"", PrintLevel=-1, Save=True); r3.Print(); ; frame3 = x.frame(); data.plotOn(frame3); modelsum.plotOn(frame3); modelsum.plotOn(frame3, VisualizeError=r3); modelsum.paramOn(frame3, Label=""S+B fit with RooAddPdf"", Layout=(0.3, 0.95)); frame3.Draw(); ; c.Draw(); ; c.SaveAs(""rf204b_extendedLikelihood_rangedFit.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::f",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:12603,Modifiability,extend,extended,12603,".d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:18396,Modifiability,extend,extended,18396,"odel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1027,Performance,perform,performed,1027,"rence Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their inte",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:1697,Performance,perform,performed,1697,"l as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same model parameter results in a number that is not easily interpreted.; If both regions correct their interpretation such that N_expected refers to the full range, it is interpreted easily, and consistent in both regions.; This requires that the likelihood model is extended using RooAddPdf in the form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf. ; import ROOT; ; ROOT.gROOT.SetBatch(True); ; # PART 1: Background-only fits; # ----------------------------; ; # Build plain exponential model; x = ROOT.RooRealVar(""x"", ""x"", 10, 100); alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -0.04, -0.1, -0.0); model = ROOT.RooExponential(""model"", ""Exponential model"", x, alpha); ; # Define side band regions and full range; x.setRange(""LEFT"", 10, 20); x.setRange(""RIGHT"", 60, 100); ; x.setRange(""FULL"", 10, 100); ; data = model.generate(x, 10000); ; # Construct an extended pdf, which me",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:8087,Performance,optimiz,optimization,8087,"t(); ; frame3 = x.frame(); data.plotOn(frame3); modelsum.plotOn(frame3); modelsum.plotOn(frame3, VisualizeError=r3); modelsum.paramOn(frame3, Label=""S+B fit with RooAddPdf"", Layout=(0.3, 0.95)); frame3.Draw(); ; c.Draw(); ; c.SaveAs(""rf204b_extendedLikelihood_rangedFit.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:8184,Performance,optimiz,optimization,8184,"t(); ; frame3 = x.frame(); data.plotOn(frame3); modelsum.plotOn(frame3); modelsum.plotOn(frame3, VisualizeError=r3); modelsum.paramOn(frame3, Label=""S+B fit with RooAddPdf"", Layout=(0.3, 0.95)); frame3.Draw(); ; c.Draw(); ; c.SaveAs(""rf204b_extendedLikelihood_rangedFit.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'RIGHT' created with bounds [60,100]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [10,100]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimizati",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:8878,Performance,optimiz,optimization,8878,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:8975,Performance,optimiz,optimization,8975,"odel_modelData' created with bounds [10,20]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; RooRealVar::N = 3395.66 +/- 58.2751 L(0 - 20000) ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x|LEFT,RIGHT]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x|LEFT,RIGHT]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14265.9, estimated distance to minimum: 1.48012e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alpha -3.9974e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:13216,Performance,optimiz,optimization,13216,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:13313,Performance,optimiz,optimization,13313,""");; - Explicitly specify the plotting range: Range(""<rangeName>"").; - Explicitly specify where to compute the normalisation: NormRange(""<rangeName>"").; The default (full) range can be denoted with Range("""") / NormRange("""").; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) only plotting range 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_model_modelData_LEFT,fit_nll_model_modelData_RIGHT'; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_extmodel_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(extmodel) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_extmodel_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -15500.6, estimated distance to minimum: 0.000427967; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; N 4.4939e+03 +/- 6.70e+01; alpha -4.8258e-02 +/- 8.32e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explicitly specify the plotting range: R",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:19009,Performance,optimiz,optimization,19009,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:19106,Performance,optimiz,optimization,19106,"ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19036.9, estimated distance to minimum: 5.53181e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; Nbkg 9.9878e+03 +/- 1.50e+02; Nsig 1.2239e-03 +/- 1.97e+03; alpha -3.9975e-02 +/- 5.60e-04; ; [#1] INFO:Plotting -- RooAbsPdf::plotOn(modelsum) p.d.f was fitted in a subrange and no explicit Range() and NormRange() was specified. Plotting / normalising in fit range. To override, do one of the following; - Clear the automatic fit range attribute: <pdf>.removeStringAttribute(""fitrange"");; - Explici",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:600,Safety,predict,predicted,600,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:18265,Safety,safe,safe,18265,"plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) only plotting range 'fit_nll_extmodel_modelData_RIGHT'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(extmodel) p.d.f. curve is normalized using explicit choice of ranges 'fit_nll_extmodel_modelData_LEFT,fit_nll_extmodel_modelData_RIGHT'; [#0] WARNING:InputArguments -- The parameter 'width' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_LEFT' created with bounds [10,20]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_modelsum_modelData_RIGHT' created with bounds [60,100]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(modelsum) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_modelsum_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -19",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html:993,Usability,intuit,intuition,993,". ROOT: tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf204b_extendedLikelihood_rangedFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; This macro demonstrates how to set up a fit in two ranges for plain likelihoods and extended likelihoods. . 1. Shape fits (plain likelihood); If you fit a non-extended pdf in two ranges, e.g. pdf.fitTo(data,Range=""Range1,Range2""), it will fit the shapes in the two selected ranges and also take into account the relative predicted yields in those ranges.; This is useful for example to represent a full-range fit, but with a blinded signal region inside it. 2. Shape+rate fits (extended likelihood); If your pdf is extended, i.e. measuring both the distribution in the observable as well as the event count in the fitted region, some intervention is needed to make fits in ranges work in a way that corresponds to intuition.; If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence the expected event count will converge to a number that is smaller than what's visible in a plot. In such cases, it is often preferred to interpret the extended term with respect to the full range that's plotted, i.e., apply a correction to the extended likelihood term in such a way that the interpretation of the expected event count remains that of the full range. This can be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the fitted range) in the Poisson term that represents the extended likelihood term.; If an extended likelihood fit is performed over two sub-ranges, this correction is even more important: without it, each component likelihood would have a different interpretation of the expected event count (each corresponding to the count in its own region), and a joint fit of these regions with different interpretations of the same ",MatchSource.WIKI,doc/master/rf204b__extendedLikelihood__rangedFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8py.html
https://root.cern/doc/master/rf205__compplot_8C.html:5438,Modifiability,variab,variable,5438,"ebychev.h; RooDataSet.h; RooExponential.h; RooGaussian.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kCyan@ kCyanDefinition Rtypes.h:66; kYellow@ kYellowDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TNamed::CloneTObject * Clone(const char *newname="""") const overrideMake a clone of an object using the Streamer facility.Definition TNamed.cxx:74; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::InvisibleRooCmdArg Invisible(bool inv=true)Definition RooGlobalFunc.cxx:276; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx",MatchSource.WIKI,doc/master/rf205__compplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf205__compplot_8C.html
https://root.cern/doc/master/rf205__compplot_8C.html:6861,Safety,safe,safe,6861,"tTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TNamed::CloneTObject * Clone(const char *newname="""") const overrideMake a clone of an object using the Streamer facility.Definition TNamed.cxx:74; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::InvisibleRooCmdArg Invisible(bool inv=true)Definition RooGlobalFunc.cxx:276; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf205_compplotDefinition rf205_compplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2,sig); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bk",MatchSource.WIKI,doc/master/rf205__compplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf205__compplot_8C.html
https://root.cern/doc/master/rf205__compplot_8C.html:7028,Safety,safe,safe,7028,"Object * Clone(const char *newname="""") const overrideMake a clone of an object using the Streamer facility.Definition TNamed.cxx:74; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::InvisibleRooCmdArg Invisible(bool inv=true)Definition RooGlobalFunc.cxx:276; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf205_compplotDefinition rf205_compplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2,sig); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg1,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected ",MatchSource.WIKI,doc/master/rf205__compplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf205__compplot_8C.html
https://root.cern/doc/master/rf205__compplot_8py.html:4167,Safety,safe,safe,4167,"-----; ; # Plot single background component specified by name; model.plotOn(xframe2, Components=""bkg"", LineColor=""c""); ; # Plot multiple background components specified by name; model.plotOn(xframe2, Components=""bkg1,sig2"", LineStyle="":"", LineColor=""c""); ; # Plot multiple background components specified by regular expression on; # name; model.plotOn(xframe2, Components=""sig*"", LineStyle=""--"", LineColor=""c""); ; # Plot multiple background components specified by multiple regular; # expressions on name; model.plotOn(xframe2, Invisible=True, Components=""bkg1,sig*"", LineStyle=""--"", LineColor=""y""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf205_compplot"", ""rf205_compplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); xframe2.GetYaxis().SetTitleOffset(1.4); xframe2.Draw(); ; c.SaveAs(""rf205_compplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2,sig); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1",MatchSource.WIKI,doc/master/rf205__compplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf205__compplot_8py.html
https://root.cern/doc/master/rf205__compplot_8py.html:4334,Safety,safe,safe,4334,"y name; model.plotOn(xframe2, Components=""bkg1,sig2"", LineStyle="":"", LineColor=""c""); ; # Plot multiple background components specified by regular expression on; # name; model.plotOn(xframe2, Components=""sig*"", LineStyle=""--"", LineColor=""c""); ; # Plot multiple background components specified by multiple regular; # expressions on name; model.plotOn(xframe2, Invisible=True, Components=""bkg1,sig*"", LineStyle=""--"", LineColor=""y""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf205_compplot"", ""rf205_compplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); xframe2.GetYaxis().SetTitleOffset(1.4); xframe2.Draw(); ; c.SaveAs(""rf205_compplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2,sig); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (bkg1,bkg2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg1,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected ",MatchSource.WIKI,doc/master/rf205__compplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf205__compplot_8py.html
https://root.cern/doc/master/rf206__treevistools_8C.html:2590,Availability,avail,available,2590,"""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // P r i n t c o m p o s i t e t r e e i n A S C I I; // -----------------------------------------------------------; ; // Print tree to stdout; model.Print(""t"");; ; // Print tree to file; model.printCompactTree("""", ""rf206_asciitree.txt"");; ; // D r a w c o m p o s i t e t r e e g r a p h i c a l l y; // -------------------------------------------------------------; ; // Print GraphViz DOT file with representation of tree; model.graphVizTree(""rf206_model.dot"");; ; // Make graphic output file with one of the GraphViz tools; // (freely available from www.graphviz.org); //; // 'Top-to-bottom graph'; // unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; //; // 'Spring-model graph'; // unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExponential.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; xDouble_t x[n]Definition legend1.C:17; RooFitTh",MatchSource.WIKI,doc/master/rf206__treevistools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8C.html
https://root.cern/doc/master/rf206__treevistools_8C.html:3856,Safety,safe,safe,3856,"oAddPdf.h; RooChebychev.h; RooDataSet.h; RooExponential.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf206_treevistoolsDefinition rf206_treevistools.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; 0x7ffd18ff9e50 RooAddPdf::model = 0.582695/1 [Auto,Clean] ; 0x7ffd18ff8f60/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x7ffd18ff65f8/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff7bd8/V- RooRealVar::a0 = 0.5; 0x7ffd18ff7fc0/V- RooRealVar::a1 = 0.2; 0x7ffd18ff8790/V- RooRealVar::bkg1frac = 0.2; 0x7ffd18ff6b28/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff83a8/V- RooRealVar::alpha = -1; 0x7ffd18ff9a68/V- RooRealVar::bkgfrac = 0.5; 0x7ffd18ff5428/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7ffd18ff5b48/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff8b78/V- RooRealVar::mean = 5; 0x7ffd18ff702",MatchSource.WIKI,doc/master/rf206__treevistools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8C.html
https://root.cern/doc/master/rf206__treevistools_8C.html:4023,Safety,safe,safe,4023,"of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf206_treevistoolsDefinition rf206_treevistools.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; 0x7ffd18ff9e50 RooAddPdf::model = 0.582695/1 [Auto,Clean] ; 0x7ffd18ff8f60/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x7ffd18ff65f8/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff7bd8/V- RooRealVar::a0 = 0.5; 0x7ffd18ff7fc0/V- RooRealVar::a1 = 0.2; 0x7ffd18ff8790/V- RooRealVar::bkg1frac = 0.2; 0x7ffd18ff6b28/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff83a8/V- RooRealVar::alpha = -1; 0x7ffd18ff9a68/V- RooRealVar::bkgfrac = 0.5; 0x7ffd18ff5428/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7ffd18ff5b48/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0x7ffd18ff8b78/V- RooRealVar::mean = 5; 0x7ffd18ff7020/V- RooRealVar::sigma1 = 0.5; 0x7ffd18ff77f0/V- RooRealVar::sig1frac = 0.8; 0x7ffd18ff60a0/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x7ffd18ff9680/V- RooRealVar::x = 5; 0",MatchSource.WIKI,doc/master/rf206__treevistools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8C.html
https://root.cern/doc/master/rf206__treevistools_8py.html:2353,Availability,avail,available,2353,"pontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background pdf; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Print composite tree in ASCII; # -----------------------------------------------------------; ; # Print tree to stdout; model.Print(""t""); ; # Print tree to file; model.printCompactTree("""", ""rf206_asciitree.txt""); ; # Draw composite tree graphically; # -------------------------------------------------------------; ; # Print GraphViz DOT file with representation of tree; model.graphVizTree(""rf206_model.dot""); ; # Make graphic output file with one of the GraphViz tools; # (freely available from www.graphviz.org); #; # 'Top-to-bottom graph'; # unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; #; # 'Spring-model graph'; # unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; 0x788d230 RooAddPdf::model = 0.602695/1 [Auto,Clean] ; 0x73f4730/V- RooAddPdf::bkg = 0.20539/1 [Auto,Clean] ; 0x793f3e0/V- RooChebychev::bkg1 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7539e30/V- RooRealVar::a0 = 0.5; 0x7496810/V- RooRealVar::a1 = 0; 0x7353b80/V- RooRealVar::bkg1frac = 0.2; 0x792d390/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7429310/V- RooRealVar::alpha = -1;",MatchSource.WIKI,doc/master/rf206__treevistools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8py.html
https://root.cern/doc/master/rf206__treevistools_8py.html:2673,Safety,safe,safe,2673,"oAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Print composite tree in ASCII; # -----------------------------------------------------------; ; # Print tree to stdout; model.Print(""t""); ; # Print tree to file; model.printCompactTree("""", ""rf206_asciitree.txt""); ; # Draw composite tree graphically; # -------------------------------------------------------------; ; # Print GraphViz DOT file with representation of tree; model.graphVizTree(""rf206_model.dot""); ; # Make graphic output file with one of the GraphViz tools; # (freely available from www.graphviz.org); #; # 'Top-to-bottom graph'; # unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; #; # 'Spring-model graph'; # unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; 0x788d230 RooAddPdf::model = 0.602695/1 [Auto,Clean] ; 0x73f4730/V- RooAddPdf::bkg = 0.20539/1 [Auto,Clean] ; 0x793f3e0/V- RooChebychev::bkg1 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7539e30/V- RooRealVar::a0 = 0.5; 0x7496810/V- RooRealVar::a1 = 0; 0x7353b80/V- RooRealVar::bkg1frac = 0.2; 0x792d390/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7429310/V- RooRealVar::alpha = -1; 0x2ee1ac0/V- RooRealVar::bkgfrac = 0.5; 0x4d76f30/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7444460/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x6dbe690/V- RooRealVar::mean = 5; 0x3bcf160/V- RooRealVar::sigma1 = 0.5; 0x736e030/V- RooRealVar::sig1frac = 0.8; 0x7422370/V- R",MatchSource.WIKI,doc/master/rf206__treevistools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8py.html
https://root.cern/doc/master/rf206__treevistools_8py.html:2840,Safety,safe,safe,2840," 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Print composite tree in ASCII; # -----------------------------------------------------------; ; # Print tree to stdout; model.Print(""t""); ; # Print tree to file; model.printCompactTree("""", ""rf206_asciitree.txt""); ; # Draw composite tree graphically; # -------------------------------------------------------------; ; # Print GraphViz DOT file with representation of tree; model.graphVizTree(""rf206_model.dot""); ; # Make graphic output file with one of the GraphViz tools; # (freely available from www.graphviz.org); #; # 'Top-to-bottom graph'; # unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; #; # 'Spring-model graph'; # unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; 0x788d230 RooAddPdf::model = 0.602695/1 [Auto,Clean] ; 0x73f4730/V- RooAddPdf::bkg = 0.20539/1 [Auto,Clean] ; 0x793f3e0/V- RooChebychev::bkg1 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7539e30/V- RooRealVar::a0 = 0.5; 0x7496810/V- RooRealVar::a1 = 0; 0x7353b80/V- RooRealVar::bkg1frac = 0.2; 0x792d390/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x7429310/V- RooRealVar::alpha = -1; 0x2ee1ac0/V- RooRealVar::bkgfrac = 0.5; 0x4d76f30/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x7444460/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x6dbe690/V- RooRealVar::mean = 5; 0x3bcf160/V- RooRealVar::sigma1 = 0.5; 0x736e030/V- RooRealVar::sig1frac = 0.8; 0x7422370/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x71161c0/V- RooRealVar::x = 5; 0x6dbe690/V- RooRealVar::mean = 5; 0x2ee16d0/V- RooRealVar::sigma2 = 1; DateFebruary 2018 ; AuthorsC",MatchSource.WIKI,doc/master/rf206__treevistools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf206__treevistools_8py.html
https://root.cern/doc/master/rf207__comptools_8C.html:5166,Integrability,interface,interface,5166,"uched. The name of each cloned node is that; // of the original node suffixed by the name of the customizer object; //; // The returned head node own all nodes that were cloned as part of; // the build process so when cust_clone is deleted so will all other; // nodes that were created in the process.; RooAbsPdf *cust_clone = (RooAbsPdf *)cust.build(true);; ; // Print structure of clone of model with sig->sigsum replacement.; cust_clone->Print(""t"");; ; delete cust_clone;; }; RooAddPdf.h; RooChebychev.h; RooCustomizer.h; RooDataSet.h; RooExponential.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooCustomizerRooCustomizer is a factory class to produce clones of a prototype composite PDF object with the same ...Definition RooCustomizer.h:36; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition lege",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8C.html:7969,Integrability,depend,depends,7969,"34428 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ffcf3631c58 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x7ffcf3635228 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x7ffcf3633d08 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x7ffcf3631230 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4) 0x7ffcf3631760 RooExponential:: bkg2[ x=x c=alpha ] = 0.00673795 ""Background 2""; 5) 0x7ffcf36337b0 RooGaussian:: sig[ x=x mean=mean sigma=sigma ] = 1 ""Signal component 1""; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooCustomizer::build(model): tree node sig will be replaced by sigsum; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node RooAddPdf::model cloned: depends on a replaced parameter; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node sig is already replaced; 0x55dc4fd6a940 RooAddPdf::model_cust = 0.582695/1 [Auto,Clean] ; 0x7ffcf3633d08/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x7ffcf3631230/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x7ffcf3635ea0/V- RooRealVar::x = 5; 0x7ffcf3632040/V- RooRealVar::a0 = 0.5; 0x7ffcf3632428/V- RooRealVar::a1 = 0.2; 0x7ffcf3632bf8/V- RooRealVar::bkg1frac = 0.2; 0x7ffcf3631760/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x7ffcf3635ea0/V- RooRealVar::x = 5; 0x7ffcf3632810/V- RooRealVar::alpha = -1; 0x7ffcf3632fe0/V- RooRealVar::bkgfrac = 0.5; 0x7ffcf3636288/V- RooAddPdf::sigsum = 1/1 [Auto,Clean] ; 0x7ffcf36337b0/V- RooGaussian::sig = 1 [Auto,Dirty] ; 0x7ffcf3635ea0/V- RooRealVar::x = 5; 0x7ffcf3634428/V- RooRealVar::mean = 5; 0x7ffcf3631c58/V- RooRealVar::sigma = 0.5; 0x7ffcf3634bf8/V- RooRealVar::sig1frac = 0.8; 0x7ffcf3635948/V- RooGaussian::sig2 = 1 [Auto,D",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8C.html:2316,Modifiability,variab,variables,2316,"nent 1"", x, mean, sigma);; ; // Build Chebychev polynomial pdf; RooRealVar a0(""a0"", ""a0"", 0.5, 0., 1.);; RooRealVar a1(""a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build exponential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Create dummy dataset that has more observables than the above pdf; RooRealVar y(""y"", ""y"", -10, 10);; RooDataSet data(""data"", ""data"", RooArgSet(x, y));; ; // ---------------------------------------------------; // B a s i c i n f o r m a t i o n r e q u e s t s; // ===================================================; ; // G e t l i s t o f o b s e r v a b l e s; // ---------------------------------------------; ; // Get list of observables of pdf in context of a dataset; //; // Observables are define each context as the variables; // shared between a model and a dataset. In this case; // that is the variable 'x'; ; std::unique_ptr<RooArgSet> model_obs{model.getObservables(data)};; model_obs->Print(""v"");; ; // G e t l i s t o f p a r a m e t e r s; // -------------------------------------------; ; // Get list of parameters, given list of observables; std::unique_ptr<RooArgSet> model_params{model.getParameters(x)};; model_params->Print(""v"");; ; // Get list of parameters, given a dataset; // (Gives identical results to operation above); std::unique_ptr<RooArgSet> model_params2{model.getParameters(data)};; model_params2->Print();; ; // G e t l i s t o f c o m p o n e n t s; // -------------------------------------------; ; // Get list",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8C.html:2397,Modifiability,variab,variable,2397," into a composite background pdf; RooRealVar bkg1frac(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), bkg1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // Create dummy dataset that has more observables than the above pdf; RooRealVar y(""y"", ""y"", -10, 10);; RooDataSet data(""data"", ""data"", RooArgSet(x, y));; ; // ---------------------------------------------------; // B a s i c i n f o r m a t i o n r e q u e s t s; // ===================================================; ; // G e t l i s t o f o b s e r v a b l e s; // ---------------------------------------------; ; // Get list of observables of pdf in context of a dataset; //; // Observables are define each context as the variables; // shared between a model and a dataset. In this case; // that is the variable 'x'; ; std::unique_ptr<RooArgSet> model_obs{model.getObservables(data)};; model_obs->Print(""v"");; ; // G e t l i s t o f p a r a m e t e r s; // -------------------------------------------; ; // Get list of parameters, given list of observables; std::unique_ptr<RooArgSet> model_params{model.getParameters(x)};; model_params->Print(""v"");; ; // Get list of parameters, given a dataset; // (Gives identical results to operation above); std::unique_ptr<RooArgSet> model_params2{model.getParameters(data)};; model_params2->Print();; ; // G e t l i s t o f c o m p o n e n t s; // -------------------------------------------; ; // Get list of component objects, including top-level node; std::unique_ptr<RooArgSet> model_comps{model.getComponents()};; model_comps->Print(""v"");; ; // -------------------------------------------------------------------------------; // M o d i f i c a t i o n s t o s t r u c t u r e o f c o m p o s i t e s; // ====================================================================",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8C.html:6485,Safety,safe,safe,6485,".h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooCustomizerRooCustomizer is a factory class to produce clones of a prototype composite PDF object with the same ...Definition RooCustomizer.h:36; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf207_comptoolsDefinition rf207_comptools.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; 1) 0x7ffcf3635ea0 RooRealVar:: x = 5 L(0 - 10) ""x""; 1) 0x7ffcf3632040 RooRealVar:: a0 = 0.5 L(0 - 1) ""a0""; 2) 0x7ffcf3632428 RooRealVar:: a1 = 0.2 L(0 - 1) ""a1""; 3) 0x7ffcf3632810 RooRealVar:: alpha = -1 C L(-INF - +INF) ""alpha""; 4) 0x7ffcf3632bf8 RooRealVar:: bkg1frac = 0.2 L(0 - 1) ""fraction of component 1 in background""; 5) 0x7ffcf3632fe0 RooRealVar:: bkgfrac = 0.5 L(0 - 1) ""fraction of background""; 6) 0x7ffcf3634428 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ffcf3631c58 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x7ffcf3635228 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x7ffcf3633d08 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x7ffcf3631230 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8C.html:7725,Safety,safe,safe,7725,"0 = 0.5 L(0 - 1) ""a0""; 2) 0x7ffcf3632428 RooRealVar:: a1 = 0.2 L(0 - 1) ""a1""; 3) 0x7ffcf3632810 RooRealVar:: alpha = -1 C L(-INF - +INF) ""alpha""; 4) 0x7ffcf3632bf8 RooRealVar:: bkg1frac = 0.2 L(0 - 1) ""fraction of component 1 in background""; 5) 0x7ffcf3632fe0 RooRealVar:: bkgfrac = 0.5 L(0 - 1) ""fraction of background""; 6) 0x7ffcf3634428 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ffcf3631c58 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x7ffcf3635228 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x7ffcf3633d08 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x7ffcf3631230 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4) 0x7ffcf3631760 RooExponential:: bkg2[ x=x c=alpha ] = 0.00673795 ""Background 2""; 5) 0x7ffcf36337b0 RooGaussian:: sig[ x=x mean=mean sigma=sigma ] = 1 ""Signal component 1""; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooCustomizer::build(model): tree node sig will be replaced by sigsum; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node RooAddPdf::model cloned: depends on a replaced parameter; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node sig is already replaced; 0x55dc4fd6a940 RooAddPdf::model_cust = 0.582695/1 [Auto,Clean] ; 0x7ffcf3633d08/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x7ffcf3631230/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x7ffcf3635ea0/V- RooRealVar::x = 5; 0x7ffcf3632040/V- RooRealVar::a0 = 0.5; 0x7ffcf3632428/V- RooRealVar::a1 = 0.2; 0x7ffcf3632bf8/V- RooRealVar::bkg1frac = 0.2; 0x7ffcf3631760/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x7ffcf3635ea0/V- RooRealVar::x = 5; 0x7ffcf3632810/V- RooRealVar::alpha = -1; 0x7ffcf3632fe0/V- RooRealVar::bkgf",MatchSource.WIKI,doc/master/rf207__comptools_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8C.html
https://root.cern/doc/master/rf207__comptools_8py.html:5685,Integrability,depend,depends,5685,"fraction of background""; 6) 0x82654f0 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ef2000 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x8a01230 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x898ff20 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x891da50 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4) 0x8948240 RooExponential:: bkg2[ x=x c=alpha ] = 0.00673795 ""Background 2""; 5) 0x8554880 RooGaussian:: sig[ x=x mean=mean sigma=sigma ] = 1 ""Signal component 1""; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooCustomizer::build(model): tree node sig will be replaced by sigsum; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node RooAddPdf::model cloned: depends on a replaced parameter; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node sig is already replaced; 0x8e664a0 RooAddPdf::model_cust = 0.582695/1 [Auto,Clean] ; 0x898ff20/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x891da50/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x847fc10/V- RooRealVar::a0 = 0.5; 0x84f2330/V- RooRealVar::a1 = 0.2; 0x8782390/V- RooRealVar::bkg1frac = 0.2; 0x8948240/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x87f3060/V- RooRealVar::alpha = -1; 0x8926120/V- RooRealVar::bkgfrac = 0.5; 0x8cd8990/V- RooAddPdf::sigsum = 1/1 [Auto,Clean] ; 0x8554880/V- RooGaussian::sig = 1 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x82654f0/V- RooRealVar::mean = 5; 0x7ef2000/V- RooRealVar::sigma = 0.5; 0x209c5a0/V- RooRealVar::sig1frac = 0.8; 0x8f54960/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x82654f0/V- RooRealVar::mean = 5; 0x40132d0/V-",MatchSource.WIKI,doc/master/rf207__comptools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html
https://root.cern/doc/master/rf207__comptools_8py.html:1993,Modifiability,variab,variables,1993,"(""a0"", ""a0"", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background p.d.f.; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Create dummy dataset that has more observables than the above pdf; y = ROOT.RooRealVar(""y"", ""y"", -10, 10); data = ROOT.RooDataSet(""data"", ""data"", {x, y}); ; # Basic information requests; # ---------------------------------------------; ; ; # Get list of observables; # ---------------------------------------------; ; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variables; # shared between a model and a dataset. In self case; # that is the variable 'x'; ; model_obs = model.getObservables(data); ROOT.SetOwnership(model_obs, True); model_obs.Print(""v""); ; # Get list of parameters; # -------------------------------------------; ; # Get list of parameters, list of observables; model_params = model.getParameters({x}); ROOT.SetOwnership(model_params, True); model_params.Print(""v""); ; # Get list of parameters, a dataset; # (Gives identical results to operation above); model_params2 = model.getParameters(data); ROOT.SetOwnership(model_params2, True); model_params2.Print(); ; # Get list of components; # -------------------------------------------; ; # Get list of component objects, top-level node; model_comps = model.getComponents(); ROOT.SetOwnership(model_comps, True); model_comps.Print(""v""); ; # Modifications to structure of",MatchSource.WIKI,doc/master/rf207__comptools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html
https://root.cern/doc/master/rf207__comptools_8py.html:2072,Modifiability,variab,variable,2072,", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background p.d.f.; bkg1frac = ROOT.RooRealVar(""bkg1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [bkg1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Create dummy dataset that has more observables than the above pdf; y = ROOT.RooRealVar(""y"", ""y"", -10, 10); data = ROOT.RooDataSet(""data"", ""data"", {x, y}); ; # Basic information requests; # ---------------------------------------------; ; ; # Get list of observables; # ---------------------------------------------; ; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variables; # shared between a model and a dataset. In self case; # that is the variable 'x'; ; model_obs = model.getObservables(data); ROOT.SetOwnership(model_obs, True); model_obs.Print(""v""); ; # Get list of parameters; # -------------------------------------------; ; # Get list of parameters, list of observables; model_params = model.getParameters({x}); ROOT.SetOwnership(model_params, True); model_params.Print(""v""); ; # Get list of parameters, a dataset; # (Gives identical results to operation above); model_params2 = model.getParameters(data); ROOT.SetOwnership(model_params2, True); model_params2.Print(); ; # Get list of components; # -------------------------------------------; ; # Get list of component objects, top-level node; model_comps = model.getComponents(); ROOT.SetOwnership(model_comps, True); model_comps.Print(""v""); ; # Modifications to structure of composites; # -------------------------------------------; ; # Create a second Gaussian; sigma2 = ROOT.RooRealVar(""sigma2"", ""width of gaussians"", 1); sig2 = ROOT.RooGaussian(""sig2"", ""Signal component 1"", x, m",MatchSource.WIKI,doc/master/rf207__comptools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html
https://root.cern/doc/master/rf207__comptools_8py.html:4266,Safety,safe,safe,4266,"ent 1 in signal"", 0.8, 0.0, 1.0); sigsum = ROOT.RooAddPdf(""sigsum"", ""sig+sig2"", [sig, sig2], [sig1frac]); ; # Construct a customizer utility to customize model; cust = ROOT.RooCustomizer(model, ""cust""); ; # Instruct the customizer to replace node 'sig' with node 'sigsum'; cust.replaceArg(sig, sigsum); ; # Build a clone of the input pdf according to the above customization; # instructions. Each node that requires modified is clone so that the; # original pdf remained untouched. The name of each cloned node is that; # of the original node suffixed by the name of the customizer object; #; # The returned head node own all nodes that were cloned as part of; # the build process so when cust_clone is deleted so will all other; # nodes that were created in the process.; cust_clone = cust.build(ROOT.kTRUE); ROOT.SetOwnership(cust_clone, True); ; # Print structure of clone of model with sig.sigsum replacement.; cust_clone.Print(""t""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'sig' exceeds the safe range of (0, inf). Advise to limit its range.; 1) 0x8241e40 RooRealVar:: x = 5 L(0 - 10) ""x""; 1) 0x847fc10 RooRealVar:: a0 = 0.5 L(0 - 1) ""a0""; 2) 0x84f2330 RooRealVar:: a1 = 0.2 L(0 - 1) ""a1""; 3) 0x87f3060 RooRealVar:: alpha = -1 C L(-INF - +INF) ""alpha""; 4) 0x8782390 RooRealVar:: bkg1frac = 0.2 L(0 - 1) ""fraction of component 1 in background""; 5) 0x8926120 RooRealVar:: bkgfrac = 0.5 L(0 - 1) ""fraction of background""; 6) 0x82654f0 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ef2000 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x8a01230 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x898ff20 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x891da50 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4) 0x8948240 RooExponential:: bkg2[ x=x c=alpha ] = 0.",MatchSource.WIKI,doc/master/rf207__comptools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html
https://root.cern/doc/master/rf207__comptools_8py.html:5441,Safety,safe,safe,5441,"ar:: x = 5 L(0 - 10) ""x""; 1) 0x847fc10 RooRealVar:: a0 = 0.5 L(0 - 1) ""a0""; 2) 0x84f2330 RooRealVar:: a1 = 0.2 L(0 - 1) ""a1""; 3) 0x87f3060 RooRealVar:: alpha = -1 C L(-INF - +INF) ""alpha""; 4) 0x8782390 RooRealVar:: bkg1frac = 0.2 L(0 - 1) ""fraction of component 1 in background""; 5) 0x8926120 RooRealVar:: bkgfrac = 0.5 L(0 - 1) ""fraction of background""; 6) 0x82654f0 RooRealVar:: mean = 5 C L(-INF - +INF) ""mean of gaussians""; 7) 0x7ef2000 RooRealVar:: sigma = 0.5 C L(-INF - +INF) ""width of gaussians""; RooArgSet::parameters = (a0,a1,alpha,bkg1frac,bkgfrac,mean,sigma); 1) 0x8a01230 RooAddPdf:: model[ bkgfrac * bkg + [%] * sig ] = 0.582695/1 ""g1+g2+a""; 2) 0x898ff20 RooAddPdf:: bkg[ bkg1frac * bkg1 + [%] * bkg2 ] = 0.16539/1 ""Signal""; 3) 0x891da50 RooChebychev:: bkg1[ x=x coefficients=(a0,a1) ] = 0.8 ""Background 1""; 4) 0x8948240 RooExponential:: bkg2[ x=x c=alpha ] = 0.00673795 ""Background 2""; 5) 0x8554880 RooGaussian:: sig[ x=x mean=mean sigma=sigma ] = 1 ""Signal component 1""; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooCustomizer::build(model): tree node sig will be replaced by sigsum; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node RooAddPdf::model cloned: depends on a replaced parameter; [#1] INFO:ObjectHandling -- RooCustomizer::build(model) Branch node sig is already replaced; 0x8e664a0 RooAddPdf::model_cust = 0.582695/1 [Auto,Clean] ; 0x898ff20/V- RooAddPdf::bkg = 0.16539/1 [Auto,Clean] ; 0x891da50/V- RooChebychev::bkg1 = 0.8 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x847fc10/V- RooRealVar::a0 = 0.5; 0x84f2330/V- RooRealVar::a1 = 0.2; 0x8782390/V- RooRealVar::bkg1frac = 0.2; 0x8948240/V- RooExponential::bkg2 = 0.00673795 [Auto,Dirty] ; 0x8241e40/V- RooRealVar::x = 5; 0x87f3060/V- RooRealVar::alpha = -1; 0x8926120/V- RooRealVar::bkgfrac = 0.5; 0x8cd8990/V- RooAddPdf::sigsum = 1/1 [Auto,Clea",MatchSource.WIKI,doc/master/rf207__comptools_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf207__comptools_8py.html
https://root.cern/doc/master/rf208__convolution_8C.html:4273,Availability,error,error,4273,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:2956,Modifiability,variab,variable,2956,"me, LineStyle(kDashed));; ; // Draw frame on canvas; new TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; }; RooDataSet.h; RooFFTConvPdf.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACH",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:1311,Performance,cache,cache,1311,"RooGaussian.h""; #include ""RooLandau.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf208_convolution(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Construct observable; RooRealVar t(""t"", ""t"", -10, 30);; ; // Construct landau(t,ml,sl) ;; RooRealVar ml(""ml"", ""mean landau"", 5., -20, 20);; RooRealVar sl(""sl"", ""sigma landau"", 1, 0.1, 10);; RooLandau landau(""lx"", ""lx"", t, ml, sl);; ; // Construct gauss(t,mg,sg); RooRealVar mg(""mg"", ""mg"", 0);; RooRealVar sg(""sg"", ""sg"", 2, 0.1, 10);; RooGaussian gauss(""gauss"", ""gauss"", t, mg, sg);; ; // C o n s t r u c t c o n v o l u t i o n p d f; // ---------------------------------------; ; // Set #bins to be used for FFT sampling to 10000; t.setBins(10000, ""cache"");; ; // Construct landau (x) gauss; RooFFTConvPdf lxg(""lxg"", ""landau (X) gauss"", t, landau, gauss);; ; // S a m p l e , f i t a n d p l o t c o n v o l u t e d p d f; // ----------------------------------------------------------------------; ; // Sample 1000 events in x from gxlx; std::unique_ptr<RooDataSet> data{lxg.generate(t, 10000)};; ; // Fit gxlx to data; lxg.fitTo(*data, PrintLevel(-1));; ; // Plot data, landau pdf, landau (X) gauss pdf; RooPlot *frame = t.frame(Title(""landau (x) gauss convolution""));; data->plotOn(frame);; lxg.plotOn(frame);; landau.plotOn(frame, LineStyle(kDashed));; ; // Draw frame on canvas; new TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; }; RooDataSet.h; RooFFTConvPdf.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#def",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:3845,Performance,cache,cache,3845,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:4367,Performance,optimiz,optimization,4367,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:4446,Performance,cache,cache,4446,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:4637,Performance,optimiz,optimization,4637,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8C.html:4716,Performance,cache,cache,4716,"Yaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fd9f650 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539fcccee0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf208_convolution.C. tutorialsroofitrf208_convolution.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html
https://root.cern/doc/master/rf208__convolution_8py.html:2407,Availability,error,error,2407," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:1069,Performance,cache,cache,1069,"ence Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf208_convolution.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #208 One-dimensional numeric convolution (require ROOT to be compiled with –enable-fftw3) ; pdf = landau(t) (x) gauss(t). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Construct observable; t = ROOT.RooRealVar(""t"", ""t"", -10, 30); ; # Construct landau(t,ml,sl); ml = ROOT.RooRealVar(""ml"", ""mean landau"", 5.0, -20, 20); sl = ROOT.RooRealVar(""sl"", ""sigma landau"", 1, 0.1, 10); landau = ROOT.RooLandau(""lx"", ""lx"", t, ml, sl); ; # Construct gauss(t,mg,sg); mg = ROOT.RooRealVar(""mg"", ""mg"", 0); sg = ROOT.RooRealVar(""sg"", ""sg"", 2, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", t, mg, sg); ; # Construct convolution pdf; # ---------------------------------------; ; # Set #bins to be used for FFT sampling to 10000; t.setBins(10000, ""cache""); ; # Construct landau (x) gauss; lxg = ROOT.RooFFTConvPdf(""lxg"", ""landau (X) gauss"", t, landau, gauss); ; # Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:1984,Performance,cache,cache,1984," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:2501,Performance,optimiz,optimization,2501," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:2580,Performance,cache,cache,2580," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:2766,Performance,optimiz,optimization,2766," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf208__convolution_8py.html:2845,Performance,cache,cache,2845," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf208__convolution_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html
https://root.cern/doc/master/rf209__anaconv_8C.html:3306,Energy Efficiency,efficient,efficient,3306,"Var bias2(""bias2"", ""bias2"", 0);; RooRealVar sigma2(""sigma2"", ""sigma2"", 5);; RooGaussModel gm2(""gm2"", ""gauss model 2"", dt, bias2, sigma2);; ; // Build a composite resolution model f*gm1+(1-f)*gm2; RooRealVar gm1frac(""gm1frac"", ""fraction of gm1"", 0.5);; RooAddModel gmsum(""gmsum"", ""sum of gm1 and gm2"", RooArgList(gm1, gm2), gm1frac);; ; // Construct decay(t) (x) (f*gm1 + (1-f)*gm2); RooDecay decay_gmsum(""decay_gmsum"", ""decay"", dt, tau, gmsum, RooDecay::DoubleSided);; ; // Plot pdf (red); decay_gmsum.plotOn(frame, LineColor(kRed));; ; // Draw all frames on canvas; new TCanvas(""rf209_anaconv"", ""rf209_anaconv"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; }; RooAddModel.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; RooTruthModel.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAddModelRooAddModel is an efficient implementation of a sum of PDFs of the form.Definition RooAddModel.h:27; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDecaySingle or double sided decay function that can be analytically convolved with any RooResolutionModel ...Definition RooDecay.h:22; RooDecay::DoubleSided@ DoubleSidedDefinition RooDecay.h:25; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; Ro",MatchSource.WIKI,doc/master/rf209__anaconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf209__anaconv_8C.html
https://root.cern/doc/master/rf209__anaconv_8C.html:4064,Modifiability,variab,variable,4064,"t(1.6);; frame->Draw();; }; RooAddModel.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; RooTruthModel.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAddModelRooAddModel is an efficient implementation of a sum of PDFs of the form.Definition RooAddModel.h:27; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDecaySingle or double sided decay function that can be analytically convolved with any RooResolutionModel ...Definition RooDecay.h:22; RooDecay::DoubleSided@ DoubleSidedDefinition RooDecay.h:25; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooTruthModelImplements a RooResolution model that corresponds to a delta function.Definition RooTruthModel.h:21; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf209_anaconvDefinition rf209_anaconv.py:1; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf209_anaconv.C. tutorialsroofitrf209_anaconv.C. ROOT m",MatchSource.WIKI,doc/master/rf209__anaconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf209__anaconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7449,Availability,error,error,7449,"ith bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCach",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9567,Availability,error,error,9567,"nt.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6527,Deployability,integrat,integrator,6527,"finition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7815,Deployability,integrat,integrator,7815,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8045,Deployability,integrat,integrator,8045,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8339,Deployability,integrat,integrator,8339,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8699,Deployability,integrat,integrator,8699,"ion -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a5803",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9060,Deployability,integrat,integrator,9060,"oAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9933,Deployability,integrat,integrator,9933,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10067,Deployability,integrat,integrator,10067,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10297,Deployability,integrat,integrator,10297,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10631,Deployability,integrat,integrator,10631,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10763,Deployability,integrat,integrator,10763,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6527,Integrability,integrat,integrator,6527,"finition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7815,Integrability,integrat,integrator,7815,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8045,Integrability,integrat,integrator,8045,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8339,Integrability,integrat,integrator,8339,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8699,Integrability,integrat,integrator,8699,"ion -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a5803",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9060,Integrability,integrat,integrator,9060,"oAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9933,Integrability,integrat,integrator,9933,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10067,Integrability,integrat,integrator,10067,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10297,Integrability,integrat,integrator,10297,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10631,Integrability,integrat,integrator,10631,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10763,Integrability,integrat,integrator,10763,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:5173,Modifiability,variab,variable,5173,"1.4);; frame1->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooFFTConvPdf.h; RooFormulaVar.h; RooGaussian.h; RooGenericPdf.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cx",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6168,Modifiability,variab,variable,6168,"in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing norma",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:417,Performance,perform,performed,417,". ROOT: tutorials/roofit/rf210_angularconv.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf210_angularconv.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Addition and convolution: convolution in cyclical angular observables theta ; and construction of pdf in terms of transformed angular coordinates, e.g. cos(theta), where the convolution is performed in theta rather than cos(theta); pdf(theta) = T(theta) (x) gauss(theta); pdf(cosTheta) = T(acos(cosTheta)) (x) gauss(acos(cosTheta)); xDouble_t x[n]Definition legend1.C:17; This tutorial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf210_angularconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Define angle psi; RooRealVar psi(""psi"", ""psi"", 0, 3.14159268);; ; // Define physics pdf T(psi); RooGenericPdf Tpsi(""Tpsi"", ""1+sin(2*@0)"", psi);; ; // Define resolution R(psi); RooRealVar gbias(""gbias"", ""gbias"", 0.2, 0., 1);; RooRealVar greso(""greso"", ""greso"", 0.3, 0.1, 1.0);; RooGaussian Rpsi(""Rpsi"", ""Rpsi"", psi, gbias, greso);; ; // Define cos(psi) and function psif that calculates psi from cos(psi); RooRealVar cpsi(""cpsi"", ""cos(psi)"", -1, 1);; RooFormulaVar psif(""psif"", ""acos(cpsi)"", cpsi);; ; // Define physics pdf also as function of cos(psi): T(psif(cpsi)) = T(cpsi) ;; RooGenericPdf Tcpsi(""T"", ""1+sin(2*@0)"", psif);; ; // C o n s t r u c t c o n v o l u t i o n p d f i n p s i; // --------------------------------------------------------------; ; // Define convoluted pdf as function of psi: M=[T(x)R](psi) = M(psi); RooFFTConvPdf Mpsi(""Mf"", ""Mf"", psi, Tpsi, Rpsi);; ; // Set the buffer fraction to zero to obtain a true cyclical convolution; Mpsi.setBuffer",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6324,Performance,cache,cache,6324,"Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation l",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6641,Performance,cache,cache,6641,"finition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6802,Performance,cache,cache,6802,"finition TCanvas.h:23; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf210_angularconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:6989,Performance,cache,cache,6989,"arconvDefinition rf210_angularconv.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(T",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7543,Performance,optimiz,optimization,7543,"ith bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCach",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7621,Performance,cache,cache,7621,"ith bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d599f000 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d59e3f60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCach",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:7948,Performance,optimiz,optimization,7948,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8159,Performance,cache,cache,8159,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8453,Performance,cache,cache,8453,"over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d5fcc4a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCa",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:8814,Performance,cache,cache,8814,"ion -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a5803",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9175,Performance,cache,cache,9175,"oAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a23790 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9661,Performance,optimiz,optimization,9661,"nt.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:9739,Performance,cache,cache,9739,"nt.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10200,Performance,optimiz,optimization,10200,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8C.html:10411,Performance,cache,cache,10411,"Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d79e4210 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x5569d7a58030 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf210_angularconv.C. tutorialsroofitrf210_angularconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8C.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5079,Availability,error,error,5079,"_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::g",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7172,Availability,error,error,7172,"xisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CA",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:4172,Deployability,integrat,integrator,4172,"rame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () wi",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5440,Deployability,integrat,integrator,5440,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5670,Deployability,integrat,integrator,5670,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5959,Deployability,integrat,integrator,5959,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6314,Deployability,integrat,integrator,6314,"ericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf T",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6670,Deployability,integrat,integrator,6670,"NFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7533,Deployability,integrat,integrator,7533,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7667,Deployability,integrat,integrator,7667,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7897,Deployability,integrat,integrator,7897,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:8226,Deployability,integrat,integrator,8226,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:8358,Deployability,integrat,integrator,8358,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:4172,Integrability,integrat,integrator,4172,"rame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () wi",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5440,Integrability,integrat,integrator,5440,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5670,Integrability,integrat,integrator,5670,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5959,Integrability,integrat,integrator,5959,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6314,Integrability,integrat,integrator,6314,"ericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf T",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6670,Integrability,integrat,integrator,6670,"NFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7533,Integrability,integrat,integrator,7533,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7667,Integrability,integrat,integrator,7667,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7897,Integrability,integrat,integrator,7897,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:8226,Integrability,integrat,integrator,8226,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:8358,Integrability,integrat,integrator,8358,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:3813,Modifiability,variab,variable,3813,"ed pdf (cospsi); # --------------------------------------------------------------------------------; ; # Generate some events; data_cpsi = Mcpsi.generate({cpsi}, 10000); ; # set psi constant to exclude to be a parameter of the fit; psi.setConstant(True); ; # Fit convoluted model as function of cos(psi); Mcpsi.fitTo(data_cpsi, PrintLevel=-1); ; # Plot cos(psi) frame with Mf(cpsi); frame2 = cpsi.frame(Title=""Same convolution in psi, in cos(psi)""); data_cpsi.plotOn(frame2); Mcpsi.plotOn(frame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:403,Performance,perform,performed,403,". ROOT: tutorials/roofit/rf210_angularconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf210_angularconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Convolution in cyclical angular observables theta, and construction of p.d.f in terms of transformed angular coordinates, e.g. ; cos(theta), the convolution is performed in theta rather than cos(theta); (require ROOT to be compiled with –enable-fftw3); pdf(theta) = ROOT.T(theta) (x) gauss(theta) pdf(cosTheta) = ROOT.T(acos(cosTheta)) (x) gauss(acos(cosTheta)). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Define angle psi; psi = ROOT.RooRealVar(""psi"", ""psi"", 0, 3.14159268); ; # Define physics p.d.f T(psi); Tpsi = ROOT.RooGenericPdf(""Tpsi"", ""1+sin(2*@0)"", [psi]); ; # Define resolution R(psi); gbias = ROOT.RooRealVar(""gbias"", ""gbias"", 0.2, 0.0, 1); greso = ROOT.RooRealVar(""greso"", ""greso"", 0.3, 0.1, 1.0); Rpsi = ROOT.RooGaussian(""Rpsi"", ""Rpsi"", psi, gbias, greso); ; # Define cos(psi) and function psif that calculates psi from cos(psi); cpsi = ROOT.RooRealVar(""cpsi"", ""cos(psi)"", -1, 1); psif = ROOT.RooFormulaVar(""psif"", ""acos(cpsi)"", [cpsi]); ; # Define physics p.d.f. also as function of cos(psi): T(psif(cpsi)) = T(cpsi); Tcpsi = ROOT.RooGenericPdf(""T"", ""1+sin(2*@0)"", [psif]); ; # Construct convolution pdf in psi; # --------------------------------------------------------------; ; # Define convoluted p.d.f. as function of psi: M=[T(x)R](psi) = M(psi); Mpsi = ROOT.RooFFTConvPdf(""Mf"", ""Mf"", psi, Tpsi, Rpsi); ; # Set the buffer fraction to zero to obtain a ROOT.True cyclical; # convolution; Mpsi.setBufferFraction(0); ; # Sample, fit and plot convoluted pdf (psi); # --------------------------------------------------------------------------------; ; # Generate some events in observable psi; data_psi = Mpsi.generate({psi}, 10000); ; # Fit convoluted model as function of angle psi; Mpsi.fitTo(dat",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:3969,Performance,cache,cache,3969,"ate some events; data_cpsi = Mcpsi.generate({cpsi}, 10000); ; # set psi constant to exclude to be a parameter of the fit; psi.setConstant(True); ; # Fit convoluted model as function of cos(psi); Mcpsi.fitTo(data_cpsi, PrintLevel=-1); ; # Plot cos(psi) frame with Mf(cpsi); frame2 = cpsi.frame(Title=""Same convolution in psi, in cos(psi)""); data_cpsi.plotOn(frame2); Mcpsi.plotOn(frame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:4286,Performance,cache,cache,4286,"rame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () wi",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:4442,Performance,cache,cache,4442,"rame2); ; # Overlay comparison to unsmeared physics p.d.f ROOT.Tf(cpsi); Tcpsi.plotOn(frame2, LineColor=""r""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf210_angularconv"", ""rf210_angularconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () wi",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:4624,Performance,cache,cache,4624,"d.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf210_angularconv.png""); [#1] INFO:Caching -- Changing internal binning of variable 'psi' in FFT 'Mf' from 100 to 930 to improve the precision of the numerical FFT. This can be done manually by setting an additional binning named 'cache'.; [#1] INFO:Eval -- RooRealVar::setRange(psi) new range named 'refrange_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5173,Performance,optimiz,optimization,5173,"_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::g",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5251,Performance,cache,cache,5251,"_fft_Mf' created with bounds [0,3.14159]; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x77ddb60 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7953590 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7b5fca0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::g",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5573,Performance,optimiz,optimization,5573,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:5784,Performance,cache,cache,5784,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6073,Performance,cache,cache,6073,":fitTo(Mf_over_Mf_Int[psi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[psi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7caf5a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) cr",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6429,Performance,cache,cache,6429,"ericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf T",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:6785,Performance,cache,cache,6785,"NFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7ef8390 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[psi]_NORM_psi for nset (psi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f39580 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7266,Performance,optimiz,optimization,7266,"xisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CA",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7344,Performance,cache,cache,7344,"xisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x80caf20 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CA",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:7800,Performance,optimiz,optimization,7800,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf210__angularconv_8py.html:8011,Performance,cache,cache,8011,"umeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7f337a0 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(Mf_over_Mf_Int[cpsi]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_Mf_over_Mf_Int[cpsi]_MfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi] for nset () with code 1 from preexisting content.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Mf_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_Int[psi]) using numeric integrator RooIntegrator1D to calculate Int(psi); [#1] INFO:Caching -- RooAbsCachedPdf::getCache(Mf) creating new cache 0x7e9d680 with pdf Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi for nset (cpsi) with code 0; [#1] INFO:NumericIntegration -- RooRealIntegral::init(Tpsi_CONV_Rpsi_CACHE_Obs[cpsi]_NORM_cpsi_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); [#1] INFO:NumericIntegration -- RooRealIntegral::init(T_Int[cpsi]) using numeric integrator RooIntegrator1D to calculate Int(cpsi); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf210_angularconv.py. tutorialsroofitrf210_angularconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf210__angularconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf210__angularconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9770,Availability,error,error,9770,"h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9960,Availability,error,error,9960,"h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9975,Availability,avail,available,9975,"h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10085,Availability,error,error,10085,"nt accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10100,Availability,avail,available,10100,"nt accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10213,Availability,error,error,10213,"bservable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10228,Availability,avail,available,10228,"bservable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:28980,Availability,error,error,28980,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:28995,Availability,avail,available,28995,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29105,Availability,error,error,29105,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29120,Availability,avail,available,29120,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29233,Availability,error,error,29233,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29248,Availability,avail,available,29248,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:3973,Deployability,integrat,integrated,3973,"RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outs",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:6363,Deployability,integrat,integrator,6363,"itle) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf211_paramconvDefinition rf211_paramconv.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:6504,Deployability,integrat,integrator,6504,"itle) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf211_paramconvDefinition rf211_paramconv.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:7827,Deployability,integrat,integrator,7827,"8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nse",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:7968,Deployability,integrat,integrator,7968,"8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nse",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10586,Deployability,integrat,integrator,10586,"ting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[me",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:11668,Deployability,integrat,integrator,11668,"ver range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prev",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:11809,Deployability,integrat,integrator,11809,"ver range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prev",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:33001,Deployability,integrat,integrator,33001," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:33142,Deployability,integrat,integrator,33142," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:2806,Integrability,interface,interface,2806,"and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Binning(50), YVar(mean, Binning(50)), ConditionalObservables(mean));; hh->SetTitle(""histogram of model(x|mean)"");; hh->SetLineColor(kBlue);; ; // Draw frame on canvas; TCanvas *c = new TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.20);; hh->GetZaxis()->SetTitleOffset(2.5);; hh->Draw(""surf"");; }; d#define d(i)Definition RSha256.hxx:102; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; RooDataHist.h; RooFFTConvPdf.h; RooFormulaVar.h; RooGaussian.h; RooGenericPdf.h; RooPlot.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TH2.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::plotOnRooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAb",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:3973,Integrability,integrat,integrated,3973,"RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outs",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:6363,Integrability,integrat,integrator,6363,"itle) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf211_paramconvDefinition rf211_paramconv.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:6504,Integrability,integrat,integrator,6504,"itle) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf211_paramconvDefinition rf211_paramconv.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:7827,Integrability,integrat,integrator,7827,"8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nse",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:7968,Integrability,integrat,integrator,7968,"8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nse",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9927,Integrability,synchroniz,synchronize,9927,"h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10052,Integrability,synchroniz,synchronize,10052,"nt accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10180,Integrability,synchroniz,synchronize,10180,"bservable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:10586,Integrability,integrat,integrator,10586,"ting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[me",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:11668,Integrability,integrat,integrator,11668,"ver range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prev",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:11809,Integrability,integrat,integrator,11809,"ver range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prev",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:28947,Integrability,synchroniz,synchronize,28947,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29072,Integrability,synchroniz,synchronize,29072,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:29200,Integrability,synchroniz,synchronize,29200,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:33001,Integrability,integrat,integrator,33001," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:33142,Integrability,integrat,integrator,33142," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:4688,Modifiability,variab,variable,4688,"ooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:1191,Performance,cache,cache,1191,"Tutorials. Detailed Description; Addition and convolution: working with a pdf with a convolution operator in terms of a parameter ; This tutorial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH2.h""; using namespace RooFit;; ; void rf211_paramconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Gaussian g(x ; mean,sigma); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", -3, 3);; RooRealVar sigma(""sigma"", ""sigma"", 0.5, 0.1, 10);; RooGaussian modelx(""gx"", ""gx"", x, mean, sigma);; ; // Block function in mean; RooRealVar a(""a"", ""a"", 2, 1, 10);; RooGenericPdf model_mean(""model_mean"", ""abs(mean)<a"", RooArgList(mean, a));; ; // Convolution in mean parameter model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache"");; mean.setBins(50, ""cache"");; RooFFTConvPdf model(""model"", ""model"", mean, modelx, model_mean);; ; // Configure convolution to construct a 2-D cache in (x,mean); // rather than a 1-d cache in mean that needs to be recalculated; // for each value of x; model.setCacheObservables(x);; model.setBufferFraction(1.0);; ; // Integrate model over mean projModel = Int model dmean; RooAbsPdf *projModel = model.createProjection(mean);; ; // Generate 1000 toy events; std::unique_ptr<RooDataHist> d{projModel->generateBinned(x, 1000)};; ; // Fit pdf to toy data; projModel->fitTo(*d, Verbose(), PrintLevel(-1));; ; // Plot data and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Binning(50), YVar(mean, Binning(50)), ConditionalObservables(mean));; hh->SetTitle(""histogram of model(x|mean)"");; hh->SetLineColor(kBlue);; ; // Draw frame on canvas; TCanvas *c = new TCanvas(",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:1219,Performance,cache,cache,1219,"orial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH2.h""; using namespace RooFit;; ; void rf211_paramconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Gaussian g(x ; mean,sigma); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", -3, 3);; RooRealVar sigma(""sigma"", ""sigma"", 0.5, 0.1, 10);; RooGaussian modelx(""gx"", ""gx"", x, mean, sigma);; ; // Block function in mean; RooRealVar a(""a"", ""a"", 2, 1, 10);; RooGenericPdf model_mean(""model_mean"", ""abs(mean)<a"", RooArgList(mean, a));; ; // Convolution in mean parameter model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache"");; mean.setBins(50, ""cache"");; RooFFTConvPdf model(""model"", ""model"", mean, modelx, model_mean);; ; // Configure convolution to construct a 2-D cache in (x,mean); // rather than a 1-d cache in mean that needs to be recalculated; // for each value of x; model.setCacheObservables(x);; model.setBufferFraction(1.0);; ; // Integrate model over mean projModel = Int model dmean; RooAbsPdf *projModel = model.createProjection(mean);; ; // Generate 1000 toy events; std::unique_ptr<RooDataHist> d{projModel->generateBinned(x, 1000)};; ; // Fit pdf to toy data; projModel->fitTo(*d, Verbose(), PrintLevel(-1));; ; // Plot data and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Binning(50), YVar(mean, Binning(50)), ConditionalObservables(mean));; hh->SetTitle(""histogram of model(x|mean)"");; hh->SetLineColor(kBlue);; ; // Draw frame on canvas; TCanvas *c = new TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:1341,Performance,cache,cache,1341,"orial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH2.h""; using namespace RooFit;; ; void rf211_paramconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Gaussian g(x ; mean,sigma); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", -3, 3);; RooRealVar sigma(""sigma"", ""sigma"", 0.5, 0.1, 10);; RooGaussian modelx(""gx"", ""gx"", x, mean, sigma);; ; // Block function in mean; RooRealVar a(""a"", ""a"", 2, 1, 10);; RooGenericPdf model_mean(""model_mean"", ""abs(mean)<a"", RooArgList(mean, a));; ; // Convolution in mean parameter model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache"");; mean.setBins(50, ""cache"");; RooFFTConvPdf model(""model"", ""model"", mean, modelx, model_mean);; ; // Configure convolution to construct a 2-D cache in (x,mean); // rather than a 1-d cache in mean that needs to be recalculated; // for each value of x; model.setCacheObservables(x);; model.setBufferFraction(1.0);; ; // Integrate model over mean projModel = Int model dmean; RooAbsPdf *projModel = model.createProjection(mean);; ; // Generate 1000 toy events; std::unique_ptr<RooDataHist> d{projModel->generateBinned(x, 1000)};; ; // Fit pdf to toy data; projModel->fitTo(*d, Verbose(), PrintLevel(-1));; ; // Plot data and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Binning(50), YVar(mean, Binning(50)), ConditionalObservables(mean));; hh->SetTitle(""histogram of model(x|mean)"");; hh->SetLineColor(kBlue);; ; // Draw frame on canvas; TCanvas *c = new TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:1381,Performance,cache,cache,1381,"orial requires FFT3 to be enabled. ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooGenericPdf.h""; #include ""RooFormulaVar.h""; #include ""RooFFTConvPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH2.h""; using namespace RooFit;; ; void rf211_paramconv(); {; // S e t u p c o m p o n e n t p d f s; // ---------------------------------------; ; // Gaussian g(x ; mean,sigma); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean"", -3, 3);; RooRealVar sigma(""sigma"", ""sigma"", 0.5, 0.1, 10);; RooGaussian modelx(""gx"", ""gx"", x, mean, sigma);; ; // Block function in mean; RooRealVar a(""a"", ""a"", 2, 1, 10);; RooGenericPdf model_mean(""model_mean"", ""abs(mean)<a"", RooArgList(mean, a));; ; // Convolution in mean parameter model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache"");; mean.setBins(50, ""cache"");; RooFFTConvPdf model(""model"", ""model"", mean, modelx, model_mean);; ; // Configure convolution to construct a 2-D cache in (x,mean); // rather than a 1-d cache in mean that needs to be recalculated; // for each value of x; model.setCacheObservables(x);; model.setBufferFraction(1.0);; ; // Integrate model over mean projModel = Int model dmean; RooAbsPdf *projModel = model.createProjection(mean);; ; // Generate 1000 toy events; std::unique_ptr<RooDataHist> d{projModel->generateBinned(x, 1000)};; ; // Fit pdf to toy data; projModel->fitTo(*d, Verbose(), PrintLevel(-1));; ; // Plot data and fitted pdf; RooPlot *frame = x.frame(Bins(25));; d->plotOn(frame);; projModel->plotOn(frame);; ; // Make 2d histogram of model(x;mean); TH1 *hh = model.createHistogram(""hh"", x, Binning(50), YVar(mean, Binning(50)), ConditionalObservables(mean));; hh->SetTitle(""histogram of model(x|mean)"");; hh->SetLineColor(kBlue);; ; // Draw frame on canvas; TCanvas *c = new TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:7412,Performance,cache,cache,7412,"init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161cfe9e60 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.5367",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:8876,Performance,cache,cache,8876,"it(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::syn",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9278,Performance,cache,cache,9278,"[7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:9864,Performance,optimiz,optimization,9864,"h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161eb090f0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:11494,Performance,cache,cache,11494,"ver range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161c4fa860 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prev",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:32678,Performance,optimiz,optimization,32678,", s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:33961,Performance,cache,cache,33961,"val -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x for nset (x) with code 3 from preexisting content.; DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf211_paramconv.C. tutorialsroofitrf211_paramconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8C.html:34363,Performance,cache,cache,34363,"val -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x56161efde710 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x for nset (x) with code 3 from preexisting content.; DateApril 2009 ; AuthorWouter Verkerke ; Definition in file rf211_paramconv.C. tutorialsroofitrf211_paramconv.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf211__paramconv_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6000,Availability,error,error,6000,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6190,Availability,error,error,6190,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6205,Availability,avail,available,6205,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6315,Availability,error,error,6315," decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6330,Availability,avail,available,6330," decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6443,Availability,error,error,6443,"the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6458,Availability,avail,available,6458,"the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25205,Availability,error,error,25205,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25220,Availability,avail,available,25220,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25330,Availability,error,error,25330,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25345,Availability,avail,available,25345,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25458,Availability,error,error,25458,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25473,Availability,avail,available,25473,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:2608,Deployability,integrat,integrator,2608,", Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); ; c.SaveAs(""rf211_paramconv.png""); [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:2749,Deployability,integrat,integrator,2749,", Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); ; c.SaveAs(""rf211_paramconv.png""); [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:4067,Deployability,integrat,integrator,4067," = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:4208,Deployability,integrat,integrator,4208," = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6816,Deployability,integrat,integrator,6816,"ting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:7893,Deployability,integrat,integrator,7893," over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prevFC",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:8034,Deployability,integrat,integrator,8034," over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prevFC",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:29226,Deployability,integrat,integrator,29226," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:29367,Deployability,integrat,integrator,29367," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:2608,Integrability,integrat,integrator,2608,", Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); ; c.SaveAs(""rf211_paramconv.png""); [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:2749,Integrability,integrat,integrator,2749,", Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); ; c.SaveAs(""rf211_paramconv.png""); [#1] INFO:Eval -- RooRealVar::setRange(mean) new range named 'refrange_fft_model' created with bounds [-3,3]; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:4067,Integrability,integrat,integrator,4067," = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:4208,Integrability,integrat,integrator,4208," = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6157,Integrability,synchroniz,synchronize,6157,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6282,Integrability,synchroniz,synchronize,6282," decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.0078",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6410,Integrability,synchroniz,synchronize,6410,"the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6816,Integrability,integrat,integrator,6816,"ting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:7893,Integrability,integrat,integrator,7893," over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prevFC",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:8034,Integrability,integrat,integrator,8034," over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prevFC",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25172,Integrability,synchroniz,synchronize,25172,"h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25297,Integrability,synchroniz,synchronize,25297,"-- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.45",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:25425,Integrability,synchroniz,synchronize,25425,"[2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 mean=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.1921; ; prevFCN = 2171.25988 a=2.017, ; prevFCN = 2171.25988 a=1.983, ; prevFCN = 2171.25988 a=2.172, ; prevFCN = 2171.691427 a=1.84, [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 3.375; [7] h = 0.0002441 , s = 3.562; [8] h = 6.104e-05 , s = 3.656; [9] h = 1.526e-05 , s = 3.703; [10] h = 3.815e-06 , s = 3.68; [11] h = 9.537e-07 , s = 3.691; [12] h = 2.384e-07 , s = 3.686; [13] h = 5.96e-08 , s = 3.683; [14] h = 1.49e-08 , s = 3.681; [15] h = 3.725e-09 , s = 3.68; [16] h = 9.313e-10 , s = 3.68; [17] h = 2.328e-10 , s = 3.68; [18] h = 5.821e-11 , s = 3.68; [19] h = 1.455e-11 , s = 3.68; [20] h = 3.638e-12 , s = 3.68; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_me",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:29226,Integrability,integrat,integrator,29226," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:29367,Integrability,integrat,integrator,29367," [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:962,Performance,cache,cache,962,". ROOT: tutorials/roofit/rf211_paramconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf211_paramconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #211 Working a with a p.d.f. ; with a convolution operator in terms of a parameter; (require ROOT to be compiled with –enable-fftw3). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Gaussian g(x ; mean,sigma); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, 3); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.5, 0.1, 10); modelx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Block function in mean; a = ROOT.RooRealVar(""a"", ""a"", 2, 1, 10); model_mean = ROOT.RooGenericPdf(""model_mean"", ""abs(mean)<a"", [mean, a]); ; # Convolution in mean model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache""); mean.setBins(50, ""cache""); model = ROOT.RooFFTConvPdf(""model"", ""model"", mean, modelx, model_mean); ; # Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x; model.setCacheObservables({x}); model.setBufferFraction(1.0); ; # Integrate model over projModel = Int model dmean; projModel = model.createProjection({mean}); ; # Generate 1000 toy events; d = projModel.generateBinned({x}, 1000); ; # Fit p.d.f. to toy data; projModel.fitTo(d, Verbose=True, PrintLevel=-1); ; # Plot data and fitted p.d.f.; frame = x.frame(Bins=25); d.plotOn(frame); projModel.plotOn(frame); ; # Make 2d histogram of model(x;mean); hh = model.createHistogram(; ""hh"",; x,; Binning=50,; YVar=dict(var=mean, Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargi",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:989,Performance,cache,cache,989,". ROOT: tutorials/roofit/rf211_paramconv.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf211_paramconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #211 Working a with a p.d.f. ; with a convolution operator in terms of a parameter; (require ROOT to be compiled with –enable-fftw3). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Gaussian g(x ; mean,sigma); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, 3); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.5, 0.1, 10); modelx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Block function in mean; a = ROOT.RooRealVar(""a"", ""a"", 2, 1, 10); model_mean = ROOT.RooGenericPdf(""model_mean"", ""abs(mean)<a"", [mean, a]); ; # Convolution in mean model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache""); mean.setBins(50, ""cache""); model = ROOT.RooFFTConvPdf(""model"", ""model"", mean, modelx, model_mean); ; # Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x; model.setCacheObservables({x}); model.setBufferFraction(1.0); ; # Integrate model over projModel = Int model dmean; projModel = model.createProjection({mean}); ; # Generate 1000 toy events; d = projModel.generateBinned({x}, 1000); ; # Fit p.d.f. to toy data; projModel.fitTo(d, Verbose=True, PrintLevel=-1); ; # Plot data and fitted p.d.f.; frame = x.frame(Bins=25); d.plotOn(frame); projModel.plotOn(frame); ; # Make 2d histogram of model(x;mean); hh = model.createHistogram(; ""hh"",; x,; Binning=50,; YVar=dict(var=mean, Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargi",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:1115,Performance,cache,cache,1115,"ching...; No Matches. Namespaces ; rf211_paramconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #211 Working a with a p.d.f. ; with a convolution operator in terms of a parameter; (require ROOT to be compiled with –enable-fftw3). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Gaussian g(x ; mean,sigma); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, 3); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.5, 0.1, 10); modelx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Block function in mean; a = ROOT.RooRealVar(""a"", ""a"", 2, 1, 10); model_mean = ROOT.RooGenericPdf(""model_mean"", ""abs(mean)<a"", [mean, a]); ; # Convolution in mean model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache""); mean.setBins(50, ""cache""); model = ROOT.RooFFTConvPdf(""model"", ""model"", mean, modelx, model_mean); ; # Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x; model.setCacheObservables({x}); model.setBufferFraction(1.0); ; # Integrate model over projModel = Int model dmean; projModel = model.createProjection({mean}); ; # Generate 1000 toy events; d = projModel.generateBinned({x}, 1000); ; # Fit p.d.f. to toy data; projModel.fitTo(d, Verbose=True, PrintLevel=-1); ; # Plot data and fitted p.d.f.; frame = x.frame(Bins=25); d.plotOn(frame); projModel.plotOn(frame); ; # Make 2d histogram of model(x;mean); hh = model.createHistogram(; ""hh"",; x,; Binning=50,; YVar=dict(var=mean, Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetT",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:1154,Performance,cache,cache,1154,"ching...; No Matches. Namespaces ; rf211_paramconv.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'ADDITION AND CONVOLUTION' RooFit tutorial macro #211 Working a with a p.d.f. ; with a convolution operator in terms of a parameter; (require ROOT to be compiled with –enable-fftw3). ; import ROOT; ; # Set up component pdfs; # ---------------------------------------; ; # Gaussian g(x ; mean,sigma); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); mean = ROOT.RooRealVar(""mean"", ""mean"", -3, 3); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 0.5, 0.1, 10); modelx = ROOT.RooGaussian(""gx"", ""gx"", x, mean, sigma); ; # Block function in mean; a = ROOT.RooRealVar(""a"", ""a"", 2, 1, 10); model_mean = ROOT.RooGenericPdf(""model_mean"", ""abs(mean)<a"", [mean, a]); ; # Convolution in mean model = g(x,mean,sigma) (x) block(mean); x.setBins(1000, ""cache""); mean.setBins(50, ""cache""); model = ROOT.RooFFTConvPdf(""model"", ""model"", mean, modelx, model_mean); ; # Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x; model.setCacheObservables({x}); model.setBufferFraction(1.0); ; # Integrate model over projModel = Int model dmean; projModel = model.createProjection({mean}); ; # Generate 1000 toy events; d = projModel.generateBinned({x}, 1000); ; # Fit p.d.f. to toy data; projModel.fitTo(d, Verbose=True, PrintLevel=-1); ; # Plot data and fitted p.d.f.; frame = x.frame(Bins=25); d.plotOn(frame); projModel.plotOn(frame); ; # Make 2d histogram of model(x;mean); hh = model.createHistogram(; ""hh"",; x,; Binning=50,; YVar=dict(var=mean, Binning=50),; ConditionalObservables={mean},; ); hh.SetTitle(""histogram of model(x|mean)""); hh.SetLineColor(ROOT.kBlue); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf211_paramconv"", ""rf211_paramconv"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetT",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:3657,Performance,cache,cache,3657,"::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7937fb0 with pdf gx_CONV_model_mean_CACHE_Obs[mean,x]_NORM_mean for nset (mean) with code 0; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:5116,Performance,cache,cache,5116,"init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchroniz",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:5513,Performance,cache,cache,5513,"4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution '",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:6094,Performance,optimiz,optimization,6094,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:7724,Performance,cache,cache,7724," over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x85075d0 with pdf gx_CONV_model_mean_CACHE_Obs[mean] for nset () with code 2; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.015625 , s = 4.5; [5] h = 0.00390625 , s = 3.75; [6] h = 0.000976562 , s = 4.125; [7] h = 0.000244141 , s = 3.9375; [8] h = 6.10352e-05 , s = 4.03125; [9] h = 1.52588e-05 , s = 3.98438; [10] h = 3.8147e-06 , s = 4.00781; [11] h = 9.53674e-07 , s = 3.99609; [12] h = 2.38419e-07 , s = 4.00195; [13] h = 5.96046e-08 , s = 3.99902; [14] h = 1.49012e-08 , s = 4.00049; [15] h = 3.72529e-09 , s = 3.99976; [16] h = 9.31323e-10 , s = 4.00012; [17] h = 2.32831e-10 , s = 3.99994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; ; prevFCN = 2171.275755 a=2.017, ; prevFCN = 2171.275755 a=1.983, ; prevFC",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:28903,Performance,optimiz,optimization,28903,", s = 4; [20] h = 3.638e-12 , s = 4; [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; ; prevFCN = 2171.25988 mean=-1.438, ; prevFCN = 2171.25988 mean=1.465, ; prevFCN = 2171.25988 mean=-1.465, ; prevFCN = 2171.25988 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; mean=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:30186,Performance,cache,cache,30186,"ion 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8da99c0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x for nset (x) with code 3 from preexisting content.; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf211_paramconv.py. tutorialsroofitrf211_paramconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf211__paramconv_8py.html:30583,Performance,cache,cache,30583,"ion 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gx_Int[mean,x]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral of model_mean over range (-6,6) did not converge after 20 steps; [1] h = 1 , s = 0; [2] h = 0.25 , s = 6; [3] h = 0.0625 , s = 3; [4] h = 0.01562 , s = 4.5; [5] h = 0.003906 , s = 3.75; [6] h = 0.0009766 , s = 4.125; [7] h = 0.0002441 , s = 3.938; [8] h = 6.104e-05 , s = 4.031; [9] h = 1.526e-05 , s = 3.984; [10] h = 3.815e-06 , s = 4.008; [11] h = 9.537e-07 , s = 3.996; [12] h = 2.384e-07 , s = 4.002; [13] h = 5.96e-08 , s = 3.999; [14] h = 1.49e-08 , s = 4; [15] h = 3.725e-09 , s = 4; [16] h = 9.313e-10 , s = 4; [17] h = 2.328e-10 , s = 4; [18] h = 5.821e-11 , s = 4; [19] h = 1.455e-11 , s = 4; [20] h = 3.638e-12 , s = 4; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8a2bb50 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x8da99c0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x for nset (x) with code 3 from preexisting content.; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf211_paramconv.py. tutorialsroofitrf211_paramconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf211__paramconv_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:7617,Availability,error,error,7617,"Fit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf212_plottingInRanges_blindingDefinition rf212_plottingInRanges_blinding.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; Now plotting with unique normalisation for each slice.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; ; ; Now plotting with correct norm ranges:; [#1] INFO:Plo",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:3743,Deployability,integrat,integrated,3743,"g is included in the normalisation calculation. The PDF therefore; // comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; std::cout << ""Now plotting with unique normalisation for each slice."" << std::endl;; canvas->cd(1);; RooPlot* plotFrame = x.frame(RooFit::Title(""Wrong: Each slice normalised over its plotting range""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrame);; expo.plotOn(plotFrame, LineColor(kRed), Range(""full""));; expo.plotOn(plotFrame, LineColor(kBlue), Range(""left""));; expo.plotOn(plotFrame, LineColor(kGreen), Range(""right""));; ; plotFrame->Draw();; ; // Right:; // ----------------------------------------------------------------------------------------------------------; // Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; // a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; // This means that the normalisation of the blue and green curves is slightly different from the left plot,; // because they get a common scale factor.; ; std::cout << ""\n\nNow plotting with correct norm ranges:"" << std::endl;; canvas->cd(2);; RooPlot* plotFrameWithNormRange = x.frame(RooFit::Title(""Right: All slices have common normalisation""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrameWithNormRange);; expo.plotOn(plotFrameWithNormRange, LineColor(kBlue), Range(""left""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kGreen), Range(""right""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kRed), Range(""full""), RooFit::NormRange(""left,right""), LineStyle(10));; ; plotFrameWithNormRange->Draw();; ; canvas->Draw();; ; }; RooDataSet.h; RooExponential.h; RooPlot.h; RooRealVar",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:1534,Energy Efficiency,reduce,reduce,1534," signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange().; Thanks to Marc Escalier for asking how to do this correctly. ; #include <RooDataSet.h>; #include <RooExponential.h>; #include <RooPlot.h>; #include <RooRealVar.h>; #include <TCanvas.h>; ; using namespace RooFit;; ; void rf212_plottingInRanges_blinding(); {; // Make a fit model; RooRealVar x(""x"", ""The observable"", 1, 30);; RooRealVar tau(""tau"", ""The exponent"", -0.1337, -10., -0.1);; RooExponential expo(""expo"", ""A falling exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would; // be automatically taken as the NormRange() for plotting. We want to avoid; // this, because the point of this tutorial is to show what can go wrong when; // the NormRange() is not specified.; expo.removeStringAttribute(""fitrange"");; ; ; // Here we will plot the results; TCanvas *canvas=new TCanvas(""canvas"",""canvas"",800,600);; canvas->Divide(2,1);; ; ; // Wrong:; // ----------------------------------------------------------------------------------------------------------; // Plott",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:1863,Energy Efficiency,adapt,adapt,1863,"anks to Marc Escalier for asking how to do this correctly. ; #include <RooDataSet.h>; #include <RooExponential.h>; #include <RooPlot.h>; #include <RooRealVar.h>; #include <TCanvas.h>; ; using namespace RooFit;; ; void rf212_plottingInRanges_blinding(); {; // Make a fit model; RooRealVar x(""x"", ""The observable"", 1, 30);; RooRealVar tau(""tau"", ""The exponent"", -0.1337, -10., -0.1);; RooExponential expo(""expo"", ""A falling exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would; // be automatically taken as the NormRange() for plotting. We want to avoid; // this, because the point of this tutorial is to show what can go wrong when; // the NormRange() is not specified.; expo.removeStringAttribute(""fitrange"");; ; ; // Here we will plot the results; TCanvas *canvas=new TCanvas(""canvas"",""canvas"",800,600);; canvas->Divide(2,1);; ; ; // Wrong:; // ----------------------------------------------------------------------------------------------------------; // Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; // that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; // co",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:3822,Energy Efficiency,green,green,3822,"e bands, which are normalised to ""their"" data.; ; std::cout << ""Now plotting with unique normalisation for each slice."" << std::endl;; canvas->cd(1);; RooPlot* plotFrame = x.frame(RooFit::Title(""Wrong: Each slice normalised over its plotting range""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrame);; expo.plotOn(plotFrame, LineColor(kRed), Range(""full""));; expo.plotOn(plotFrame, LineColor(kBlue), Range(""left""));; expo.plotOn(plotFrame, LineColor(kGreen), Range(""right""));; ; plotFrame->Draw();; ; // Right:; // ----------------------------------------------------------------------------------------------------------; // Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; // a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; // This means that the normalisation of the blue and green curves is slightly different from the left plot,; // because they get a common scale factor.; ; std::cout << ""\n\nNow plotting with correct norm ranges:"" << std::endl;; canvas->cd(2);; RooPlot* plotFrameWithNormRange = x.frame(RooFit::Title(""Right: All slices have common normalisation""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrameWithNormRange);; expo.plotOn(plotFrameWithNormRange, LineColor(kBlue), Range(""left""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kGreen), Range(""right""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kRed), Range(""full""), RooFit::NormRange(""left,right""), LineStyle(10));; ; plotFrameWithNormRange->Draw();; ; canvas->Draw();; ; }; RooDataSet.h; RooExponential.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TCanvas.h; dataOption_t O",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:3743,Integrability,integrat,integrated,3743,"g is included in the normalisation calculation. The PDF therefore; // comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; std::cout << ""Now plotting with unique normalisation for each slice."" << std::endl;; canvas->cd(1);; RooPlot* plotFrame = x.frame(RooFit::Title(""Wrong: Each slice normalised over its plotting range""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrame);; expo.plotOn(plotFrame, LineColor(kRed), Range(""full""));; expo.plotOn(plotFrame, LineColor(kBlue), Range(""left""));; expo.plotOn(plotFrame, LineColor(kGreen), Range(""right""));; ; plotFrame->Draw();; ; // Right:; // ----------------------------------------------------------------------------------------------------------; // Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; // a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; // This means that the normalisation of the blue and green curves is slightly different from the left plot,; // because they get a common scale factor.; ; std::cout << ""\n\nNow plotting with correct norm ranges:"" << std::endl;; canvas->cd(2);; RooPlot* plotFrameWithNormRange = x.frame(RooFit::Title(""Right: All slices have common normalisation""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData->plotOn(plotFrameWithNormRange);; expo.plotOn(plotFrameWithNormRange, LineColor(kBlue), Range(""left""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kGreen), Range(""right""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kRed), Range(""full""), RooFit::NormRange(""left,right""), LineStyle(10));; ; plotFrameWithNormRange->Draw();; ; canvas->Draw();; ; }; RooDataSet.h; RooExponential.h; RooPlot.h; RooRealVar",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:1863,Modifiability,adapt,adapt,1863,"anks to Marc Escalier for asking how to do this correctly. ; #include <RooDataSet.h>; #include <RooExponential.h>; #include <RooPlot.h>; #include <RooRealVar.h>; #include <TCanvas.h>; ; using namespace RooFit;; ; void rf212_plottingInRanges_blinding(); {; // Make a fit model; RooRealVar x(""x"", ""The observable"", 1, 30);; RooRealVar tau(""tau"", ""The exponent"", -0.1337, -10., -0.1);; RooExponential expo(""expo"", ""A falling exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would; // be automatically taken as the NormRange() for plotting. We want to avoid; // this, because the point of this tutorial is to show what can go wrong when; // the NormRange() is not specified.; expo.removeStringAttribute(""fitrange"");; ; ; // Here we will plot the results; TCanvas *canvas=new TCanvas(""canvas"",""canvas"",800,600);; canvas->Divide(2,1);; ; ; // Wrong:; // ----------------------------------------------------------------------------------------------------------; // Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; // that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; // co",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:5331,Modifiability,variab,variable,5331,"expo.plotOn(plotFrameWithNormRange, LineColor(kBlue), Range(""left""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kGreen), Range(""right""), RooFit::NormRange(""left,right""));; expo.plotOn(plotFrameWithNormRange, LineColor(kRed), Range(""full""), RooFit::NormRange(""left,right""), LineStyle(10));; ; plotFrameWithNormRange->Draw();; ; canvas->Draw();; ; }; RooDataSet.h; RooExponential.h; RooPlot.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; RooExponentialExponential PDF.Definition RooExponential.h:22; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; TCanvas::Drawvoid Draw(Option_t *option="""") overrideDraw a canvas.Definition TCanvas.cxx:854; TCanvas::cdTVirtualPad * cd(Int_t subpadnumber=0) overrideSet current canvas & pad.Definition TCanvas.cxx:719; TPad::Dividevoid Divide(Int_t nx=1, Int_t ny=1, Float_t xmargin=0.01, Float_t ymargin=0.01, Int_t color=0) overrideAutomatic pad generation by division.Definition TPad.cxx:1249; RooFit::TitleRooCmdArg Title(const char *name)Definition RooGlobalFunc.cxx:543; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::NormRangeRooCmdArg NormRange(const char *rangeNameList)Definition RooG",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:7711,Performance,optimiz,optimization,7711,"Fit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf212_plottingInRanges_blindingDefinition rf212_plottingInRanges_blinding.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; Now plotting with unique normalisation for each slice.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; ; ; Now plotting with correct norm ranges:; [#1] INFO:Plo",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:7808,Performance,optimiz,optimization,7808,"Fit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf212_plottingInRanges_blindingDefinition rf212_plottingInRanges_blinding.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; Now plotting with unique normalisation for each slice.; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; ; ; Now plotting with correct norm ranges:; [#1] INFO:Plo",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html:2142,Safety,avoid,avoid,2142,"ng exponential function"", x, tau);; ; // Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30);; x.setRange(""left"", 1, 10);; x.setRange(""right"", 20, 30);; ; // Generate toy data, and cut out the blinded region.; std::unique_ptr<RooDataSet> data{expo.generate(x, 1000)};; std::unique_ptr<RooAbsData> blindedData{data->reduce(CutRange(""left,right""))};; ; // Kick tau a bit, and run an unbinned fit where the blinded data are missing.; // ----------------------------------------------------------------------------------------------------------; // The fit should be done only in the unblinded regions, otherwise it would; // try to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.);; expo.fitTo(*blindedData, Range(""left,right""), PrintLevel(-1));; ; // Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would; // be automatically taken as the NormRange() for plotting. We want to avoid; // this, because the point of this tutorial is to show what can go wrong when; // the NormRange() is not specified.; expo.removeStringAttribute(""fitrange"");; ; ; // Here we will plot the results; TCanvas *canvas=new TCanvas(""canvas"",""canvas"",800,600);; canvas->Divide(2,1);; ; ; // Wrong:; // ----------------------------------------------------------------------------------------------------------; // Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; // that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; // comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; std::cout << ""Now plotting with unique normalisation for each slice."" << std::endl;; canvas->cd(1);; RooPlot* plotFrame = x.frame(RooFit::Title(""Wrong: Each slice normalised over its plotting range""));; ; // Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands;",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8C.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:5133,Availability,error,error,5133,"left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalized using explicit choice of ranges 'left,right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalize",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:3384,Deployability,integrat,integrated,3384,"urve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; print(""Now plotting with unique normalisation for each slice.\n""); canvas.cd(1); plotFrame = x.frame(Title=""Wrong: Each slice normalised over its plotting range""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrame); expo.plotOn(plotFrame, LineColor=""r"", Range=""full""); expo.plotOn(plotFrame, LineColor=""b"", Range=""left""); expo.plotOn(plotFrame, LineColor=""g"", Range=""right""); ; plotFrame.Draw(); ; # Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.; ; print(""\n\nNow plotting with correct norm ranges:\n""); canvas.cd(2); plotFrameWithNormRange = x.frame(Title=""Right: All slices have common normalisation""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrameWithNormRange); expo.plotOn(plotFrameWithNormRange, LineColor=""b"", Range=""left"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""g"", Range=""right"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:1265,Energy Efficiency,reduce,reduce,1265,"ion right. ; Usually, when comparing a fit to data, one should first plot the data, and then the PDF. In this case, the PDF is automatically normalised to match the number of data events in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange(). ; import ROOT; ; # Make a fit model; x = ROOT.RooRealVar(""x"", ""The observable"", 1, 30); tau = ROOT.RooRealVar(""tau"", ""The exponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAttribute(""fitrange""); ; ; # Here we will plot the results; canvas = ROOT.TCanvas(""canvas"", ""canvas"", 800, 600); canvas.Divide(2, 1); ; ; # Wrong:; # ----------------------------------------------------------------------------------------------------------; # Plotting each slice on its own normalises the PDF over its pl",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:1587,Energy Efficiency,adapt,adapt,1587,"ts in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange(). ; import ROOT; ; # Make a fit model; x = ROOT.RooRealVar(""x"", ""The observable"", 1, 30); tau = ROOT.RooRealVar(""tau"", ""The exponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAttribute(""fitrange""); ; ; # Here we will plot the results; canvas = ROOT.TCanvas(""canvas"", ""canvas"", 800, 600); canvas.Divide(2, 1); ; ; # Wrong:; # ----------------------------------------------------------------------------------------------------------; # Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and ",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:3462,Energy Efficiency,green,green,3462,"mes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; print(""Now plotting with unique normalisation for each slice.\n""); canvas.cd(1); plotFrame = x.frame(Title=""Wrong: Each slice normalised over its plotting range""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrame); expo.plotOn(plotFrame, LineColor=""r"", Range=""full""); expo.plotOn(plotFrame, LineColor=""b"", Range=""left""); expo.plotOn(plotFrame, LineColor=""g"", Range=""right""); ; plotFrame.Draw(); ; # Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.; ; print(""\n\nNow plotting with correct norm ranges:\n""); canvas.cd(2); plotFrameWithNormRange = x.frame(Title=""Right: All slices have common normalisation""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrameWithNormRange); expo.plotOn(plotFrameWithNormRange, LineColor=""b"", Range=""left"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""g"", Range=""right"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) n",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:3384,Integrability,integrat,integrated,3384,"urve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; print(""Now plotting with unique normalisation for each slice.\n""); canvas.cd(1); plotFrame = x.frame(Title=""Wrong: Each slice normalised over its plotting range""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrame); expo.plotOn(plotFrame, LineColor=""r"", Range=""full""); expo.plotOn(plotFrame, LineColor=""b"", Range=""left""); expo.plotOn(plotFrame, LineColor=""g"", Range=""right""); ; plotFrame.Draw(); ; # Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.; ; print(""\n\nNow plotting with correct norm ranges:\n""); canvas.cd(2); plotFrameWithNormRange = x.frame(Title=""Right: All slices have common normalisation""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrameWithNormRange); expo.plotOn(plotFrameWithNormRange, LineColor=""b"", Range=""left"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""g"", Range=""right"", NormRange=""left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:1587,Modifiability,adapt,adapt,1587,"ts in the plot. However, when plotting only a sub-range, when e.g. a signal region has to be blinded, one has to exclude the blinded region from the computation of the normalisation.; In this tutorial, we show how to explicitly choose the normalisation when plotting using NormRange(). ; import ROOT; ; # Make a fit model; x = ROOT.RooRealVar(""x"", ""The observable"", 1, 30); tau = ROOT.RooRealVar(""tau"", ""The exponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAttribute(""fitrange""); ; ; # Here we will plot the results; canvas = ROOT.TCanvas(""canvas"", ""canvas"", 800, 600); canvas.Divide(2, 1); ; ; # Wrong:; # ----------------------------------------------------------------------------------------------------------; # Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and ",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:5227,Performance,optimiz,optimization,5227,"left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalized using explicit choice of ranges 'left,right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalize",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:5324,Performance,optimiz,optimization,5324,"left,right""); expo.plotOn(plotFrameWithNormRange, LineColor=""r"", Range=""full"", NormRange=""left,right"", LineStyle=10); ; plotFrameWithNormRange.Draw(); ; canvas.Draw(); ; canvas.SaveAs(""rf212_plottingInRanges_blinding.png""); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'full' created with bounds [1,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [20,30]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_left' created with bounds [1,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_expo_expoData_right' created with bounds [20,30]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(expo_over_expo_Int[x|left,right]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_expo_over_expo_Int[x|left,right]_expoData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'full', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right', curve is normalized to data in given range; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'left'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalized using explicit choice of ranges 'left,right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) only plotting range 'right'; [#1] INFO:Plotting -- RooAbsPdf::plotOn(expo) p.d.f. curve is normalize",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html:1860,Safety,avoid,avoid,1860,"ponent"", -0.1337, -10.0, -0.1); expo = ROOT.RooExponential(""expo"", ""A falling exponential function"", x, tau); ; # Define the sidebands (e.g. background regions); x.setRange(""full"", 1, 30); x.setRange(""left"", 1, 10); x.setRange(""right"", 20, 30); ; # Generate toy data, and cut out the blinded region.; data = expo.generate(x, 1000); blindedData = data.reduce(CutRange=""left,right""); ; # Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.; tau.setVal(-2.0); expo.fitTo(blindedData, Range=""left,right"", PrintLevel=-1); ; # Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.; expo.removeStringAttribute(""fitrange""); ; ; # Here we will plot the results; canvas = ROOT.TCanvas(""canvas"", ""canvas"", 800, 600); canvas.Divide(2, 1); ; ; # Wrong:; # ----------------------------------------------------------------------------------------------------------; # Plotting each slice on its own normalises the PDF over its plotting range. For the full curve, that means; # that the blinded region where data is missing is included in the normalisation calculation. The PDF therefore; # comes out too low, and doesn't match up with the slices in the side bands, which are normalised to ""their"" data.; ; print(""Now plotting with unique normalisation for each slice.\n""); canvas.cd(1); plotFrame = x.frame(Title=""Wrong: Each slice normalised over its plotting range""); ; # Plot only the blinded data, and then plot the PDF over the full range as well as both sidebands; blindedData.plotOn(plotFrame); expo.plotOn(plotFrame",MatchSource.WIKI,doc/master/rf212__plottingInRanges__blinding_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf212__plottingInRanges__blinding_8py.html
https://root.cern/doc/master/rf301__composition_8C.html:5036,Deployability,integrat,integrator,5036,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5168,Deployability,integrat,integrator,5168,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5300,Deployability,integrat,integrator,5300,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5406,Deployability,integrat,integrates,5406,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5521,Deployability,integrat,integrator,5521,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5661,Deployability,integrat,integrator,5661,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5767,Deployability,integrat,integrates,5767,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5882,Deployability,integrat,integrator,5882,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:6014,Deployability,integrat,integrator,6014,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:353,Integrability,depend,depends,353,". ROOT: tutorials/roofit/rf301_composition.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf301_composition.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs through composition e.g. ; substituting a pdf parameter with a function that depends on other observables; pdf = gauss(x,f(y),s) with f(y) = a0 + a1*y. ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolyVar.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf301_composition(); {; // S e t u p c o m p o s e d m o d e l g a u s s ( x , m ( y ) , s ); // -----------------------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", -0.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5);; RooGaussian model(""model"", ""Gaussian with shifting mean"", x, fy, sigma);; ; // S a m p l e d a t a , p l o t d a t a a n d p d f o n x a n d y; // ---------------------------------------------------------------------------------; ; // Generate 10000 events in x and y from model; std::unique_ptr<RooDataSet> data{model.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of model on x = Int(dy) model(x,y); RooPlot *xframe = x.frame();; data->plotOn(xframe);; model.plotOn(xframe);; ; // Plot x distribution of data and projection of model on y = Int(dx) model(x,y); RooPlot *yframe = y.frame();; data->plotOn(yframe);; model.plotOn(yframe);; ; // Make two-dimensional plot in x vs y; TH1 *hh_model = model.createHistogram(""hh_model"", x, Binning(50), YVar(y, Binning(50)));; hh_model->SetLineColor(kBlue);; ; // Make can",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5036,Integrability,integrat,integrator,5036,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5168,Integrability,integrat,integrator,5168,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5300,Integrability,integrat,integrator,5300,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5406,Integrability,integrat,integrates,5406,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5521,Integrability,integrat,integrator,5521,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5661,Integrability,integrat,integrator,5661,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5767,Integrability,integrat,integrates,5767,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5882,Integrability,integrat,integrator,5882,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:6014,Integrability,integrat,integrator,6014,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:3253,Modifiability,variab,variable,3253,"set(1.4);; xframe->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.4);; yframe->Draw();; c->cd(3);; gPad->SetLeftMargin(0.20);; hh_model->GetZaxis()->SetTitleOffset(2.5);; hh_model->Draw(""surf"");; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolyVar.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overr",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5422,Modifiability,variab,variables,5422,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:5783,Modifiability,variab,variables,5783,"t RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf301_composition.C. tutorialsroofitrf301_composition.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8C.html:4900,Safety,safe,safe,4900,":298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf301_compositionDefinition rf301_composition.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::ini",MatchSource.WIKI,doc/master/rf301__composition_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8C.html
https://root.cern/doc/master/rf301__composition_8py.html:2406,Deployability,integrat,integrator,2406,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2538,Deployability,integrat,integrator,2538,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2670,Deployability,integrat,integrator,2670,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2776,Deployability,integrat,integrates,2776,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2891,Deployability,integrat,integrator,2891,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3031,Deployability,integrat,integrator,3031,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3137,Deployability,integrat,integrates,3137,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3252,Deployability,integrat,integrator,3252,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3384,Deployability,integrat,integrator,3384,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:369,Integrability,depend,depends,369,". ROOT: tutorials/roofit/rf301_composition.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf301_composition.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: multi-dimensional pdfs through composition, e.g. ; substituting a pdf parameter with a function that depends on other observables; pdf = gauss(x,f(y),s) with f(y) = a0 + a1*y. ; import ROOT; ; # Setup composed model gauss(x, m(y), s); # -----------------------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Creat gauss(x,f(y),s); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5); model = ROOT.RooGaussian(""model"", ""Gaussian with shifting mean"", x, fy, sigma); ; # Sample data, plot data and pdf on x and y; # ---------------------------------------------------------------------------------; ; # Generate 10000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yf",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2406,Integrability,integrat,integrator,2406,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2538,Integrability,integrat,integrator,2538,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2670,Integrability,integrat,integrator,2670,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2776,Integrability,integrat,integrates,2776,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2891,Integrability,integrat,integrator,2891,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3031,Integrability,integrat,integrator,3031,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3137,Integrability,integrat,integrates,3137,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3252,Integrability,integrat,integrator,3252,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3384,Integrability,integrat,integrator,3384,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2792,Modifiability,variab,variables,2792,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:3153,Modifiability,variab,variables,3153,"(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf301_composition.py. tutorialsroofitrf301_composition.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf301__composition_8py.html:2270,Safety,safe,safe,2270,"nerate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf301_composition"", ""rf301_composition"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf301_composition.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y]_Norm[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); [#1] INFO:NumericIntegration -- RooRealIntegral::init",MatchSource.WIKI,doc/master/rf301__composition_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf301__composition_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:275,Availability,avail,available,275,". ROOT: tutorials/roofit/rf302_utilfuncs.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf302_utilfuncs.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: utility functions classes available for use in tailoring of composite (multidimensional) pdfs . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFormulaVar.h""; #include ""RooAddition.h""; #include ""RooProduct.h""; #include ""RooPolyVar.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; ; using namespace RooFit;; ; void rf302_utilfuncs(); {; // C r e a t e o b s e r v a b l e s , p a r a m e t e r s; // -----------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; // Create parameters; RooRealVar a0(""a0"", ""a0"", -1.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5);; ; // U s i n g R o o F o r m u l a V a r t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); RooFormulaVar fy_1(""fy_1"", ""a0-a1*sqrt(10*abs(y))"", RooArgSet(y, a0, a1));; ; // Create gauss(x,f(y),s); RooGaussian model_1(""model_1"", ""Gaussian with shifting mean"", x, fy_1, sigma);; ; // U s i n g R o o P o l y V a r t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create polynomial function f(y) = a0 + a1*y; RooPolyVar fy_2(""fy_2"", ""fy_2"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooGaussian model_2(""model_2"", ""Gaussian with shifting mean"", x, fy_2, sigma);; ; // U s i n g R o o A d d i t i o n t o t a i l o r p d f; // -----------------------------------------------------------------------; ; // Create sum function f(y) = a0 + y; RooAdd",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6335,Deployability,integrat,integrator,6335,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6469,Deployability,integrat,integrator,6469,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6603,Deployability,integrat,integrator,6603,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6737,Deployability,integrat,integrator,6737,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6335,Integrability,integrat,integrator,6335,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6469,Integrability,integrat,integrator,6469,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6603,Integrability,integrat,integrator,6603,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6737,Integrability,integrat,integrator,6737,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:5690,Safety,safe,safe,5690,"riable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calcul",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:5859,Safety,safe,safe,5859,"nd the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWout",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6028,Safety,safe,safe,6028,"vas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8C.html:6197,Safety,safe,safe,6197,"TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf302_utilfuncsDefinition rf302_utilfuncs.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf302_utilfuncs.C. tutorialsroofitrf302_utilfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8C.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:290,Availability,avail,available,290,". ROOT: tutorials/roofit/rf302_utilfuncs.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf302_utilfuncs.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: utility functions classes available for use in tailoring of composite (multidimensional) pdfs . ; import ROOT; ; # Create observables, parameters; # -----------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; # Create parameters; a0 = ROOT.RooRealVar(""a0"", ""a0"", -1.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5); ; # Using RooFormulaVar to tailor pdf; # -----------------------------------------------------------------------; ; # Create interpreted function f(y) = a0 - a1*sqrt(10*abs(y)); fy_1 = ROOT.RooFormulaVar(""fy_1"", ""a0-a1*sqrt(10*abs(y))"", [y, a0, a1]); ; # Create gauss(x,f(y),s); model_1 = ROOT.RooGaussian(""model_1"", ""Gaussian with shifting mean"", x, fy_1, sigma); ; # Using RooPolyVar to tailor pdf; # -----------------------------------------------------------------------; ; # Create polynomial function f(y) = a0 + a1*y; fy_2 = ROOT.RooPolyVar(""fy_2"", ""fy_2"", y, [a0, a1]); ; # Create gauss(x,f(y),s); model_2 = ROOT.RooGaussian(""model_2"", ""Gaussian with shifting mean"", x, fy_2, sigma); ; # Using RooAddition to tailor pdf; # -----------------------------------------------------------------------; ; # Create sum function f(y) = a0 + y; fy_3 = ROOT.RooAddition(""fy_3"", ""a0+y"", [a0, y]); ; # Create gauss(x,f(y),s); model_3 = ROOT.RooGaussian(""model_3"", ""Gaussian with shifting mean"", x, fy_3, sigma); ; # Using RooProduct to tailor pdf; # -----------------------------------------------------------------------; ; # Create product function f(y) = a1*y; fy_4 = ROOT.RooProduct(""fy_4"", ""a1*y"", [a1, y]); ; # Create gauss(x,f(y),s); model_4 = ROOT",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4053,Deployability,integrat,integrator,4053,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4187,Deployability,integrat,integrator,4187,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4321,Deployability,integrat,integrator,4321,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4455,Deployability,integrat,integrator,4455,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4053,Integrability,integrat,integrator,4053,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4187,Integrability,integrat,integrator,4187,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4321,Integrability,integrat,integrator,4321,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:4455,Integrability,integrat,integrator,4455,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:3408,Safety,safe,safe,3408,"); hh_model_3 = model_3.createHistogram(""hh_model_3"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_model_4 = model_4.createHistogram(""hh_model_4"", x, Binning=50, YVar=dict(var=y, Binning=50)); hh_model_1.SetLineColor(ROOT.kBlue); hh_model_2.SetLineColor(ROOT.kBlue); hh_model_3.SetLineColor(ROOT.kBlue); hh_model_4.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calcula",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:3577,Safety,safe,safe,3577,"ict(var=y, Binning=50)); hh_model_1.SetLineColor(ROOT.kBlue); hh_model_2.SetLineColor(ROOT.kBlue); hh_model_3.SetLineColor(ROOT.kBlue); hh_model_4.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; Author",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:3746,Safety,safe,safe,3746,"e); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf302__utilfuncs_8py.html:3915,Safety,safe,safe,3915,"vas(""rf302_utilfuncs"", ""rf302_utilfuncs"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_model_1.GetZaxis().SetTitleOffset(2.5); hh_model_1.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_model_2.GetZaxis().SetTitleOffset(2.5); hh_model_2.Draw(""surf""); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model_3.GetZaxis().SetTitleOffset(2.5); hh_model_3.Draw(""surf""); c.cd(4); ROOT.gPad.SetLeftMargin(0.20); hh_model_4.GetZaxis().SetTitleOffset(2.5); hh_model_4.Draw(""surf""); ; c.SaveAs(""rf302_utilfuncs.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_2' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_3' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model_4' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_1_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_2_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_3_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_4_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf302_utilfuncs.py. tutorialsroofitrf302_utilfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf302__utilfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf302__utilfuncs_8py.html
https://root.cern/doc/master/rf303__conditional_8C.html:8163,Availability,error,error,8163,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:1686,Energy Efficiency,reduce,reduce,1686," using namespace RooFit;; ; RooDataSet *makeFakeDataXY();; ; void rf303_conditional(); {; // S e t u p c o m p o s e d m o d e l g a u s s ( x , m ( y ) , s ); // -----------------------------------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", -0.5, -5, 5);; RooRealVar a1(""a1"", ""a1"", -0.5, -1, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gauss(x,f(y),s); RooRealVar sigma(""sigma"", ""width of gaussian"", 0.5, 0.1, 2.0);; RooGaussian model(""model"", ""Gaussian with shifting mean"", x, fy, sigma);; ; // Obtain fake external experimental dataset with values for x and y; RooDataSet *expDataXY = makeFakeDataXY();; ; // G e n e r a t e d a t a f r o m c o n d i t i o n a l p . d . f m o d e l ( x | y ); // ---------------------------------------------------------------------------------------------; ; // Make subset of experimental data with only y values; std::unique_ptr<RooAbsData> expAbsDataY{expDataXY->reduce(y)};; RooDataSet *expDataY = static_cast<RooDataSet*>(expAbsDataY.get());; ; // Generate 10000 events in x obtained from _conditional_ model(x|y) with y values taken from experimental data; std::unique_ptr<RooDataSet> data{model.generate(x, ProtoData(*expDataY))};; data->Print();; ; // F i t c o n d i t i o n a l p . d . f m o d e l ( x | y ) t o d a t a; // ---------------------------------------------------------------------------------------------; ; model.fitTo(*expDataXY, ConditionalObservables(y), PrintLevel(-1));; ; // P r o j e c t c o n d i t i o n a l p . d . f o n x a n d y d i m e n s i o n s; // ---------------------------------------------------------------------------------------------; ; // Plot x distribution of data and projection of model on x = 1/Ndata sum(data(y_i)) model(x;y_i); RooPlot *xframe = x.frame();; expDataXY->plotOn(xframe);; model.plotOn(xframe, ProjWData(*expDataY));;",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:4763,Energy Efficiency,reduce,reduceRooFit,4763,"efinition Rtypes.h:66; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsCollection::findRooAbsArg * find(const char *name) constFind object with given name in list.Definition RooAbsCollection.cxx:922; RooAbsData::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constDefinition RooAbsData.cxx:548; RooAbsData::reduceRooFit::OwningPtr< RooAbsData > reduce(const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCreate a reduced copy of this dataset.Definition RooAbsData.cxx:399; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::getconst RooArgSet * get(Int_t index) const overrideReturn RooArgSet with coordinates of event 'index'.Definition RooDataSet.cxx:835; RooDataSet::binnedCloneRooFit::OwningPtr< RooDataHist > binnedClone(const char *newName=nullptr, const char *newTitle=nullptr) constReturn binned clone of this dataset.Definition RooDataSet.cxx:736; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:4801,Energy Efficiency,reduce,reduce,4801,"efinition Rtypes.h:66; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsCollection::findRooAbsArg * find(const char *name) constFind object with given name in list.Definition RooAbsCollection.cxx:922; RooAbsData::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constDefinition RooAbsData.cxx:548; RooAbsData::reduceRooFit::OwningPtr< RooAbsData > reduce(const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCreate a reduced copy of this dataset.Definition RooAbsData.cxx:399; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::getconst RooArgSet * get(Int_t index) const overrideReturn RooArgSet with coordinates of event 'index'.Definition RooDataSet.cxx:835; RooDataSet::binnedCloneRooFit::OwningPtr< RooDataHist > binnedClone(const char *newName=nullptr, const char *newTitle=nullptr) constReturn binned clone of this dataset.Definition RooDataSet.cxx:736; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:5027,Energy Efficiency,reduce,reduced,5027,"efinition Rtypes.h:66; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsCollection::findRooAbsArg * find(const char *name) constFind object with given name in list.Definition RooAbsCollection.cxx:922; RooAbsData::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constDefinition RooAbsData.cxx:548; RooAbsData::reduceRooFit::OwningPtr< RooAbsData > reduce(const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCreate a reduced copy of this dataset.Definition RooAbsData.cxx:399; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::getconst RooArgSet * get(Int_t index) const overrideReturn RooArgSet with coordinates of event 'index'.Definition RooDataSet.cxx:835; RooDataSet::binnedCloneRooFit::OwningPtr< RooDataHist > binnedClone(const char *newName=nullptr, const char *newTitle=nullptr) constReturn binned clone of this dataset.Definition RooDataSet.cxx:736; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:5911,Modifiability,variab,variable,5911,"&arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCreate a reduced copy of this dataset.Definition RooAbsData.cxx:399; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::getconst RooArgSet * get(Int_t index) const overrideReturn RooArgSet with coordinates of event 'index'.Definition RooDataSet.cxx:835; RooDataSet::binnedCloneRooFit::OwningPtr< RooDataHist > binnedClone(const char *newName=nullptr, const char *newTitle=nullptr) constReturn binned clone of this dataset.Definition RooDataSet.cxx:736; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:8446,Modifiability,variab,variables,8446,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:8539,Modifiability,variab,variables,8539,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:8632,Modifiability,variab,variables,8632,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:8257,Performance,optimiz,optimization,8257,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8C.html:8354,Performance,optimiz,optimization,8354,"ObservablesRooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; ROOT::Math::fabsVecExpr< UnaryOp< Fabs< T >, VecExpr< A, T, D >, T >, T, D > fabs(const VecExpr< A, T, D > &rhs)Definition UnaryOperators.h:131; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf303_conditionalDefinition rf303_conditional.py:1; ; RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf303_conditional.C. tutorialsroofitrf303_conditional.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8C.html
https://root.cern/doc/master/rf303__conditional_8py.html:3441,Availability,error,error,3441,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:1686,Energy Efficiency,reduce,reduce,1686,"rd); ; return d; ; ; # Set up composed model gauss(x, m(y), s); # -----------------------------------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", -0.5, -5, 5); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.5, -1, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Creat gauss(x,f(y),s); sigma = ROOT.RooRealVar(""sigma"", ""width of gaussian"", 0.5, 0.1, 2.0); model = ROOT.RooGaussian(""model"", ""Gaussian with shifting mean"", x, fy, sigma); ; # Obtain fake external experimental dataset with values for x and y; expDataXY = makeFakeDataXY(); ; # Generate data from conditional p.d.f. model(x|y); # ---------------------------------------------------------------------------------------------; ; # Make subset of experimental data with only y values; expDataY = expDataXY.reduce({y}); ; # Generate 10000 events in x obtained from _conditional_ model(x|y) with y; # values taken from experimental data; data = model.generate({x}, ProtoData=expDataY); data.Print(); ; # Fit conditional p.d.f model(x|y) to data; # ---------------------------------------------------------------------------------------------; ; model.fitTo(expDataXY, ConditionalObservables={y}, PrintLevel=-1); ; # Project conditional p.d.f on x and y dimensions; # ---------------------------------------------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedCl",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:3724,Modifiability,variab,variables,3724,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:3817,Modifiability,variab,variables,3817,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:3910,Modifiability,variab,variables,3910,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:3535,Performance,optimiz,optimization,3535,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf303__conditional_8py.html:3632,Performance,optimiz,optimization,3632,"-----------------------------------------------------------; ; # Plot x distribution of data and projection of model x = 1/Ndata; # sum(data(y_i)) model(x;y_i); xframe = x.frame(); expDataXY.plotOn(xframe); model.plotOn(xframe, ProjWData=expDataY); ; # Speed up (and approximate) projection by using binned clone of data for; # projection; binnedDataY = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY, LineColor=""c"", LineStyle="":""); ; # Show effect of projection with too coarse binning; (expDataY.get().find(""y"")).setBins(5); binnedDataY2 = expDataY.binnedClone(); model.plotOn(xframe, ProjWData=binnedDataY2, LineColor=""r""); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf303_conditional"", ""rf303_conditional"", 600, 460); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.2); xframe.Draw(); ; c.SaveAs(""rf303_conditional.png""); RooDataSet::modelData[x,y] = 6850 entries; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x]_d) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf303_conditional.py. tutorialsroofitrf303_conditional.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf303__conditional_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf303__conditional_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4616,Deployability,integrat,integrates,4616,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4707,Deployability,integrat,integrates,4707,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4616,Integrability,integrat,integrates,4616,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4707,Integrability,integrat,integrates,4707,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:759,Modifiability,variab,variables,759,"ading...; Searching...; No Matches. rf304_uncorrprod.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf304_uncorrprod(); {; ; // C r e a t e c o m p o n e n t p d f s i n x a n d y; // ----------------------------------------------------------------; ; // Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its variables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; RooRealVar meanx(""mean1"", ""mean of gaussian x"", 2);; RooRealVar meany(""mean2"", ""mean of gaussian y"", -2);; RooRealVar sigmax(""sigmax"", ""width of gaussian x"", 1);; RooRealVar sigmay(""sigmay"", ""width of gaussian y"", 5);; ; RooGaussian gaussx(""gaussx"", ""gaussian PDF"", x, meanx, sigmax);; RooGaussian gaussy(""gaussy"", ""gaussian PDF"", y, meany, sigmay);; ; // C o n s t r u c t u n c o r r e l a t e d p r o d u c t p d f; // -------------------------------------------------------------------; ; // Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; RooProdPdf gaussxy(""gaussxy"", ""gaussx*gaussy"", RooArgList(gaussx, gaussy));; ; // S a m p l e p d f , p l o t p r o j e c t i o n o n x a n d y; // ---------------------------------------------------------------------------; ; // Generate 10000 events in x and y from gaussxy; std::unique_ptr<RooDataSet> data{gaussxy.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of gaussxy on x = Int(dy) gaussxy(x,y); RooPlot *xframe = x.frame(Title(""X projection of gauss(x)*gauss(y)""));; data->plotOn(xframe);; gaussxy.plotOn(xframe);; ; // Plot x distribution of data and projection of gaussxy on y = Int(dx) gaussxy(x,y); RooPlot *yframe = y.frame(Title(""Y projection of gauss(x)*gauss(y)""));",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:3270,Modifiability,variab,variable,3270,"ew TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.4);; yframe->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4632,Modifiability,variab,variables,4632,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4723,Modifiability,variab,variables,4723,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4335,Safety,safe,safe,4335,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:4504,Safety,safe,safe,4504,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8C.html:251,Usability,simpl,simple,251,". ROOT: tutorials/roofit/rf304_uncorrprod.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf304_uncorrprod.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf304_uncorrprod(); {; ; // C r e a t e c o m p o n e n t p d f s i n x a n d y; // ----------------------------------------------------------------; ; // Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its variables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; ; RooRealVar meanx(""mean1"", ""mean of gaussian x"", 2);; RooRealVar meany(""mean2"", ""mean of gaussian y"", -2);; RooRealVar sigmax(""sigmax"", ""width of gaussian x"", 1);; RooRealVar sigmay(""sigmay"", ""width of gaussian y"", 5);; ; RooGaussian gaussx(""gaussx"", ""gaussian PDF"", x, meanx, sigmax);; RooGaussian gaussy(""gaussy"", ""gaussian PDF"", y, meany, sigmay);; ; // C o n s t r u c t u n c o r r e l a t e d p r o d u c t p d f; // -------------------------------------------------------------------; ; // Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; RooProdPdf gaussxy(""gaussxy"", ""gaussx*gaussy"", RooArgList(gaussx, gaussy));; ; // S a m p l e p d f , p l o t p r o j e c t i o n o n x a n d y; // ---------------------------------------------------------------------------; ; // Generate 10000 events in x and y from gaussxy; std::unique_ptr<RooDataSet> data{gaussxy.generate({x, y}, 10000)};; ; // Plot x distribution of data and projection of gaussxy on x = Int(dy) gaussxy(x,y); RooPlot *xframe = x.frame(Title(""X projection of gauss(x)*gauss(y)""));; data->plotOn(xframe);; gaussxy.plotOn(xframe);; ; // Plot x distribution of data and projection of ga",MatchSource.WIKI,doc/master/rf304__uncorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2620,Deployability,integrat,integrates,2620,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2711,Deployability,integrat,integrates,2711,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2620,Integrability,integrat,integrates,2620,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2711,Integrability,integrat,integrates,2711,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:550,Modifiability,variab,variables,550,". ROOT: tutorials/roofit/rf304_uncorrprod.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf304_uncorrprod.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; import ROOT; ; ; # Create component pdfs in x and y; # ----------------------------------------------------------------; ; # Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its; # variables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; meanx = ROOT.RooRealVar(""mean1"", ""mean of gaussian x"", 2); meany = ROOT.RooRealVar(""mean2"", ""mean of gaussian y"", -2); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian x"", 1); sigmay = ROOT.RooRealVar(""sigmay"", ""width of gaussian y"", 5); ; gaussx = ROOT.RooGaussian(""gaussx"", ""gaussian PDF"", x, meanx, sigmax); gaussy = ROOT.RooGaussian(""gaussy"", ""gaussian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.c",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2636,Modifiability,variab,variables,2636,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2727,Modifiability,variab,variables,2727,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2339,Safety,safe,safe,2339,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:2508,Safety,safe,safe,2508,"sian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf304_uncorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf304_uncorrprod.py. tutorialsroofitrf304_uncorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf304__uncorrprod_8py.html:266,Usability,simpl,simple,266,". ROOT: tutorials/roofit/rf304_uncorrprod.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf304_uncorrprod.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: simple uncorrelated multi-dimensional pdfs ; pdf = gauss(x,mx,sx) * gauss(y,my,sy). ; import ROOT; ; ; # Create component pdfs in x and y; # ----------------------------------------------------------------; ; # Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its; # variables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); ; meanx = ROOT.RooRealVar(""mean1"", ""mean of gaussian x"", 2); meany = ROOT.RooRealVar(""mean2"", ""mean of gaussian y"", -2); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian x"", 1); sigmay = ROOT.RooRealVar(""sigmay"", ""width of gaussian y"", 5); ; gaussx = ROOT.RooGaussian(""gaussx"", ""gaussian PDF"", x, meanx, sigmax); gaussy = ROOT.RooGaussian(""gaussy"", ""gaussian PDF"", y, meany, sigmay); ; # Construct uncorrelated product pdf; # -------------------------------------------------------------------; ; # Multiply gaussx and gaussy into a two-dimensional pdf gaussxy; gaussxy = ROOT.RooProdPdf(""gaussxy"", ""gaussx*gaussy"", [gaussx, gaussy]); ; # Sample pdf, plot projection on x and y; # ---------------------------------------------------------------------------; ; # Generate 10000 events in x and y from gaussxy; data = gaussxy.generate({x, y}, 10000); ; # Plot x distribution of data and projection of gaussxy x = Int(dy); # gaussxy(x,y); xframe = x.frame(Title=""X projection of gauss(x)*gauss(y)""); data.plotOn(xframe); gaussxy.plotOn(xframe); ; # Plot x distribution of data and projection of gaussxy y = Int(dx); # gaussxy(x,y); yframe = y.frame(Title=""Y projection of gauss(x)*gauss(y)""); data.plotOn(yframe); gaussxy.plotOn(yframe); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf304_uncorrprod"", ""rf304_uncorrprod"", 800, 400); c.Divide(2); c.c",MatchSource.WIKI,doc/master/rf304__uncorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5437,Deployability,integrat,integrates,5437,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5578,Deployability,integrat,integrator,5578,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5684,Deployability,integrat,integrates,5684,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5437,Integrability,integrat,integrates,5437,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5578,Integrability,integrat,integrator,5578,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5684,Integrability,integrat,integrates,5684,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:3639,Modifiability,variab,variable,3639,"ame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.6);; yframe->Draw();; c->cd(3);; gPad->SetLeftMargin(0.20);; hh_model->GetZaxis()->SetTitleOffset(2.5);; hh_model->Draw(""surf"");; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolyVar.h; RooProdPdf.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5453,Modifiability,variab,variables,5453,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5700,Modifiability,variab,variables,5700,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8C.html:5327,Safety,safe,safe,5327,"in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf305_condcorrprodDefinition rf305_condcorrprod.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf305_condcorrprod.C. tutorialsroofitrf305_condcorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8C.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2741,Deployability,integrat,integrates,2741,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2882,Deployability,integrat,integrator,2882,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2988,Deployability,integrat,integrates,2988,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2741,Integrability,integrat,integrates,2741,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2882,Integrability,integrat,integrator,2882,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2988,Integrability,integrat,integrates,2988,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2757,Modifiability,variab,variables,2757,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:3004,Modifiability,variab,variables,3004,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf305__condcorrprod_8py.html:2631,Safety,safe,safe,2631,"y(y); model = ROOT.RooProdPdf(""model"", ""gaussx(x|y)*gaussy(y)"", {gaussy}, Conditional=({gaussx}, {x})); ; # Sample, fit and plot product pdf; # ---------------------------------------------------------------; ; # Generate 1000 events in x and y from model; data = model.generate({x, y}, 10000); ; # Plot x distribution of data and projection of model x = Int(dy); # model(x,y); xframe = x.frame(); data.plotOn(xframe); model.plotOn(xframe); ; # Plot x distribution of data and projection of model y = Int(dx); # model(x,y); yframe = y.frame(); data.plotOn(yframe); model.plotOn(yframe); ; # Make two-dimensional plot in x vs y; hh_model = model.createHistogram(""hh_model"", x, ROOT.RooFit.Binning(50), ROOT.RooFit.YVar(y, ROOT.RooFit.Binning(50))); hh_model.SetLineColor(ROOT.kBlue); ; # Make canvas and draw ROOT.RooPlots; c = ROOT.TCanvas(""rf305_condcorrprod"", ""rf05_condcorrprod"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.6); xframe.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.6); yframe.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.20); hh_model.GetZaxis().SetTitleOffset(2.5); hh_model.Draw(""surf""); ; c.SaveAs(""rf305_condcorrprod.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y); [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on y integrates over variables (x); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf305_condcorrprod.py. tutorialsroofitrf305_condcorrprod.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf305__condcorrprod_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf305__condcorrprod_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:298,Availability,error,errors,298,". ROOT: tutorials/roofit/rf306_condpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf306_condpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:886,Availability,error,error,886,". ROOT: tutorials/roofit/rf306_condpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf306_condpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:975,Availability,error,error,975,"orials/roofit/rf306_condpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf306_condpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify external ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:1094,Availability,error,error,1094,"orials/roofit/rf306_condpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf306_condpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify external ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:1186,Availability,error,error,1186,"Tutorials. Detailed Description; Multidimensional models: conditional pdf with per-event errors . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf306_condpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t f a k e ' e x t e r n a l ' d a t a w i t h p e r - e v e n t e r r o r; // ------------------------------------------------------------------------------------------------------; ; // Use landau pdf to get somewhat realistic distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // S a m p l e d a t a f r o m c o n d i t i o n a l d e c a y _ g m ( d t | d t e r r ); // ---------------------------------------------------------------------------------------------; ; // Specify external dataset with dterr values to use decay_dm as conditional pdf; std::unique_ptr<RooDataSet> data{decay_gm.generate(dt, ProtoData(*expDataDterr))};; ; // F i t c o n d i t i o n a l d e c a y _ d m ( d",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7413,Availability,error,error,7413,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:3213,Deployability,integrat,integrating,3213,"----------------------------------------; ; // Specify dterr as conditional observable; decay_gm.fitTo(*data, ConditionalObservables(dterr), PrintLevel(-1));; ; // P l o t c o n d i t i o n a l d e c a y _ d m ( d t | d t e r r ); // ---------------------------------------------------------------------; ; // Make two-dimensional plot of conditional pdf in (dt,dterr); TH1 *hh_decay = decay_gm.createHistogram(""hh_decay"", dt, Binning(50), YVar(dterr, Binning(50)));; hh_decay->SetLineColor(kBlue);; ; // Plot decay_gm(dt|dterr) at various values of dterr; RooPlot *frame = dt.frame(Title(""Slices of decay(dt|dterr) at various dterr""));; for (Int_t ibin = 0; ibin < 100; ibin += 20) {; dterr.setBin(ibin);; decay_gm.plotOn(frame, Normalization(5.));; }; ; // Make projection of data an dt; RooPlot *frame2 = dt.frame(Title(""Projection of decay(dt|dterr) on dt""));; data->plotOn(frame2);; ; // Make projection of decay(dt|dterr) on dt.; //; // Instead of integrating out dterr, make a weighted average of curves; // at values dterr_i as given in the external dataset.; // (The true argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData(*expDataDterr, true));; ; // Draw all frames on canvas; TCanvas *c = new TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.20);; hh_decay->GetZaxis()->SetTitleOffset(2.5);; hh_decay->Draw(""surf"");; c->cd(2);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; Int_tint Int_tDefinition RtypesCore.h:45; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerSt",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7745,Deployability,integrat,integrator,7745,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:3213,Integrability,integrat,integrating,3213,"----------------------------------------; ; // Specify dterr as conditional observable; decay_gm.fitTo(*data, ConditionalObservables(dterr), PrintLevel(-1));; ; // P l o t c o n d i t i o n a l d e c a y _ d m ( d t | d t e r r ); // ---------------------------------------------------------------------; ; // Make two-dimensional plot of conditional pdf in (dt,dterr); TH1 *hh_decay = decay_gm.createHistogram(""hh_decay"", dt, Binning(50), YVar(dterr, Binning(50)));; hh_decay->SetLineColor(kBlue);; ; // Plot decay_gm(dt|dterr) at various values of dterr; RooPlot *frame = dt.frame(Title(""Slices of decay(dt|dterr) at various dterr""));; for (Int_t ibin = 0; ibin < 100; ibin += 20) {; dterr.setBin(ibin);; decay_gm.plotOn(frame, Normalization(5.));; }; ; // Make projection of data an dt; RooPlot *frame2 = dt.frame(Title(""Projection of decay(dt|dterr) on dt""));; data->plotOn(frame2);; ; // Make projection of decay(dt|dterr) on dt.; //; // Instead of integrating out dterr, make a weighted average of curves; // at values dterr_i as given in the external dataset.; // (The true argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData(*expDataDterr, true));; ; // Draw all frames on canvas; TCanvas *c = new TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.20);; hh_decay->GetZaxis()->SetTitleOffset(2.5);; hh_decay->Draw(""surf"");; c->cd(2);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.6);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; Int_tint Int_tDefinition RtypesCore.h:45; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerSt",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7745,Integrability,integrat,integrator,7745,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:5029,Modifiability,variab,variable,5029,"RooDecay.h; RooGaussModel.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; Int_tint Int_tDefinition RtypesCore.h:45; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooDecaySingle or double sided decay function that can be analytically convolved with any RooResolutionModel ...Definition RooDecay.h:22; RooDecay::DoubleSided@ DoubleSidedDefinition RooDecay.h:25; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7879,Modifiability,variab,variables,7879,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7507,Performance,optimiz,optimization,7507,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8C.html:7604,Performance,optimiz,optimization,7604,"RooCmdArg ConditionalObservables(Args_t &&... argsOrArgSet)Create a RooCmdArg to declare conditional observables.Definition RooGlobalFunc.h:278; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::NormalizationRooCmdArg Normalization(double scaleFactor)Definition RooGlobalFunc.cxx:195; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf306_condpereventerrorsDefinition rf306_condpereventerrors.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf306_condpereventerrors.C. tutorialsroofitrf306_condpereventerrors.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8C.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:342,Availability,error,errors,342,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:622,Availability,error,error,622,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:703,Availability,error,error,703,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:838,Availability,error,error,838,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:936,Availability,error,error,936,". ROOT: tutorials/roofit/rf306_condpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf306_condpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, Pri",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:1189,Availability,error,error,1189,". Detailed Description; Multidimensional models: complete example with use of conditional pdf with per-event errors . ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; ; # Use landau pdf to get somewhat realistic distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Sample data from conditional decay_gm(dt|dterr); # ---------------------------------------------------------------------------------------------; ; # Specify external dataset with dterr values to use decay_dm as; # conditional pdf; data = decay_gm.generate({dt}, ProtoData=expDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, PrintLevel=-1); ; # Plot conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Make two-dimensional plot of conditional pdf in (dt,dterr); hh_decay = decay_gm.createHistogram(""hh_de",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:3942,Availability,error,error,3942,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:2730,Deployability,integrat,integrating,2730,"pDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, PrintLevel=-1); ; # Plot conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Make two-dimensional plot of conditional pdf in (dt,dterr); hh_decay = decay_gm.createHistogram(""hh_decay"", dt, Binning=50, YVar=dict(var=dterr, Binning=50)); hh_decay.SetLineColor(ROOT.kBlue); ; # Plot decay_gm(dt|dterr) at various values of dterr; frame = dt.frame(Title=""Slices of decay(dt|dterr) at various dterr""); for ibin in range(0, 100, 20):; dterr.setBin(ibin); decay_gm.plotOn(frame, Normalization=5.0); ; # Make projection of data an dt; frame2 = dt.frame(Title=""Projection of decay(dt|dterr) on dt""); data.plotOn(frame2); ; # Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErro",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4274,Deployability,integrat,integrator,4274,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:2730,Integrability,integrat,integrating,2730,"pDataDterr); ; # Fit conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Specify dterr as conditional observable; decay_gm.fitTo(data, ConditionalObservables={dterr}, PrintLevel=-1); ; # Plot conditional decay_dm(dt|dterr); # ---------------------------------------------------------------------; ; # Make two-dimensional plot of conditional pdf in (dt,dterr); hh_decay = decay_gm.createHistogram(""hh_decay"", dt, Binning=50, YVar=dict(var=dterr, Binning=50)); hh_decay.SetLineColor(ROOT.kBlue); ; # Plot decay_gm(dt|dterr) at various values of dterr; frame = dt.frame(Title=""Slices of decay(dt|dterr) at various dterr""); for ibin in range(0, 100, 20):; dterr.setBin(ibin); decay_gm.plotOn(frame, Normalization=5.0); ; # Make projection of data an dt; frame2 = dt.frame(Title=""Projection of decay(dt|dterr) on dt""); data.plotOn(frame2); ; # Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErro",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4274,Integrability,integrat,integrator,4274,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4408,Modifiability,variab,variables,4408,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4036,Performance,optimiz,optimization,4036,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf306__condpereventerrors_8py.html:4133,Performance,optimiz,optimization,4133,"t|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process); decay_gm.plotOn(frame2, ProjWData=(expDataDterr, True)); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf306_condpereventerrors"", ""rf306_condperventerrors"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.20); hh_decay.GetZaxis().SetTitleOffset(2.5); hh_decay.Draw(""surf""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); ; c.SaveAs(""rf306_condpereventerrors.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_over_gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt]_decay_gmData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gm1_conv_exp(-abs(@0)/@1)_dt_tau_[decay_gm]_Int[dt,dterr]) using numeric integrator RooIntegrator1D to calculate Int(dterr); [#1] INFO:Plotting -- RooAbsReal::plotOn(decay_gm) plot on dt averages using data variables (dterr); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf306_condpereventerrors.py. tutorialsroofitrf306_condpereventerrors.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf306__condpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf306__condpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:291,Availability,error,errors,291,". ROOT: tutorials/roofit/rf307_fullpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf307_fullpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; //",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:929,Availability,error,error,929,". ROOT: tutorials/roofit/rf307_fullpereventerrors.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf307_fullpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; //",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:1018,Availability,error,error,1018,"le Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf307_fullpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; // C o n s t r u c t c o n d i t i o n a l p r o d u c ",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:1137,Availability,error,error,1137,"le Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf307_fullpereventerrors.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; // C o n s t r u c t c o n d i t i o n a l p r o d u c ",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:1229,Availability,error,error,1229,"sional models: full pdf with per-event errors ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooGaussModel.h""; #include ""RooDecay.h""; #include ""RooLandau.h""; #include ""RooProdPdf.h""; #include ""RooHistPdf.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf307_fullpereventerrors(); {; // B - p h y s i c s p d f w i t h p e r - e v e n t G a u s s i a n r e s o l u t i o n; // ----------------------------------------------------------------------------------------------; ; // Observables; RooRealVar dt(""dt"", ""dt"", -10, 10);; RooRealVar dterr(""dterr"", ""per-event error on dt"", 0.01, 10);; ; // Build a gaussian resolution model scaled by the per-event error = gauss(dt,bias,sigma*dterr); RooRealVar bias(""bias"", ""bias"", 0, -10, 10);; RooRealVar sigma(""sigma"", ""per-event error scale factor"", 1, 0.1, 10);; RooGaussModel gm(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr);; ; // Construct decay(dt) (x) gauss1(dt|dterr); RooRealVar tau(""tau"", ""tau"", 1.548);; RooDecay decay_gm(""decay_gm"", ""decay"", dt, tau, gm, RooDecay::DoubleSided);; ; // C o n s t r u c t e m p i r i c a l p d f f o r p e r - e v e n t e r r o r; // -----------------------------------------------------------------; ; // Use landau pdf to get empirical distribution with long tail; RooLandau pdfDtErr(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25);; std::unique_ptr<RooDataSet> expDataDterr{pdfDtErr.generate(dterr, 10000)};; ; // Construct a histogram pdf to describe the shape of the dtErr distribution; std::unique_ptr<RooDataHist> expHistDterr{expDataDterr->binnedClone()};; RooHistPdf pdfErr(""pdfErr"", ""pdfErr"", dterr, *expHistDterr);; ; // C o n s t r u c t c o n d i t i o n a l p r o d u c t d e c a y _ d m ( d t | d t e r r ) * p d f ( d t e r; // r ); // ----------------------------------------------------------------------------------------------------------------------; ; // Const",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:5115,Modifiability,variab,variable,5115,"ooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooDecaySingle or double sided decay function that can be analytically convolved with any RooResolutionModel ...Definition RooDecay.h:22; RooDecay::DoubleSided@ DoubleSidedDefinition RooDecay.h:25; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooHistPdfA propability density function sampled from a multidimensional histogram.Definition RooHistPdf.h:30; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:315,Availability,error,errors,315,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:595,Availability,error,error,595,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:676,Availability,error,error,676,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:811,Availability,error,error,811,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:909,Availability,error,error,909,". ROOT: tutorials/roofit/rf307_fullpereventerrors.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf307_fullpereventerrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could als",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf307__fullpereventerrors_8py.html:1154,Availability,error,error,1154,"nterrors.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: usage of full pdf with per-event errors ; ; import ROOT; ; # B-physics pdf with per-event Gaussian resolution; # ----------------------------------------------------------------------------------------------; ; # Observables; dt = ROOT.RooRealVar(""dt"", ""dt"", -10, 10); dterr = ROOT.RooRealVar(""dterr"", ""per-event error on dt"", 0.01, 10); ; # Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr); bias = ROOT.RooRealVar(""bias"", ""bias"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""per-event error scale factor"", 1, 0.1, 10); gm = ROOT.RooGaussModel(""gm1"", ""gauss model scaled bt per-event error"", dt, bias, sigma, dterr); ; # Construct decay(dt) (x) gauss1(dt|dterr); tau = ROOT.RooRealVar(""tau"", ""tau"", 1.548); decay_gm = ROOT.RooDecay(""decay_gm"", ""decay"", dt, tau, gm, type=""DoubleSided""); ; # Construct empirical pdf for per-event error; # -----------------------------------------------------------------; ; # Use landau pdf to get empirical distribution with long tail; pdfDtErr = ROOT.RooLandau(""pdfDtErr"", ""pdfDtErr"", dterr, 1.0, 0.25); expDataDterr = pdfDtErr.generate({dterr}, 10000); ; # Construct a histogram pdf to describe the shape of the dtErr distribution; expHistDterr = expDataDterr.binnedClone(); pdfErr = ROOT.RooHistPdf(""pdfErr"", ""pdfErr"", {dterr}, expHistDterr); ; # Construct conditional product decay_dm(dt|dterr)*pdf(dterr); # ----------------------------------------------------------------------------------------------------------------------; ; # Construct production of conditional decay_dm(dt|dterr) with empirical; # pdfErr(dterr); model = ROOT.RooProdPdf(""model"", ""model"", {pdfErr}, Conditional=({decay_gm}, {dt})); ; # (Alternatively you could also use the landau shape pdfDtErr); # ROOT.RooProdPdf model(""model"", ""model"",pdfDtErr,; # ROOT.RooFit.Conditional(decay_gm,dt)); ; # Sample, fit and plot product model; # ----------",MatchSource.WIKI,doc/master/rf307__fullpereventerrors_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8py.html
https://root.cern/doc/master/rf308__normintegration2d_8C.html:283,Deployability,integrat,integration,283,". ROOT: tutorials/roofit/rf308_normintegration2d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf308_normintegration2d.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf308_normintegration2d(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Create pdf gaussx(x,-2,3), gaussy(y,2,2); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; RooGaussian gy(""gy"", ""gy"", y, +2.0, 2.0);; ; // Create gxy = gx(x)*gy(y); RooProdPdf gxy(""gxy"", ""gxy"", RooArgSet(gx, gy));; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gxy = "" << gxy.getVal() << endl;; ; // Return value of gxy normalized over x _and_ y in range [-10,10]; RooArgSet nset_xy(x, y);; cout << ""gx_Norm[x,y] = "" << gxy.getVal(&nset_xy) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; std::unique_ptr<RooAbsReal> igxy{gxy.createIntegral(RooArgSet(x, y))};; cout << ""gx_Int[x,y] = "" << igxy->getVal() << endl;; ; // NB: it is also possible to do the following; ; // Return value of gxy normalized over x in range [-10,10] (i.e. treating y as parameter); RooArgSet nset_x(x);; cout << ""gx_Norm[x] = "" << gxy.getVal(&nset_x) << endl;; ; // Return value of gxy normalized over y in range [-10,10] (i.e. treating x as parameter); RooArgSet nset_y(",MatchSource.WIKI,doc/master/rf308__normintegration2d_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8C.html
https://root.cern/doc/master/rf308__normintegration2d_8C.html:283,Integrability,integrat,integration,283,". ROOT: tutorials/roofit/rf308_normintegration2d.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf308_normintegration2d.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; #include ""RooRealVar.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAbsReal.h""; #include ""RooPlot.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""TH1.h""; using namespace RooFit;; ; void rf308_normintegration2d(); {; // S e t u p m o d e l; // ---------------------; ; // Create observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Create pdf gaussx(x,-2,3), gaussy(y,2,2); RooGaussian gx(""gx"", ""gx"", x, -2.0, 3.0);; RooGaussian gy(""gy"", ""gy"", y, +2.0, 2.0);; ; // Create gxy = gx(x)*gy(y); RooProdPdf gxy(""gxy"", ""gxy"", RooArgSet(gx, gy));; ; // R e t r i e v e r a w & n o r m a l i z e d v a l u e s o f R o o F i t p . d . f . s; // --------------------------------------------------------------------------------------------------; ; // Return 'raw' unnormalized value of gx; cout << ""gxy = "" << gxy.getVal() << endl;; ; // Return value of gxy normalized over x _and_ y in range [-10,10]; RooArgSet nset_xy(x, y);; cout << ""gx_Norm[x,y] = "" << gxy.getVal(&nset_xy) << endl;; ; // Create object representing integral over gx; // which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; std::unique_ptr<RooAbsReal> igxy{gxy.createIntegral(RooArgSet(x, y))};; cout << ""gx_Int[x,y] = "" << igxy->getVal() << endl;; ; // NB: it is also possible to do the following; ; // Return value of gxy normalized over x in range [-10,10] (i.e. treating y as parameter); RooArgSet nset_x(x);; cout << ""gx_Norm[x] = "" << gxy.getVal(&nset_x) << endl;; ; // Return value of gxy normalized over y in range [-10,10] (i.e. treating x as parameter); RooArgSet nset_y(",MatchSource.WIKI,doc/master/rf308__normintegration2d_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8C.html
https://root.cern/doc/master/rf308__normintegration2d_8py.html:298,Deployability,integrat,integration,298,". ROOT: tutorials/roofit/rf308_normintegration2d.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf308_normintegration2d.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Create pdf gaussx(x,-2,3), gaussy(y,2,2); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2.0, 3.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, +2.0, 2.0); ; # gxy = gx(x)*gy(y); gxy = ROOT.RooProdPdf(""gxy"", ""gxy"", [gx, gy]); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gxy = "", gxy.getVal()); ; # Return value of gxy normalized over x _and_ y in range [-10,10]; nset_xy = {x, y}; print(""gx_Norm[x,y] = "", gxy.getVal(nset_xy)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; x_and_y = {x, y}; igxy = gxy.createIntegral(x_and_y); print(""gx_Int[x,y] = "", igxy.getVal()); ; # NB: it is also possible to do the following; ; # Return value of gxy normalized over x in range [-10,10] (i.e. treating y; # as parameter); nset_x = {x}; print(""gx_Norm[x] = "", gxy.getVal(nset_x)); ; # Return value of gxy normalized over y in range [-10,10] (i.e. treating x; # as parameter); nset_y = {y}; print(""gx_Norm[y] = "", gxy.getVal(nset_y)); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); y.setRange(""signal"", -3, 3); ; # Create an integral of g",MatchSource.WIKI,doc/master/rf308__normintegration2d_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8py.html
https://root.cern/doc/master/rf308__normintegration2d_8py.html:298,Integrability,integrat,integration,298,". ROOT: tutorials/roofit/rf308_normintegration2d.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf308_normintegration2d.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: normalization and integration of pdfs, construction of cumulative distribution functions from pdfs in two dimensions . ; from __future__ import print_function; import ROOT; ; # Set up model; # ---------------------; ; # Create observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Create pdf gaussx(x,-2,3), gaussy(y,2,2); gx = ROOT.RooGaussian(""gx"", ""gx"", x, -2.0, 3.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, +2.0, 2.0); ; # gxy = gx(x)*gy(y); gxy = ROOT.RooProdPdf(""gxy"", ""gxy"", [gx, gy]); ; # Retrieve raw & normalized values of RooFit pdfs; # --------------------------------------------------------------------------------------------------; ; # Return 'raw' unnormalized value of gx; print(""gxy = "", gxy.getVal()); ; # Return value of gxy normalized over x _and_ y in range [-10,10]; nset_xy = {x, y}; print(""gx_Norm[x,y] = "", gxy.getVal(nset_xy)); ; # Create object representing integral over gx; # which is used to calculate gx_Norm[x,y] == gx / gx_Int[x,y]; x_and_y = {x, y}; igxy = gxy.createIntegral(x_and_y); print(""gx_Int[x,y] = "", igxy.getVal()); ; # NB: it is also possible to do the following; ; # Return value of gxy normalized over x in range [-10,10] (i.e. treating y; # as parameter); nset_x = {x}; print(""gx_Norm[x] = "", gxy.getVal(nset_x)); ; # Return value of gxy normalized over y in range [-10,10] (i.e. treating x; # as parameter); nset_y = {y}; print(""gx_Norm[y] = "", gxy.getVal(nset_y)); ; # Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; ; # Define a range named ""signal"" in x from -5,5; x.setRange(""signal"", -5, 5); y.setRange(""signal"", -3, 3); ; # Create an integral of g",MatchSource.WIKI,doc/master/rf308__normintegration2d_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf308__normintegration2d_8py.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:5964,Deployability,integrat,integrator,5964,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6096,Deployability,integrat,integrator,6096,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6228,Deployability,integrat,integrator,6228,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6360,Deployability,integrat,integrator,6360,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6492,Deployability,integrat,integrator,6492,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6624,Deployability,integrat,integrator,6624,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6756,Deployability,integrat,integrator,6756,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6888,Deployability,integrat,integrator,6888,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:5964,Integrability,integrat,integrator,5964,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6096,Integrability,integrat,integrator,6096,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6228,Integrability,integrat,integrator,6228,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6360,Integrability,integrat,integrator,6360,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6492,Integrability,integrat,integrator,6492,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6624,Integrability,integrat,integrator,6624,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6756,Integrability,integrat,integrator,6756,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:6888,Integrability,integrat,integrator,6888,"bsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf309_ndimplot.C. tutorialsroofitrf309_ndimplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8C.html:5828,Safety,safe,safe,5828,"e class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::YVarRooCmdArg YVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:846; RooFit::ZVarRooCmdArg ZVar(const RooAbsRealLValue &var, const RooCmdArg &arg={})Definition RooGlobalFunc.cxx:850; RooFit::BinningRooCmdArg Binning(const RooAbsBinning &binning)Definition RooGlobalFunc.cxx:328; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf309_ndimplotDefinition rf309_ndimplot.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrat",MatchSource.WIKI,doc/master/rf309__ndimplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8C.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3580,Deployability,integrat,integrator,3580,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3712,Deployability,integrat,integrator,3712,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3844,Deployability,integrat,integrator,3844,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3976,Deployability,integrat,integrator,3976,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4108,Deployability,integrat,integrator,4108,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4240,Deployability,integrat,integrator,4240,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4372,Deployability,integrat,integrator,4372,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4504,Deployability,integrat,integrator,4504,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3580,Integrability,integrat,integrator,3580,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3712,Integrability,integrat,integrator,3712,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3844,Integrability,integrat,integrator,3844,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3976,Integrability,integrat,integrator,3976,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4108,Integrability,integrat,integrator,4108,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4240,Integrability,integrat,integrator,4240,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4372,Integrability,integrat,integrator,4372,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:4504,Integrability,integrat,integrator,4504,"in(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf309_ndimplot.py. tutorialsroofitrf309_ndimplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf309__ndimplot_8py.html:3444,Safety,safe,safe,3444,"var=y, Binning=20),; ZVar=dict(var=z, Binning=20),; ); hh_pdf3.SetFillColor(ROOT.kBlue); ; c1 = ROOT.TCanvas(""rf309_2dimplot"", ""rf309_2dimplot"", 800, 800); c1.Divide(2, 2); c1.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""lego""); c1.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""surf""); c1.cd(3); ROOT.gPad.SetLeftMargin(0.15); hh_data.GetZaxis().SetTitleOffset(1.4); hh_data.Draw(""box""); c1.cd(4); ROOT.gPad.SetLeftMargin(0.15); hh_pdf.GetZaxis().SetTitleOffset(2.5); hh_pdf.Draw(""cont3""); c1.SaveAs(""rf309_2dimplot.png""); ; c2 = ROOT.TCanvas(""rf309_3dimplot"", ""rf309_3dimplot"", 800, 400); c2.Divide(2); c2.cd(1); ROOT.gPad.SetLeftMargin(0.15); hh_data3.GetZaxis().SetTitleOffset(1.4); hh_data3.Draw(""lego""); c2.cd(2); ROOT.gPad.SetLeftMargin(0.15); hh_pdf3.GetZaxis().SetTitleOffset(1.4); hh_pdf3.Draw(""iso""); c2.SaveAs(""rf309_3dimplot.png""); [#0] WARNING:InputArguments -- The parameter 'sigma' with range [-inf, inf] of the RooGaussian 'model' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y]) using numeric integrator RooIntegrato",MatchSource.WIKI,doc/master/rf309__ndimplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf309__ndimplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:1853,Availability,error,errors,1853,"s; RooRealVar dt(""dt"", ""dt"", -20, 20);; ; // Discrete observables mixState (B0tag==B0reco?) and tagFlav (B0tag==B0(bar)?); RooCategory mixState(""mixState"", ""B0/B0bar mixing state"");; RooCategory tagFlav(""tagFlav"", ""Flavour of the tagged B0"");; ; // Define state labels of discrete observables; mixState.defineType(""mixed"", -1);; mixState.defineType(""unmixed"", 1);; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Model parameters; RooRealVar dm(""dm"", ""delta m(B)"", 0.472, 0., 1.0);; RooRealVar tau(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0);; RooRealVar w(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0);; RooRealVar dw(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.01);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct a decay pdf, smeared with single gaussian resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of p",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:2115,Deployability,integrat,integrated,2115,"""mixed"", -1);; mixState.defineType(""unmixed"", 1);; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Model parameters; RooRealVar dm(""dm"", ""delta m(B)"", 0.472, 0., 1.0);; RooRealVar tau(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0);; RooRealVar w(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0);; RooRealVar dw(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.01);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct a decay pdf, smeared with single gaussian resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixStat",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:2751,Deployability,integrat,integrated,2751,"an resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice(mixState, ""unmixed""));; ; TCanvas *c = new TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame3->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooBMixD",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:3099,Deployability,integrat,integrated,3099,"--------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice(mixState, ""unmixed""));; ; TCanvas *c = new TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame3->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooBMixDecay.h; RooCategory.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32Vi",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:5735,Deployability,integrat,integrates,5735,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6022,Deployability,integrat,integrates,6022,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6301,Deployability,integrat,integrates,6301,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:2115,Integrability,integrat,integrated,2115,"""mixed"", -1);; mixState.defineType(""unmixed"", 1);; tagFlav.defineType(""B0"", 1);; tagFlav.defineType(""B0bar"", -1);; ; // Model parameters; RooRealVar dm(""dm"", ""delta m(B)"", 0.472, 0., 1.0);; RooRealVar tau(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0);; RooRealVar w(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0);; RooRealVar dw(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01);; ; // Build a gaussian resolution model; RooRealVar bias1(""bias1"", ""bias1"", 0);; RooRealVar sigma1(""sigma1"", ""sigma1"", 0.01);; RooGaussModel gm1(""gm1"", ""gauss model 1"", dt, bias1, sigma1);; ; // Construct a decay pdf, smeared with single gaussian resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixStat",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:2751,Integrability,integrat,integrated,2751,"an resolution model; RooBMixDecay bmix_gm1(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, RooBMixDecay::DoubleSided);; ; // Generate BMixing data with above set of event errors; std::unique_ptr<RooDataSet> data{bmix_gm1.generate({dt, tagFlav, mixState}, 20000)};; ; // P l o t f u l l d e c a y d i s t r i b u t i o n; // ----------------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice(mixState, ""unmixed""));; ; TCanvas *c = new TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame3->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooBMixD",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:3099,Integrability,integrat,integrated,3099,"--------------------------------------------------; ; // Create frame, plot data and pdf projection (integrated over tagFlav and mixState); RooPlot *frame = dt.frame(Title(""Inclusive decay distribution""));; data->plotOn(frame);; bmix_gm1.plotOn(frame);; ; // P l o t d e c a y d i s t r . f o r m i x e d a n d u n m i x e d s l i c e o f m i x S t a t e; // ------------------------------------------------------------------------------------------------------------------; ; // Create frame, plot data (mixed only); RooPlot *frame2 = dt.frame(Title(""Decay distribution of mixed events""));; data->plotOn(frame2, Cut(""mixState==mixState::mixed""));; ; // Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice(mixState, ""mixed""));; ; // Create frame, plot data (unmixed only); RooPlot *frame3 = dt.frame(Title(""Decay distribution of unmixed events""));; data->plotOn(frame3, Cut(""mixState==mixState::unmixed""));; ; // Position slice in mixState at ""unmixed"" and plot slice of pdf in mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice(mixState, ""unmixed""));; ; TCanvas *c = new TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400);; c->Divide(3);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame2->Draw();; c->cd(3);; gPad->SetLeftMargin(0.15);; frame3->GetYaxis()->SetTitleOffset(1.4);; gPad->SetLogy();; frame3->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooBMixDecay.h; RooCategory.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32Vi",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:5735,Integrability,integrat,integrates,5735,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6022,Integrability,integrat,integrates,6022,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6301,Integrability,integrat,integrates,6301,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:4737,Modifiability,variab,variable,4737,"y.h; RooCategory.h; RooDataSet.h; RooDecay.h; RooGaussModel.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooBMixDecayClass RooBMixDecay is a RooAbsAnaConvPdf implementation that describes the decay of B mesons with the...Definition RooBMixDecay.h:23; RooBMixDecay::DoubleSided@ DoubleSidedDefinition RooBMixDecay.h:26; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68;",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:5751,Modifiability,variab,variables,5751,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6038,Modifiability,variab,variables,6038,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8C.html:6317,Modifiability,variab,variables,6317,"ects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf310_sliceplotDefinition rf310_sliceplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav,mixState); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf310_sliceplot.C. tutorialsroofitrf310_sliceplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8C.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:1553,Availability,error,errors,1553,""", -20, 20); ; # Discrete observables mixState (B0tag==B0reco?) and tagFlav; # (B0tag==B0(bar)?); # Define state labels of discrete observables; mixState = ROOT.RooCategory(""mixState"", ""B0/B0bar mixing state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Model parameters; dm = ROOT.RooRealVar(""dm"", ""delta m(B)"", 0.472, 0.0, 1.0); tau = ROOT.RooRealVar(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0); w = ROOT.RooRealVar(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0); dw = ROOT.RooRealVar(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01); ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.01); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); dat",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:1758,Deployability,integrat,integrated,1758,"state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Model parameters; dm = ROOT.RooRealVar(""dm"", ""delta m(B)"", 0.472, 0.0, 1.0); tau = ROOT.RooRealVar(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0); w = ROOT.RooRealVar(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0); dw = ROOT.RooRealVar(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01); ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.01); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:2308,Deployability,integrat,integrated,2308," gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over vari",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:2638,Deployability,integrat,integrated,2638,"e({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- Ro",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3236,Deployability,integrat,integrates,3236,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3523,Deployability,integrat,integrates,3523,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3802,Deployability,integrat,integrates,3802,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:1758,Integrability,integrat,integrated,1758,"state"", {""mixed"": -1, ""unmixed"": 1}); tagFlav = ROOT.RooCategory(""tagFlav"", ""Flavour of the tagged B0"", {""B0"": 1, ""B0bar"": -1}); ; # Model parameters; dm = ROOT.RooRealVar(""dm"", ""delta m(B)"", 0.472, 0.0, 1.0); tau = ROOT.RooRealVar(""tau"", ""B0 decay time"", 1.547, 1.0, 2.0); w = ROOT.RooRealVar(""w"", ""Flavor Mistag rate"", 0.03, 0.0, 1.0); dw = ROOT.RooRealVar(""dw"", ""Flavor Mistag rate difference between B0 and B0bar"", 0.01); ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 0.01); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:2308,Integrability,integrat,integrated,2308," gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct a decay pdf, with single gaussian resolution model; bmix_gm1 = ROOT.RooBMixDecay(""bmix"", ""decay"", dt, mixState, tagFlav, tau, dm, w, dw, gm1, type=""DoubleSided""); ; # Generate BMixing data with above set of event errors; data = bmix_gm1.generate({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over vari",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:2638,Integrability,integrat,integrated,2638,"e({dt, tagFlav, mixState}, 20000); ; # Plot full decay distribution; # ----------------------------------------------------------; ; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState); frame = dt.frame(Title=""Inclusive decay distribution""); data.plotOn(frame); bmix_gm1.plotOn(frame); ; # Plot decay distribution for mixed and unmixed slice of mixState; # -------------------------------------------------------------------------------------------; ; # Create frame, data (mixed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- Ro",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3236,Integrability,integrat,integrates,3236,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3523,Integrability,integrat,integrates,3523,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3802,Integrability,integrat,integrates,3802,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3252,Modifiability,variab,variables,3252,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3539,Modifiability,variab,variables,3539,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf310__sliceplot_8py.html:3818,Modifiability,variab,variables,3818,"ed only); frame2 = dt.frame(Title=""Decay distribution of mixed events""); data.plotOn(frame2, Cut=""mixState==mixState::mixed""); ; # Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav); bmix_gm1.plotOn(frame2, Slice=(mixState, ""mixed"")); ; # Create frame, data (unmixed only); frame3 = dt.frame(Title=""Decay distribution of unmixed events""); data.plotOn(frame3, Cut=""mixState==mixState::unmixed""); ; # Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav); bmix_gm1.plotOn(frame3, Slice=(mixState, ""unmixed"")); ; c = ROOT.TCanvas(""rf310_sliceplot"", ""rf310_sliceplot"", 1200, 400); c.Divide(3); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.4); ROOT.gPad.SetLogy(); frame3.Draw(); ; c.SaveAs(""rf310_sliceplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (mixState,tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 3787 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 16213 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt represents a slice in (mixState); [#1] INFO:Plotting -- RooAbsReal::plotOn(bmix) plot on dt integrates over variables (tagFlav); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf310_sliceplot.py. tutorialsroofitrf310_sliceplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf310__sliceplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf310__sliceplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:283,Deployability,continuous,continuous,283,". ROOT: tutorials/roofit/rf311_rangeplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf311_rangeplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data ranges in continuous observables . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooConstVar.h""; #include ""RooProdPdf.h""; #include ""RooAddPdf.h""; #include ""RooPolynomial.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf311_rangeplot(); {; ; // C r e a t e 3 D p d f a n d d a t a; // -------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; RooRealVar z(""z"", ""z"", -5, 5);; ; // Create signal pdf gauss(x)*gauss(y)*gauss(z); RooGaussian gx(""gx"", ""gx"", x, 0.0, 1.0);; RooGaussian gy(""gy"", ""gy"", y, 0.0, 1.0);; RooGaussian gz(""gz"", ""gz"", z, 0.0, 1.0);; RooProdPdf sig(""sig"", ""sig"", RooArgSet(gx, gy, gz));; ; // Create background pdf poly(x)*poly(y)*poly(z); RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // P r o j e c t p d f a n d d a t a o n x i n s i g n a l r a n g e; // ----------------------------------------------------------------------------------; ; // Define signal regi",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:2539,Deployability,integrat,integrating,2539,"};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // P r o j e c t p d f a n d d a t a o n x i n s i g n a l r a n g e; // ----------------------------------------------------------------------------------; ; // Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1);; z.setRange(""sigRegion"", -1, 1);; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X in signal range of (Y,Z)""), Bins(40));; ; // Plot subset of data in which all observables are inside ""sigRegion""; // For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); // an implicit definition is used that is identical to the full range (i.e. [-5,5] for x); data->plotOn(frame2, CutRange(""sigRegion""));; ; // Project model on x, integrating projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange(""sigRegion""));; ; TCanvas *c = new TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooConstVar.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAb",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5345,Deployability,integrat,integrates,5345,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5723,Deployability,integrat,integrates,5723,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:2539,Integrability,integrat,integrating,2539,"};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // P r o j e c t p d f a n d d a t a o n x i n s i g n a l r a n g e; // ----------------------------------------------------------------------------------; ; // Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1);; z.setRange(""sigRegion"", -1, 1);; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X in signal range of (Y,Z)""), Bins(40));; ; // Plot subset of data in which all observables are inside ""sigRegion""; // For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); // an implicit definition is used that is identical to the full range (i.e. [-5,5] for x); data->plotOn(frame2, CutRange(""sigRegion""));; ; // Project model on x, integrating projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange(""sigRegion""));; ; TCanvas *c = new TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooConstVar.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAb",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5345,Integrability,integrat,integrates,5345,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5723,Integrability,integrat,integrates,5723,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:3973,Modifiability,variab,variable,3973,"ffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooConstVar.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5361,Modifiability,variab,variables,5361,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8C.html:5739,Modifiability,variab,variables,5739,"nition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjectionRangeRooCmdArg ProjectionRange(const char *rangeName)Definition RooGlobalFunc.cxx:268; RooFit::CutRangeRooCmdArg CutRange(const char *rangeName)Definition RooGlobalFunc.cxx:360; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf311_rangeplotDefinition rf311_rangeplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z) in range sigRegion; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf311_rangeplot.C. tutorialsroofitrf311_rangeplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8C.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:298,Deployability,continuous,continuous,298,". ROOT: tutorials/roofit/rf311_rangeplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf311_rangeplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: projecting pdf and data ranges in continuous observables . ; import ROOT; ; # Create 3D pdf and data; # -------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; # Create signal pdf gauss(x)*gauss(y)*gauss(z); gx = ROOT.RooGaussian(""gx"", ""gx"", x, 0.0, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, 0.0, 1.0); gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 1.0); sig = ROOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:2641,Deployability,integrat,integrates,2641,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:3019,Deployability,integrat,integrates,3019,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:2641,Integrability,integrat,integrates,2641,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:3019,Integrability,integrat,integrates,3019,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:2657,Modifiability,variab,variables,2657,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf311__rangeplot_8py.html:3035,Modifiability,variab,variables,3035,"------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Project pdf and data on x in signal range; # ----------------------------------------------------------------------------------; ; # Define signal region in y and z observables; y.setRange(""sigRegion"", -1, 1); z.setRange(""sigRegion"", -1, 1); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X in signal range of (Y,Z)"", Bins=40); ; # Plot subset of data in which all observables are inside ""sigRegion""; # For observables that do not have an explicit ""sigRegion"" range defined (e.g. observable); # an implicit definition is used that is identical to the full range (i.e.; # [-5,5] for x); data.plotOn(frame2, CutRange=""sigRegion""); ; # Project model on x, projected observables (y,z) only in ""sigRegion""; model.plotOn(frame2, ProjectionRange=""sigRegion""); ; c = ROOT.TCanvas(""rf311_rangeplot"", ""rf310_rangeplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); ; c.SaveAs(""rf311_rangeplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y); [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Eval -- RooRealVar::setRange(z) new range named 'sigRegion' created with bounds [-1,1]; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1692 events out of 20000 total events; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (z,y) in range sigRegion; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf311_rangeplot.py. tutorialsroofitrf311_rangeplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf311__rangeplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf311__rangeplot_8py.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6249,Availability,error,error,6249,"O:Eval -- RooRealVar::setRange(y) new range named 'SB2' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6693,Availability,error,error,6693,"nds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating con",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:7605,Availability,error,error,7605,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:257,Performance,perform,performing,257,". ROOT: tutorials/roofit/rf312_multirangefit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf312_multirangefit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: performing fits in multiple (disjoint) ranges in one or more dimensions ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooAddPdf.h""; #include ""RooPolynomial.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; using namespace RooFit;; ; void rf312_multirangefit(); {; ; // C r e a t e 2 D p d f a n d d a t a; // -------------------------------------------; ; // Define observables x,y; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", -10, 10);; ; // Construct the signal pdf gauss(x)*gauss(y); RooRealVar mx(""mx"", ""mx"", 1, -10, 10);; RooRealVar my(""my"", ""my"", 1, -10, 10);; ; RooGaussian gx(""gx"", ""gx"", x, mx, 1.0);; RooGaussian gy(""gy"", ""gy"", y, my, 1.0);; ; RooProdPdf sig(""sig"", ""sig"", gx, gy);; ; // Construct the background pdf (flat in x,y); RooPolynomial px(""px"", ""px"", x);; RooPolynomial py(""py"", ""py"", y);; RooProdPdf bkg(""bkg"", ""bkg"", px, py);; ; // Construct the composite model sig+bkg; RooRealVar f(""f"", ""f"", 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), f);; ; // Sample 10000 events in (x,y) from the model; std::unique_ptr<RooDataSet> modelData{model.generate({x, y}, 10000)};; ; // D e f i n e s i g n a l a n d s i d e b a n d r e g i o n s; // -------------------------------------------------------------------; ; // Construct the SideBand1,SideBand2,Signal regions; //; // |; // +-------------+-----------+; // | | |; // | Side | Sig |; // | Band1 | nal |; // | | |; // --+-------------+-----------+--; // | |; // | Side |; // | Band2 |; // | |; // +-------------+-----------+; // |; ; x.setRange(""SB1"", -10, +10);; y.setRange(""SB1"", -10, 0);; ; x.setRange(""SB2"", -10, 0);; y.setRang",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:2873,Performance,perform,perform,2873," | Band2 |; // | |; // +-------------+-----------+; // |; ; x.setRange(""SB1"", -10, +10);; y.setRange(""SB1"", -10, 0);; ; x.setRange(""SB2"", -10, 0);; y.setRange(""SB2"", 0, +10);; ; x.setRange(""SIG"", 0, +10);; y.setRange(""SIG"", 0, +10);; ; x.setRange(""FULL"", -10, +10);; y.setRange(""FULL"", -10, +10);; ; // P e r f o r m f i t s i n i n d i v i d u a l s i d e b a n d r e g i o n s; // -------------------------------------------------------------------------------------; ; // Perform fit in SideBand1 region (RooAddPdf coefficients will be interpreted in full range); std::unique_ptr<RooFitResult> r_sb1{model.fitTo(*modelData, Range(""SB1""), Save(), PrintLevel(-1))};; ; // Perform fit in SideBand2 region (RooAddPdf coefficients will be interpreted in full range); std::unique_ptr<RooFitResult> r_sb2{model.fitTo(*modelData, Range(""SB2""), Save(), PrintLevel(-1))};; ; // P e r f o r m f i t s i n j o i n t s i d e b a n d r e g i o n s; // -----------------------------------------------------------------------------; ; // Now perform fit to joint 'L-shaped' sideband region 'SB1|SB2'; // (RooAddPdf coefficients will be interpreted in full range); std::unique_ptr<RooFitResult> r_sb12{model.fitTo(*modelData, Range(""SB1,SB2""), Save(), PrintLevel(-1))};; ; // Print results for comparison; r_sb1->Print();; r_sb2->Print();; r_sb12->Print();; }; f#define f(i)Definition RSha256.hxx:104; RooAddPdf.h; RooDataSet.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; mxOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6343,Performance,optimiz,optimization,6343,"l -- RooRealVar::setRange(x) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6440,Performance,optimiz,optimization,6440,"RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coeffic",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6787,Performance,optimiz,optimization,6787," created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating cons",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:6884,Performance,optimiz,optimization,6884,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:7699,Performance,optimiz,optimization,7699,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8C.html:7796,Performance,optimiz,optimization,7796,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4020,Availability,error,error,4020,"O:Eval -- RooRealVar::setRange(y) new range named 'SB2' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4464,Availability,error,error,4464,"nds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating con",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:5376,Availability,error,error,5376,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:272,Performance,perform,performing,272,". ROOT: tutorials/roofit/rf312_multirangefit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf312_multirangefit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: performing fits in multiple (disjoint) ranges in one or more dimensions ; ; import ROOT; ; ; # Create 2D pdf and data; # -------------------------------------------; ; # Define observables x,y; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Construct the signal pdf gauss(x)*gauss(y); mx = ROOT.RooRealVar(""mx"", ""mx"", 1, -10, 10); my = ROOT.RooRealVar(""my"", ""my"", 1, -10, 10); ; gx = ROOT.RooGaussian(""gx"", ""gx"", x, mx, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, my, 1.0); ; sig = ROOT.RooProdPdf(""sig"", ""sig"", gx, gy); ; # Construct the background pdf (flat in x,y); px = ROOT.RooPolynomial(""px"", ""px"", x); py = ROOT.RooPolynomial(""py"", ""py"", y); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", px, py); ; # Construct the composite model sig+bkg; f = ROOT.RooRealVar(""f"", ""f"", 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [f]); ; # Sample 10000 events in (x,y) from the model; modelData = model.generate({x, y}, 10000); ; # Define signal and sideband regions; # -------------------------------------------------------------------; ; # Construct the SideBand1,SideBand2, regions; #; # |; # +-------------+-----------+; # | | |; # | Side | Sig |; # | Band1 | nal |; # | | |; # --+-------------+-----------+--; # | |; # | Side |; # | Band2 |; # | |; # +-------------+-----------+; # |; ; x.setRange(""SB1"", -10, +10); y.setRange(""SB1"", -10, 0); ; x.setRange(""SB2"", -10, 0); y.setRange(""SB2"", 0, +10); ; x.setRange(""SIG"", 0, +10); y.setRange(""SIG"", 0, +10); ; x.setRange(""FULL"", -10, +10); y.setRange(""FULL"", -10, +10); ; # Perform fits in individual sideband regions; # -------------------------------------------------------------------------------------; ; # Perform fit in SideBand1 re",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:2453,Performance,perform,perform,2453,"ons; #; # |; # +-------------+-----------+; # | | |; # | Side | Sig |; # | Band1 | nal |; # | | |; # --+-------------+-----------+--; # | |; # | Side |; # | Band2 |; # | |; # +-------------+-----------+; # |; ; x.setRange(""SB1"", -10, +10); y.setRange(""SB1"", -10, 0); ; x.setRange(""SB2"", -10, 0); y.setRange(""SB2"", 0, +10); ; x.setRange(""SIG"", 0, +10); y.setRange(""SIG"", 0, +10); ; x.setRange(""FULL"", -10, +10); y.setRange(""FULL"", -10, +10); ; # Perform fits in individual sideband regions; # -------------------------------------------------------------------------------------; ; # Perform fit in SideBand1 region (ROOT.RooAddPdf coefficients will be; # interpreted in full range); r_sb1 = model.fitTo(modelData, Range=""SB1"", Save=True, PrintLevel=-1); ; # Perform fit in SideBand2 region (ROOT.RooAddPdf coefficients will be; # interpreted in full range); r_sb2 = model.fitTo(modelData, Range=""SB2"", Save=True, PrintLevel=-1); ; # Perform fits in joint sideband regions; # -----------------------------------------------------------------------------; ; # Now perform fit to joint 'L-shaped' sideband region 'SB1|SB2'; # (ROOT.RooAddPdf coefficients will be interpreted in full range); r_sb12 = model.fitTo(modelData, Range=""SB1,SB2"", Save=True, PrintLevel=-1); ; # Print results for comparison; r_sb1.Print(); r_sb2.Print(); r_sb12.Print(); [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SB2' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] I",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4114,Performance,optimiz,optimization,4114,"l -- RooRealVar::setRange(x) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4211,Performance,optimiz,optimization,4211,"RooRealVar::setRange(y) new range named 'SIG' created with bounds [0,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'FULL' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coeffic",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4558,Performance,optimiz,optimization,4558," created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating cons",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:4655,Performance,optimiz,optimization,4655,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:5470,Performance,optimiz,optimization,5470,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf312__multirangefit_8py.html:5567,Performance,optimiz,optimization,5567,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,doc/master/rf312__multirangefit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html
https://root.cern/doc/master/rf313__paramranges_8C.html:336,Deployability,integrat,integration,336,". ROOT: tutorials/roofit/rf313_paramranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf313_paramranges.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parametrized ranges to define non-rectangular regions for fitting and integration . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf313_paramranges(); {; ; // C r e a t e 3 D p d f; // -------------------------; ; // Define observable (x,y,z); RooRealVar x(""x"", ""x"", 0, 10);; RooRealVar y(""y"", ""y"", 0, 10);; RooRealVar z(""z"", ""z"", 0, 10);; ; // Define 3 dimensional pdf; RooRealVar z0(""z0"", ""z0"", -0.1, 1);; RooPolynomial px(""px"", ""px"", x, RooConst(0.0));; RooPolynomial py(""py"", ""py"", y, RooConst(0.0));; RooPolynomial pz(""pz"", ""pz"", z, z0);; RooProdPdf pxyz(""pxyz"", ""pxyz"", RooArgSet(px, py, pz));; ; // D e f i n e d n o n - r e c t a n g u l a r r e g i o n R i n ( x , y , z ); // -------------------------------------------------------------------------------------; ; //; // R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; //; ; // Construct range parametrized in ""R"" in y [ 0.1*x, 0.9*x ]; RooFormulaVar ylo(""ylo"", ""0.1*x"", x);; RooFormulaVar yhi(""yhi"", ""0.9*x"", x);; y.setRange(""R"", ylo, yhi);; ; // Construct parametrized ranged ""R"" in z [ 0, 0.1*y^2 ]; RooFormulaVar zlo(""zlo"", ""0.0*y"", y);; RooFormulaVar zhi(""zhi"", ""0.1*y*y"", y);; z.setRange(""R"", zlo, zhi);; ; // C a l c u l a t e i n t e g r a l o f n o r m a l i z e d p d f i n R; // ----------------------------------------------------------------------------------; ; // Create integral over normalized pdf model over x,y,z in ""R"" region; std::unique_ptr<RooAbsReal> intPdf{pxyz.createIntegral(RooArgSet(x, y, z), RooArgSet(x, y, z), ""R"")};; ; // Plot value of integral as function ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:4036,Deployability,integrat,integrator,4036,"gSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf313_paramrangesDefinition rf313_paramranges.py:1; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf313_paramranges.C. tutorialsroofitrf313_paramranges.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:4188,Deployability,integrat,integrator,4188,"gSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf313_paramrangesDefinition rf313_paramranges.py:1; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf313_paramranges.C. tutorialsroofitrf313_paramranges.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:336,Integrability,integrat,integration,336,". ROOT: tutorials/roofit/rf313_paramranges.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf313_paramranges.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parametrized ranges to define non-rectangular regions for fitting and integration . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf313_paramranges(); {; ; // C r e a t e 3 D p d f; // -------------------------; ; // Define observable (x,y,z); RooRealVar x(""x"", ""x"", 0, 10);; RooRealVar y(""y"", ""y"", 0, 10);; RooRealVar z(""z"", ""z"", 0, 10);; ; // Define 3 dimensional pdf; RooRealVar z0(""z0"", ""z0"", -0.1, 1);; RooPolynomial px(""px"", ""px"", x, RooConst(0.0));; RooPolynomial py(""py"", ""py"", y, RooConst(0.0));; RooPolynomial pz(""pz"", ""pz"", z, z0);; RooProdPdf pxyz(""pxyz"", ""pxyz"", RooArgSet(px, py, pz));; ; // D e f i n e d n o n - r e c t a n g u l a r r e g i o n R i n ( x , y , z ); // -------------------------------------------------------------------------------------; ; //; // R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; //; ; // Construct range parametrized in ""R"" in y [ 0.1*x, 0.9*x ]; RooFormulaVar ylo(""ylo"", ""0.1*x"", x);; RooFormulaVar yhi(""yhi"", ""0.9*x"", x);; y.setRange(""R"", ylo, yhi);; ; // Construct parametrized ranged ""R"" in z [ 0, 0.1*y^2 ]; RooFormulaVar zlo(""zlo"", ""0.0*y"", y);; RooFormulaVar zhi(""zhi"", ""0.1*y*y"", y);; z.setRange(""R"", zlo, zhi);; ; // C a l c u l a t e i n t e g r a l o f n o r m a l i z e d p d f i n R; // ----------------------------------------------------------------------------------; ; // Create integral over normalized pdf model over x,y,z in ""R"" region; std::unique_ptr<RooAbsReal> intPdf{pxyz.createIntegral(RooArgSet(x, y, z), RooArgSet(x, y, z), ""R"")};; ; // Plot value of integral as function ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:4036,Integrability,integrat,integrator,4036,"gSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf313_paramrangesDefinition rf313_paramranges.py:1; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf313_paramranges.C. tutorialsroofitrf313_paramranges.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:4188,Integrability,integrat,integrator,4188,"gSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf313_paramrangesDefinition rf313_paramranges.py:1; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf313_paramranges.C. tutorialsroofitrf313_paramranges.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8C.html:2932,Modifiability,variab,variable,2932,"e_ptr<RooAbsReal> intPdf{pxyz.createIntegral(RooArgSet(x, y, z), RooArgSet(x, y, z), ""R"")};; ; // Plot value of integral as function of pdf parameter z0; RooPlot *frame = z0.frame(Title(""Integral of pxyz over x,y,z in region R""));; intPdf->plotOn(frame);; ; new TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.6);; frame->Draw();; ; return;; }; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; ",MatchSource.WIKI,doc/master/rf313__paramranges_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8C.html
https://root.cern/doc/master/rf313__paramranges_8py.html:352,Deployability,integrat,integration,352,". ROOT: tutorials/roofit/rf313_paramranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf313_paramranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramra",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:2126,Deployability,integrat,integrator,2126,"fine 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf313_paramranges.py. tutorialsroofitrf313_paramranges.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:2278,Deployability,integrat,integrator,2278,"fine 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf313_paramranges.py. tutorialsroofitrf313_paramranges.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:352,Integrability,integrat,integration,352,". ROOT: tutorials/roofit/rf313_paramranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf313_paramranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramra",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:2126,Integrability,integrat,integrator,2126,"fine 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf313_paramranges.py. tutorialsroofitrf313_paramranges.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:2278,Integrability,integrat,integrator,2278,"fine 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf313_paramranges.py. tutorialsroofitrf313_paramranges.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:281,Modifiability,parameteriz,parameterized,281,". ROOT: tutorials/roofit/rf313_paramranges.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf313_paramranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramra",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:1064,Modifiability,parameteriz,parameterized,1064,"ce. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf313_paramranges.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegra",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf313__paramranges_8py.html:1243,Modifiability,parameteriz,parameterized,1243," Multidimensional models: working with parameterized ranges to define non-rectangular regions for fitting and integration . ; import ROOT; ; ; # Create 3D pdf; # -------------------------; ; # Define observable (x,y,z); x = ROOT.RooRealVar(""x"", ""x"", 0, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 10); z = ROOT.RooRealVar(""z"", ""z"", 0, 10); ; # Define 3 dimensional pdf; z0 = ROOT.RooRealVar(""z0"", ""z0"", -0.1, 1); px = ROOT.RooPolynomial(""px"", ""px"", x, [0.0]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.0]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z, [z0]); pxyz = ROOT.RooProdPdf(""pxyz"", ""pxyz"", [px, py, pz]); ; # Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; ; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; ; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]; ylo = ROOT.RooFormulaVar(""ylo"", ""0.1*x"", [x]); yhi = ROOT.RooFormulaVar(""yhi"", ""0.9*x"", [x]); y.setRange(""R"", ylo, yhi); ; # Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]; zlo = ROOT.RooFormulaVar(""zlo"", ""0.0*y"", [y]); zhi = ROOT.RooFormulaVar(""zhi"", ""0.1*y*y"", [y]); z.setRange(""R"", zlo, zhi); ; # Calculate integral of normalized pdf in R; # ----------------------------------------------------------------------------------; ; # Create integral over normalized pdf model over x,y, in ""R"" region; intPdf = pxyz.createIntegral({x, y, z}, {x, y, z}, ""R""); ; # Plot value of integral as function of pdf parameter z0; frame = z0.frame(Title=""Integral of pxyz over x,y, in region R""); intPdf.plotOn(frame); ; c = ROOT.TCanvas(""rf313_paramranges"", ""rf313_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf313_paramranges.png""); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_Norm[x,y,z]_Int[y|R]_Int[x|R]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(pxyz_Int[z|R]_",MatchSource.WIKI,doc/master/rf313__paramranges_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf313__paramranges_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8C.html:5303,Availability,error,error,5303,"g=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf314_paramfitrangeDefinition rf314_paramfitrange.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf314_paramfitrange.C. tutorialsroofitrf314_paramfitrange.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html
https://root.cern/doc/master/rf314__paramfitrange_8C.html:5539,Deployability,update,updateFitRangeNorm,5539,"g=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf314_paramfitrangeDefinition rf314_paramfitrange.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf314_paramfitrange.C. tutorialsroofitrf314_paramfitrange.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html
https://root.cern/doc/master/rf314__paramfitrange_8C.html:3694,Modifiability,variab,variable,3694,"ar.h; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdf::generateRooFit::OwningPtr< RooDataSet > generate(const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={})See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,...Definition RooAbsPdf.h:57; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::Line",MatchSource.WIKI,doc/master/rf314__paramfitrange_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html
https://root.cern/doc/master/rf314__paramfitrange_8C.html:5397,Performance,optimiz,optimization,5397,"g=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf314_paramfitrangeDefinition rf314_paramfitrange.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf314_paramfitrange.C. tutorialsroofitrf314_paramfitrange.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html
https://root.cern/doc/master/rf314__paramfitrange_8C.html:5494,Performance,optimiz,optimization,5494,"g=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ProtoDataRooCmdArg ProtoData(const RooDataSet &protoData, bool randomizeOrder=false, bool resample=false)Definition RooGlobalFunc.cxx:812; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf314_paramfitrangeDefinition rf314_paramfitrange.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf314_paramfitrange.C. tutorialsroofitrf314_paramfitrange.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8C.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:2461,Availability,error,error,2461,"----------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf314_paramranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf314_paramfitrange.py. tutorialsroofitrf314_paramfitrange.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:2697,Deployability,update,updateFitRangeNorm,2697,"----------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf314_paramranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf314_paramfitrange.py. tutorialsroofitrf314_paramfitrange.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:285,Modifiability,parameteriz,parameterized,285,". ROOT: tutorials/roofit/rf314_paramfitrange.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf314_paramfitrange.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges in a fit. ; This an example of a fit with an acceptance that changes per-event; pdf = exp(-t/tau) with t[tmin,5]; where t and tmin are both observables in the dataset. ; import ROOT; ; ; # Define observables and decay pdf; # ---------------------------------------------------------------; ; # Declare observables; t = ROOT.RooRealVar(""t"", ""t"", 0, 5); tmin = ROOT.RooRealVar(""tmin"", ""tmin"", 0, 0, 5); ; # Make parameterized range in t : [tmin,5]; t.setRange(tmin, ROOT.RooFit.RooConst(t.getMax())); ; # Make pdf; tau = ROOT.RooRealVar(""tau"", ""tau"", -1.54, -10, -0.1); model = ROOT.RooExponential(""model"", ""model"", t, tau); ; # Create input data; # ------------------------------------; ; # Generate complete dataset without acceptance cuts (for reference); dall = model.generate({t}, 10000); ; # Generate a (fake) prototype dataset for acceptance limit values; tmp = ROOT.RooGaussian(""gmin"", ""gmin"", tmin, 0.0, 0.5).generate({tmin}, 5000); ; # Generate dataset with t values that observe (t>tmin); dacc = model.generate({t}, ProtoData=tmp); ; # Fit pdf to data in acceptance region; # -----------------------------------------------------------------------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPa",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:716,Modifiability,parameteriz,parameterized,716,". ROOT: tutorials/roofit/rf314_paramfitrange.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf314_paramfitrange.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: working with parameterized ranges in a fit. ; This an example of a fit with an acceptance that changes per-event; pdf = exp(-t/tau) with t[tmin,5]; where t and tmin are both observables in the dataset. ; import ROOT; ; ; # Define observables and decay pdf; # ---------------------------------------------------------------; ; # Declare observables; t = ROOT.RooRealVar(""t"", ""t"", 0, 5); tmin = ROOT.RooRealVar(""tmin"", ""tmin"", 0, 0, 5); ; # Make parameterized range in t : [tmin,5]; t.setRange(tmin, ROOT.RooFit.RooConst(t.getMax())); ; # Make pdf; tau = ROOT.RooRealVar(""tau"", ""tau"", -1.54, -10, -0.1); model = ROOT.RooExponential(""model"", ""model"", t, tau); ; # Create input data; # ------------------------------------; ; # Generate complete dataset without acceptance cuts (for reference); dall = model.generate({t}, 10000); ; # Generate a (fake) prototype dataset for acceptance limit values; tmp = ROOT.RooGaussian(""gmin"", ""gmin"", tmin, 0.0, 0.5).generate({tmin}, 5000); ; # Generate dataset with t values that observe (t>tmin); dacc = model.generate({t}, ProtoData=tmp); ; # Fit pdf to data in acceptance region; # -----------------------------------------------------------------------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPa",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:2555,Performance,optimiz,optimization,2555,"----------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf314_paramranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf314_paramfitrange.py. tutorialsroofitrf314_paramfitrange.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf314__paramfitrange_8py.html:2652,Performance,optimiz,optimization,2652,"----------; ; r = model.fitTo(dacc, Save=True, PrintLevel=-1); ; # Plot fitted pdf on full and accepted data; # ---------------------------------------------------------------------------------; ; # Make plot frame, datasets and overlay model; frame = t.frame(Title=""Fit to data with per-event acceptance""); dall.plotOn(frame, MarkerColor=""r"", LineColor=""r""); model.plotOn(frame); dacc.plotOn(frame); ; # Print fit results to demonstrate absence of bias; r.Print(""v""); ; c = ROOT.TCanvas(""rf314_paramranges"", ""rf314_paramranges"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf314_paramranges.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[t]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 5000 will supersede previous event count of 10000 for normalization of PDF projections; ; RooFitResult: minimized FCN value: 2823.97, estimated distance to minimum: 3.17108e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter InitialValue FinalValue +/- Error GblCorr.; -------------------- ------------ -------------------------- --------; tau -1.5400e+00 -1.5335e+00 +/- 2.22e-02 <none>; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf314_paramfitrange.py. tutorialsroofitrf314_paramfitrange.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf314__paramfitrange_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf314__paramfitrange_8py.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7392,Availability,error,error,7392,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7582,Availability,error,error,7582,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7597,Availability,avail,available,7597,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7708,Availability,error,error,7708,"Definition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7723,Availability,avail,available,7723,"Definition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9233,Availability,error,error,9233,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9248,Availability,avail,available,9248,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9359,Availability,error,error,9359,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) us",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9374,Availability,avail,available,9374,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) us",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:303,Deployability,integrat,integration,303,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:783,Deployability,integrat,integration,783,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:848,Deployability,integrat,integration,848,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4359,Deployability,integrat,integrated,4359,"RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in ",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4537,Deployability,integrat,integration,4537," const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(O",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4549,Deployability,configurat,configuration,4549," const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(O",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7000,Deployability,integrat,integrator,7000,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7861,Deployability,integrat,integrator,7861," safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFC",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:10095,Deployability,integrat,integrator,10095,"99.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:303,Integrability,integrat,integration,303,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:783,Integrability,integrat,integration,783,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:848,Integrability,integrat,integration,848,". ROOT: tutorials/roofit/rf315_projectpdf.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf315_projectpdf.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; #include ""RooRealVar.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooProdPdf.h""; #include ""RooPolyVar.h""; #include ""TH1.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooNumIntConfig.h""; using namespace RooFit;; ; void rf315_projectpdf(); {; // C r e a t e p d f m ( x , y ) = g x ( x | y ) * g ( y ); // --------------------------------------------------------------; ; // Increase default precision of numeric integration; // as this exercise has high sensitivity to numeric integration precision; RooAbsPdf::defaultIntegratorConfig()->setEpsRel(1e-8);; RooAbsPdf::defaultIntegratorConfig()->setEpsAbs(1e-8);; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -2, 2);; ; // Create function f(y) = a0 + a1*y; RooRealVar a0(""a0"", ""a0"", 0);; RooRealVar a1(""a1"", ""a1"", -1.5, -3, 1);; RooPolyVar fy(""fy"", ""fy"", y, RooArgSet(a0, a1));; ; // Create gaussx(x,f(y),sx); RooRealVar sigmax(""sigmax"", ""width of gaussian"", 0.5);; RooGaussian gaussx(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax);; ; // Create gaussy(y,0,2); RooGaussian gaussy(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0);; ; // Create gaussx(x,sx|y) * gaussy(y); RooProdPdf model(""model"", ""gaussx(x|y)*gaussy(y)"", gaussy, Conditional(gaussx, x));; ; // M a r g i n a l i z e m ( x , y ) t o m ( x ); // ----------------------------------------------------; ; // modelx(x) = Int model(x,y) dy; RooAbsPdf *modelx = model.createProjection(y);; ; // U s e m a r g i n a l i z e d p . d . f . a s r e g u l a r 1 - D p . d . f .; // ------------------------------------------------------------------------------------------; ; // Samp",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:3192,Integrability,interface,interface,3192," RooPlot *frame = x.frame(40);; data->plotOn(frame);; modelx->plotOn(frame);; ; // Make 2D histogram of model(x,y); TH1 *hh = model.createHistogram(""x,y"");; hh->SetLineColor(kBlue);; ; TCanvas *c = new TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.20);; hh->GetZaxis()->SetTitleOffset(2.5);; hh->Draw(""surf"");; }; c#define c(i)Definition RSha256.hxx:101; e#define e(i)Definition RSha256.hxx:103; RooDataHist.h; RooGaussian.h; RooNumIntConfig.h; RooPlot.h; RooPolyVar.h; RooProdPdf.h; RooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::plotOnRooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAb",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4359,Integrability,integrat,integrated,4359,"RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in ",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4537,Integrability,integrat,integration,4537," const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(O",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7000,Integrability,integrat,integrator,7000,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7549,Integrability,synchroniz,synchronize,7549,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7675,Integrability,synchroniz,synchronize,7675,"Definition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7861,Integrability,integrat,integrator,7861," safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFC",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9200,Integrability,synchroniz,synchronize,9200,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9326,Integrability,synchroniz,synchronize,9326,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) us",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:10095,Integrability,integrat,integrator,10095,"99.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:4549,Modifiability,config,configuration,4549," const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAbsPdf::generateBinnedvirtual RooFit::OwningPtr< RooDataHist > generateBinned(const RooArgSet &whatVars, double nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(O",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:5363,Modifiability,variab,variable,5363,"et)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolyVarA RooAbsReal implementing a polynomial in terms of a list of RooAbsReal coefficients.Definition RooPolyVar.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:7486,Performance,optimiz,optimization,7486,"ogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:9971,Performance,optimiz,optimization,9971,"99.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf315_projectpdf.C. tutorialsroofitrf315_projectpdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8C.html:6838,Safety,safe,safe,6838,"DFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf315_projectpdfDefinition rf315_projectpdf.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooR",MatchSource.WIKI,doc/master/rf315__projectpdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8C.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:2965,Availability,error,error,2965," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3155,Availability,error,error,3155," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3170,Availability,avail,available,3170," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3281,Availability,error,error,3281,"; c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3296,Availability,avail,available,3296,"; c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4806,Availability,error,error,4806,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ v",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4821,Availability,avail,available,4821,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ v",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4932,Availability,error,error,4932,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on T",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4947,Availability,avail,available,4947,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on T",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:318,Deployability,integrat,integration,318,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:497,Deployability,integrat,integration,497,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:561,Deployability,integrat,integration,561,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:2573,Deployability,integrat,integrator,2573," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3434,Deployability,integrat,integrator,3434," safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFC",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:5668,Deployability,integrat,integrator,5668,"9.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:318,Integrability,integrat,integration,318,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:497,Integrability,integrat,integration,497,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:561,Integrability,integrat,integration,561,". ROOT: tutorials/roofit/rf315_projectpdf.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf315_projectpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: marginizalization of multi-dimensional pdfs through integration . ; import ROOT; ; ; # Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; ; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision; ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsRel(1e-8); ROOT.RooAbsPdf.defaultIntegratorConfig().setEpsAbs(1e-8); ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -2, 2); ; # Create function f(y) = a0 + a1*y; a0 = ROOT.RooRealVar(""a0"", ""a0"", 0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -1.5, -3, 1); fy = ROOT.RooPolyVar(""fy"", ""fy"", y, [a0, a1]); ; # Create gaussx(x,f(y),sx); sigmax = ROOT.RooRealVar(""sigmax"", ""width of gaussian"", 0.5); gaussx = ROOT.RooGaussian(""gaussx"", ""Gaussian in x with shifting mean in y"", x, fy, sigmax); ; # Create gaussy(y,0,2); gaussy = ROOT.RooGaussian(""gaussy"", ""Gaussian in y"", y, 0.0, 2.0); ; # Create gaussx(x,sx|y) * gaussy(y); model = ROOT.RooProdPdf(; ""model"",; ""gaussx(x|y)*gaussy(y)"",; {gaussy},; Conditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = RO",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:2573,Integrability,integrat,integrator,2573," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3122,Integrability,synchroniz,synchronize,3122," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3248,Integrability,synchroniz,synchronize,3248,"; c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3434,Integrability,integrat,integrator,3434," safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFC",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4773,Integrability,synchroniz,synchronize,4773,"evFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ v",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:4899,Integrability,synchroniz,synchronize,4899,"a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on T",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:5668,Integrability,integrat,integrator,5668,"9.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:3059,Performance,optimiz,optimization,3059," frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 19",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:5544,Performance,optimiz,optimization,5544,"9.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 y=0, [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.003051, ; prevFCN = 1899.958497 y=-0.003051, ; prevFCN = 1899.958497 y=0.03051, ; prevFCN = 1899.958497 y=-0.03051, ; prevFCN = 1899.958497 y=0.3039, ; prevFCN = 1899.958497 y=-0.3039, ; prevFCN = 1899.958497 y=0.9764, ; prevFCN = 1899.958497 y=-0.9764, ; prevFCN = 1899.958497 [#0] ERROR:Minimization -- RooMinimizer::calculateHessErrors() Error when calculating Hessian; y=0, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf315_projectpdf.py. tutorialsroofitrf315_projectpdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf315__projectpdf_8py.html:2411,Safety,safe,safe,2411,"onditional=({gaussx}, {x}),; ); ; # Marginalize m(x,y) to m(x); # ----------------------------------------------------; ; # modelx(x) = Int model(x,y) dy; modelx = model.createProjection({y}); ; # Use marginalized pdf as regular 1D pdf; # -----------------------------------------------; ; # Sample 1000 events from modelx; data = modelx.generateBinned({x}, 1000); ; # Fit modelx to toy data; modelx.fitTo(data, Verbose=True, PrintLevel=-1); ; # Plot modelx over data; frame = x.frame(40); data.plotOn(frame); modelx.plotOn(frame); ; # Make 2D histogram of model(x,y); hh = model.createHistogram(""x,y""); hh.SetLineColor(ROOT.kBlue); ; c = ROOT.TCanvas(""rf315_projectpdf"", ""rf315_projectpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.20); hh.GetZaxis().SetTitleOffset(2.5); hh.Draw(""surf""); c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRe",MatchSource.WIKI,doc/master/rf315__projectpdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:2116,Deployability,integrat,integrate,2116,"Polynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; ; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:3153,Deployability,integrat,integration,3153,"ate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:3494,Deployability,integrat,integrating,3494,"tio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const R",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:4622,Deployability,integrat,integrated,4622,"plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of th",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:6817,Deployability,integrat,integrates,6817,"alue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf316_llratioplotDefinition rf316_llratioplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf316_llratioplot.C. tutorialsroofitrf316_llratioplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:2726,Energy Efficiency,reduce,reduce,2726,"ig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; ; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:3439,Energy Efficiency,reduce,reduce,3439," *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:2116,Integrability,integrat,integrate,2116,"Polynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; ; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:3153,Integrability,integrat,integration,3153,"ate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:3494,Integrability,integrat,integrating,3494,"tio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const R",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:4404,Integrability,interface,interface,4404,"projDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on x, integrating projected observables (y,z) with Monte Carlo technique; // on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:4622,Integrability,integrat,integrated,4622,"plotOn(frame2, ProjWData(*mcprojDataSel));; ; TCanvas *c = new TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400);; c->Divide(2);; c->cd(1);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; c->cd(2);; gPad->SetLeftMargin(0.15);; frame2->GetYaxis()->SetTitleOffset(1.4);; frame2->Draw();; }; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooProdPdf.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of th",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:6817,Integrability,integrat,integrates,6817,"alue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf316_llratioplotDefinition rf316_llratioplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf316_llratioplot.C. tutorialsroofitrf316_llratioplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:312,Modifiability,enhance,enhanced,312,". ROOT: tutorials/roofit/rf316_llratioplot.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf316_llratioplot.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""RooProdPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf316_llratioplot(); {; ; // C r e a t e 3 D p d f a n d d a t a; // -------------------------------------------; ; // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);; RooRealVar z(""z"", ""z"", -5, 5);; ; // Create signal pdf gauss(x)*gauss(y)*gauss(z); RooGaussian gx(""gx"", ""gx"", x, 0.0, 1.0);; RooGaussian gy(""gy"", ""gy"", y, 0.0, 1.0);; RooGaussian gz(""gz"", ""gz"", z, 0.0, 1.0);; RooProdPdf sig(""sig"", ""sig"", RooArgSet(gx, gy, gz));; ; // Create background pdf poly(x)*poly(y)*poly(z); RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(0.1, -0.004));; RooPolynomial pz(""pz"", ""pz"", z);; RooProdPdf bkg(""bkg"", ""bkg"", RooArgSet(px, py, pz));; ; // Create composite pdf sig+bkg; RooRealVar fsig(""fsig"", ""signal fraction"", 0.1, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgList(sig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // --------------------------------------------------------",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:5440,Modifiability,variab,variable,5440,"ad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg C",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:6833,Modifiability,variab,variables,6833,"alue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf316_llratioplotDefinition rf316_llratioplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf316_llratioplot.C. tutorialsroofitrf316_llratioplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:6928,Modifiability,variab,variables,6928,"alue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf316_llratioplotDefinition rf316_llratioplot.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf316_llratioplot.C. tutorialsroofitrf316_llratioplot.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8C.html:2272,Testability,log,log,2272,"ig, bkg), fsig);; ; std::unique_ptr<RooDataSet> data{model.generate({x, y, z}, 20000)};; ; // P r o j e c t p d f a n d d a t a o n x; // -------------------------------------------------; ; // Make plain projection of data and pdf on x observable; RooPlot *frame = x.frame(Title(""Projection of 3D data and pdf on X""), Bins(40));; data->plotOn(frame);; model.plotOn(frame);; ; // D e f i n e p r o j e c t e d s i g n a l l i k e l i h o o d r a t i o; // ----------------------------------------------------------------------------------; ; // Calculate projection of signal and total likelihood on (y,z) observables; // i.e. integrate signal and composite model over x; RooAbsPdf *sigyz = sig.createProjection(x);; RooAbsPdf *totyz = model.createProjection(x);; ; // Construct the log of the signal / signal+background probability; RooFormulaVar llratio_func(""llratio"", ""log10(@0)-log10(@1)"", RooArgList(*sigyz, *totyz));; ; // P l o t d a t a w i t h a L L r a t i o c u t; // -------------------------------------------------------; ; // Calculate the llratio value for each event in the dataset; data->addColumn(llratio_func);; ; // Extract the subset of data with large signal likelihood; std::unique_ptr<RooAbsData> dataSel{data->reduce(Cut(""llratio>0.7""))};; ; // Make plot frame; RooPlot *frame2 = x.frame(Title(""Same projection on X with LLratio(y,z)>0.7""), Bins(40));; ; // Plot select data on frame; dataSel->plotOn(frame2);; ; // M a k e M C p r o j e c t i o n o f p d f w i t h s a m e L L r a t i o c u t; // ---------------------------------------------------------------------------------------------; ; // Generate large number of events for MC integration of pdf projection; std::unique_ptr<RooDataSet> mcprojData{model.generate({x, y, z}, 10000)};; ; // Calculate LL ratio for each generated event and select MC events with llratio)0.7; mcprojData->addColumn(llratio_func);; std::unique_ptr<RooAbsData> mcprojDataSel{mcprojData->reduce(Cut(""llratio>0.7""))};; ; // Project model on",MatchSource.WIKI,doc/master/rf316__llratioplot_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8C.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:1795,Deployability,integrat,integrate,1795,"OOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generate",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:2705,Deployability,integrat,integration,2705," ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages us",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:3523,Deployability,integrat,integrates,3523," -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_llratioplot.py. tutorialsroofitrf316_llratioplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:2329,Energy Efficiency,reduce,reduce,2329,"and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:2936,Energy Efficiency,reduce,reduce,2936," / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_ll",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:1795,Integrability,integrat,integrate,1795,"OOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generate",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:2705,Integrability,integrat,integration,2705," ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages us",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:3523,Integrability,integrat,integrates,3523," -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_llratioplot.py. tutorialsroofitrf316_llratioplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:327,Modifiability,enhance,enhanced,327,". ROOT: tutorials/roofit/rf316_llratioplot.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf316_llratioplot.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf . ; import ROOT; ; ; # Create 3D pdf and data; # -------------------------------------------; ; # Create observables; x = ROOT.RooRealVar(""x"", ""x"", -5, 5); y = ROOT.RooRealVar(""y"", ""y"", -5, 5); z = ROOT.RooRealVar(""z"", ""z"", -5, 5); ; # Create signal pdf gauss(x)*gauss(y)*gauss(z); gx = ROOT.RooGaussian(""gx"", ""gx"", x, 0.0, 1.0); gy = ROOT.RooGaussian(""gy"", ""gy"", y, 0.0, 1.0); gz = ROOT.RooGaussian(""gz"", ""gz"", z, 0.0, 1.0); sig = ROOT.RooProdPdf(""sig"", ""sig"", [gx, gy, gz]); ; # Create background pdf poly(x)*poly(y)*poly(z); px = ROOT.RooPolynomial(""px"", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:3539,Modifiability,variab,variables,3539," -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_llratioplot.py. tutorialsroofitrf316_llratioplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:3634,Modifiability,variab,variables,3634," -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_llratioplot.py. tutorialsroofitrf316_llratioplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf316__llratioplot_8py.html:1930,Testability,log,log,1930,""", ""px"", x, [-0.1, 0.004]); py = ROOT.RooPolynomial(""py"", ""py"", y, [0.1, -0.004]); pz = ROOT.RooPolynomial(""pz"", ""pz"", z); bkg = ROOT.RooProdPdf(""bkg"", ""bkg"", [px, py, pz]); ; # Create composite pdf sig+bkg; fsig = ROOT.RooRealVar(""fsig"", ""signal fraction"", 0.1, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [sig, bkg], [fsig]); ; data = model.generate({x, y, z}, 20000); ; # Project pdf and data on x; # -------------------------------------------------; ; # Make plain projection of data and pdf on x observable; frame = x.frame(Title=""Projection of 3D data and pdf on X"", Bins=40); data.plotOn(frame); model.plotOn(frame); ; # Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; ; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x; sigyz = sig.createProjection({x}); totyz = model.createProjection({x}); ; # Construct the log of the signal / signal+background probability; llratio_func = ROOT.RooFormulaVar(""llratio"", ""log10(@0)-log10(@1)"", [sigyz, totyz]); ; # Plot data with a LL ratio cut; # -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cu",MatchSource.WIKI,doc/master/rf316__llratioplot_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:3267,Energy Efficiency,reduce,reduce,3267,"ooDataSet ds2(""ds2"", ""ds2"", RooArgSet(x, y, z), Import(*tree), Cut(""y+z<0""));; ds2.Print();; ; // I m p o r t i n g i n t e g e r T T r e e b r a n c h e s; // ---------------------------------------------------------------; ; // Import integer tree branch as RooRealVar; RooRealVar i(""i"", ""i"", 0, 5);; RooDataSet ds3(""ds3"", ""ds3"", RooArgSet(i, x), Import(*tree));; ds3.Print();; ; // Define category i; RooCategory icat(""i"", ""i"");; icat.defineType(""State0"", 0);; icat.defineType(""State1"", 1);; ; // Import integer tree branch as RooCategory (only events with i==0 and i==1; // will be imported as those are the only defined states); RooDataSet ds4(""ds4"", ""ds4"", RooArgSet(icat, x), Import(*tree));; ds4.Print();; ; // I m p o r t m u l t i p l e R o o D a t a S e t s i n t o a R o o D a t a S e t; // ----------------------------------------------------------------------------------------; ; // Create three RooDataSets in (y,z); std::unique_ptr<RooAbsData> dsA{ds2.reduce({x, y}, ""z<-5"")};; std::unique_ptr<RooAbsData> dsB{ds2.reduce({x, y}, ""abs(z)<5"")};; std::unique_ptr<RooAbsData> dsC{ds2.reduce({x, y}, ""z>5"")};; ; // Create a dataset that imports contents of all the above datasets mapped by index category c; RooDataSet dsABC{""dsABC"", ""dsABC"", RooArgSet(x, y), Index(c), Import(""SampleA"", *dsA),; Import(""SampleB"", *dsB), Import(""SampleC"", *dsC)};; ; dsABC.Print();; }; ; TH1 *makeTH1(const char *name, double mean, double sigma); {; // Create ROOT TH1 filled with a Gaussian distribution; ; TH1D *hh = new TH1D(name, name, 100, -10, 10);; for (int i = 0; i < 1000; i++) {; hh->Fill(gRandom->Gaus(mean, sigma));; }; return hh;; }; ; TTree *makeTTree(); {; // Create ROOT TTree filled with a Gaussian distribution in x and a uniform distribution in y; ; TTree *tree = new TTree(""tree"", ""tree"");; double *px = new double;; double *py = new double;; double *pz = new double;; Int_t *pi = new Int_t;; tree->Branch(""x"", px, ""x/D"");; tree->Branch(""y"", py, ""y/D"");; tree->Branch(""z"", pz, ""z/D"");;",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:3329,Energy Efficiency,reduce,reduce,3329,"ut(""y+z<0""));; ds2.Print();; ; // I m p o r t i n g i n t e g e r T T r e e b r a n c h e s; // ---------------------------------------------------------------; ; // Import integer tree branch as RooRealVar; RooRealVar i(""i"", ""i"", 0, 5);; RooDataSet ds3(""ds3"", ""ds3"", RooArgSet(i, x), Import(*tree));; ds3.Print();; ; // Define category i; RooCategory icat(""i"", ""i"");; icat.defineType(""State0"", 0);; icat.defineType(""State1"", 1);; ; // Import integer tree branch as RooCategory (only events with i==0 and i==1; // will be imported as those are the only defined states); RooDataSet ds4(""ds4"", ""ds4"", RooArgSet(icat, x), Import(*tree));; ds4.Print();; ; // I m p o r t m u l t i p l e R o o D a t a S e t s i n t o a R o o D a t a S e t; // ----------------------------------------------------------------------------------------; ; // Create three RooDataSets in (y,z); std::unique_ptr<RooAbsData> dsA{ds2.reduce({x, y}, ""z<-5"")};; std::unique_ptr<RooAbsData> dsB{ds2.reduce({x, y}, ""abs(z)<5"")};; std::unique_ptr<RooAbsData> dsC{ds2.reduce({x, y}, ""z>5"")};; ; // Create a dataset that imports contents of all the above datasets mapped by index category c; RooDataSet dsABC{""dsABC"", ""dsABC"", RooArgSet(x, y), Index(c), Import(""SampleA"", *dsA),; Import(""SampleB"", *dsB), Import(""SampleC"", *dsC)};; ; dsABC.Print();; }; ; TH1 *makeTH1(const char *name, double mean, double sigma); {; // Create ROOT TH1 filled with a Gaussian distribution; ; TH1D *hh = new TH1D(name, name, 100, -10, 10);; for (int i = 0; i < 1000; i++) {; hh->Fill(gRandom->Gaus(mean, sigma));; }; return hh;; }; ; TTree *makeTTree(); {; // Create ROOT TTree filled with a Gaussian distribution in x and a uniform distribution in y; ; TTree *tree = new TTree(""tree"", ""tree"");; double *px = new double;; double *py = new double;; double *pz = new double;; Int_t *pi = new Int_t;; tree->Branch(""x"", px, ""x/D"");; tree->Branch(""y"", py, ""y/D"");; tree->Branch(""z"", pz, ""z/D"");; tree->Branch(""i"", pi, ""i/I"");; for (int i = 0; i < 100; i++) {;",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:3395,Energy Efficiency,reduce,reduce,3395,"port integer tree branch as RooRealVar; RooRealVar i(""i"", ""i"", 0, 5);; RooDataSet ds3(""ds3"", ""ds3"", RooArgSet(i, x), Import(*tree));; ds3.Print();; ; // Define category i; RooCategory icat(""i"", ""i"");; icat.defineType(""State0"", 0);; icat.defineType(""State1"", 1);; ; // Import integer tree branch as RooCategory (only events with i==0 and i==1; // will be imported as those are the only defined states); RooDataSet ds4(""ds4"", ""ds4"", RooArgSet(icat, x), Import(*tree));; ds4.Print();; ; // I m p o r t m u l t i p l e R o o D a t a S e t s i n t o a R o o D a t a S e t; // ----------------------------------------------------------------------------------------; ; // Create three RooDataSets in (y,z); std::unique_ptr<RooAbsData> dsA{ds2.reduce({x, y}, ""z<-5"")};; std::unique_ptr<RooAbsData> dsB{ds2.reduce({x, y}, ""abs(z)<5"")};; std::unique_ptr<RooAbsData> dsC{ds2.reduce({x, y}, ""z>5"")};; ; // Create a dataset that imports contents of all the above datasets mapped by index category c; RooDataSet dsABC{""dsABC"", ""dsABC"", RooArgSet(x, y), Index(c), Import(""SampleA"", *dsA),; Import(""SampleB"", *dsB), Import(""SampleC"", *dsC)};; ; dsABC.Print();; }; ; TH1 *makeTH1(const char *name, double mean, double sigma); {; // Create ROOT TH1 filled with a Gaussian distribution; ; TH1D *hh = new TH1D(name, name, 100, -10, 10);; for (int i = 0; i < 1000; i++) {; hh->Fill(gRandom->Gaus(mean, sigma));; }; return hh;; }; ; TTree *makeTTree(); {; // Create ROOT TTree filled with a Gaussian distribution in x and a uniform distribution in y; ; TTree *tree = new TTree(""tree"", ""tree"");; double *px = new double;; double *py = new double;; double *pz = new double;; Int_t *pi = new Int_t;; tree->Branch(""x"", px, ""x/D"");; tree->Branch(""y"", py, ""y/D"");; tree->Branch(""z"", pz, ""z/D"");; tree->Branch(""i"", pi, ""i/I"");; for (int i = 0; i < 100; i++) {; *px = gRandom->Gaus(0, 3);; *py = gRandom->Uniform() * 30 - 15;; *pz = gRandom->Gaus(0, 5);; *pi = i % 3;; tree->Fill();; }; return tree;; }; c#define c(i)Definition RS",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:6994,Performance,load,loadValues,6994,"igm...Definition TRandom.cxx:275; TRandom::Uniformvirtual Double_t Uniform(Double_t x1=1)Returns a uniform deviate on the interval (0, x1).Definition TRandom.cxx:682; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; double; RooFit::IndexRooCmdArg Index(RooCategory &icat)Definition RooGlobalFunc.cxx:386; RooFit::ImportRooCmdArg Import(const char *state, TH1 &histo)Definition RooGlobalFunc.cxx:390; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValu",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7119,Performance,load,loadValues,7119,"TTree represents a columnar dataset.Definition TTree.h:79; double; RooFit::IndexRooCmdArg Index(RooCategory &icat)Definition RooGlobalFunc.cxx:386; RooFit::ImportRooCmdArg Import(const char *state, TH1 &histo)Definition RooGlobalFunc.cxx:390; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot acc",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7244,Performance,load,loadValues,7244,"ooGlobalFunc.cxx:386; RooFit::ImportRooCmdArg Import(const char *state, TH1 &histo)Definition RooGlobalFunc.cxx:390; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandl",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7370,Performance,load,loadValues,7370,"utRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHan",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7497,Performance,load,loadValues,7497,"tion h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; Roo",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7573,Performance,load,loadValues,7573,"nge the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:D",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7698,Performance,load,loadValues,7698,"nge the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; rf401_importttreethxDefinition rf401_importttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:D",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7824,Performance,load,loadValues,7824,"ttreethx.py:1; ; RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 b",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:7950,Performance,load,loadValues,7950,"aHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8077,Performance,load,loadValues,8077,"ndling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataH",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8205,Performance,load,loadValues,8205,".1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8282,Performance,load,loadValues,8282,"reeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttree",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8562,Performance,load,loadValues,8562,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8682,Performance,load,loadValues,8682,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8802,Performance,load,loadValues,8802,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:8922,Performance,load,loadValues,8922,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:9043,Performance,load,loadValues,9043,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8C.html:9120,Performance,load,loadValues,9120,"andling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,y,z] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[i,x] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf401_importttreethx.C. tutorialsroofitrf401_importttreethx.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8C.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:3455,Energy Efficiency,reduce,reduce,3455,"y,z) but only event for which (y+z<0) is ROOT.True; # Import observables (x,y,z) but only event for which (y+z<0) is ROOT.True; ds2 = ROOT.RooDataSet(""ds2"", ""ds2"", {x, y, z}, Import=tree, Cut=""y+z<0""); ds2.Print(); ; # Importing integer ROOT TTree branches; # ---------------------------------------------------------------; ; # Import integer tree branch as ROOT.RooRealVar; i = ROOT.RooRealVar(""i"", ""i"", 0, 5); ds3 = ROOT.RooDataSet(""ds3"", ""ds3"", {i, x}, Import=tree); ds3.Print(); ; # Define category i; icat = ROOT.RooCategory(""i"", ""i"", {""State0"": 0, ""State1"": 1}); ; # Import integer tree branch as ROOT.RooCategory (only events with i==0 and i==1; # will be imported as those are the only defined states); ds4 = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:Dat",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:3489,Energy Efficiency,reduce,reduce,3489,") is ROOT.True; # Import observables (x,y,z) but only event for which (y+z<0) is ROOT.True; ds2 = ROOT.RooDataSet(""ds2"", ""ds2"", {x, y, z}, Import=tree, Cut=""y+z<0""); ds2.Print(); ; # Importing integer ROOT TTree branches; # ---------------------------------------------------------------; ; # Import integer tree branch as ROOT.RooRealVar; i = ROOT.RooRealVar(""i"", ""i"", 0, 5); ds3 = ROOT.RooDataSet(""ds3"", ""ds3"", {i, x}, Import=tree); ds3.Print(); ; # Define category i; icat = ROOT.RooCategory(""i"", ""i"", {""State0"": 0, ""State1"": 1}); ; # Import integer tree branch as ROOT.RooCategory (only events with i==0 and i==1; # will be imported as those are the only defined states); ds4 = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadV",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:3527,Energy Efficiency,reduce,reduce,3527,"rue; ds2 = ROOT.RooDataSet(""ds2"", ""ds2"", {x, y, z}, Import=tree, Cut=""y+z<0""); ds2.Print(); ; # Importing integer ROOT TTree branches; # ---------------------------------------------------------------; ; # Import integer tree branch as ROOT.RooRealVar; i = ROOT.RooRealVar(""i"", ""i"", 0, 5); ds3 = ROOT.RooDataSet(""ds3"", ""ds3"", {i, x}, Import=tree); ds3.Print(); ; # Define category i; icat = ROOT.RooCategory(""i"", ""i"", {""State0"": 0, ""State1"": 1}); ; # Import integer tree branch as ROOT.RooCategory (only events with i==0 and i==1; # will be imported as those are the only defined states); ds4 = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:D",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:3924,Performance,load,loadValues,3924,"3 = ROOT.RooDataSet(""ds3"", ""ds3"", {i, x}, Import=tree); ds3.Print(); ; # Define category i; icat = ROOT.RooCategory(""i"", ""i"", {""State0"": 0, ""State1"": 1}); ; # Import integer tree branch as ROOT.RooCategory (only events with i==0 and i==1; # will be imported as those are the only defined states); ds4 = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(d",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4049,Performance,load,loadValues,4049,"tree branch as ROOT.RooCategory (only events with i==0 and i==1; # will be imported as those are the only defined states); ds4 = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommod",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4174,Performance,load,loadValues,4174," = ROOT.RooDataSet(""ds4"", ""ds4"", {icat, x}, Import=tree); ds4.Print(); ; # Import multiple RooDataSets into a RooDataSet; # ----------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4300,Performance,load,loadValues,4300,"--------------------------------------------------------------------------------------; ; # Create three ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4427,Performance,load,loadValues,4427,"ree ROOT.RooDataSets in (y,z); dsA = ds2.reduce({x, y}, ""z<-5""); dsB = ds2.reduce({x, y}, ""abs(z)<5""); dsC = ds2.reduce({x, y}, ""z>5""); ; # Create a dataset that imports contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataS",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4503,Performance,load,loadValues,4503,"orts contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHa",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4628,Performance,load,loadValues,4628,"orts contents of all the above datasets mapped; # by index category c; dsABC = ROOT.RooDataSet(""dsABC"", ""dsABC"", {x, y}, Index=c, Import={""SampleA"": dsA, ""SampleB"": dsB, ""SampleC"": dsC}); ; dsABC.Print(); RooDataHist::dh[c,x] = 300 bins (2964 weights); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHa",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4754,Performance,load,loadValues,4754,"s); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling --",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:4875,Performance,load,loadValues,4875,"s); RooDataHist::dh[c,x] = 300 bins (2964 weights); [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling --",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5002,Performance,load,loadValues,5002,"ataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #8 because y cannot accommodate the value 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataH",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5130,Performance,load,loadValues,5130,"ue 11.1861; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5207,Performance,load,loadValues,5207," RooTreeDataStore::loadValues(ds) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py.",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5487,Performance,load,loadValues,5487,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5607,Performance,load,loadValues,5607,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5727,Performance,load,loadValues,5727,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5847,Performance,load,loadValues,5847,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:5968,Performance,load,loadValues,5968,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf401__importttreethx_8py.html:6045,Performance,load,loadValues,6045,"loadValues(ds) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds) Ignored 35 out-of-range events; RooDataSet::ds[x,y] = 65 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #7 because y cannot accommodate the value 13.3845; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #8 because z cannot accommodate the value 10; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #12 because y cannot accommodate the value 13.7009; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping event #14 because y cannot accommodate the value -10.6852; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds2) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds2) Ignored 36 out-of-range events; RooDataSet::ds2[x,z,y] = 26 entries; [#1] INFO:DataHandling -- RooAbsReal::attachToTree(i) TTree Int_t branch i will be converted to double precision.; RooDataSet::ds3[x,i] = 100 entries; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #2 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #5 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #8 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping event #11 because i cannot accommodate the value 0; [#1] INFO:DataHandling -- RooTreeDataStore::loadValues(ds4) Skipping ...; [#0] WARNING:DataHandling -- RooTreeDataStore::loadValues(ds4) Ignored 33 out-of-range events; RooDataSet::ds4[i,x] = 67 entries; RooDataSet::dsABC[x,y,c] = 26 entries; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf401_importttreethx.py. tutorialsroofitrf401_importttreethx.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf401__importttreethx_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf401__importttreethx_8py.html
https://root.cern/doc/master/rf402__datahandling_8C.html:11624,Deployability,update,updateFitRangeNorm,11624," ""c""; ; >> merge d2(y) with d1(x,c) to form d1(x,c,y); DataStore d (d); Contains 1000 entries; Observables: ; 1) x = 9 L(-10 - 10) ""x""; 2) c = Plus(idx = 1); ""c""; 3) y = 31.607 L(0 - 40) ""y""; ; >> append data points of d3 to d1; DataStore d (d); Contains 1973 entries; Observables: ; 1) x = 9 L(-10 - 10) ""x""; 2) c = Plus(idx = 1); ""c""; 3) y = 31.607 L(0 - 40) ""y""; >> construct dh (binned) from d(unbinned) but only take the x and y dimensions,; >> the category 'c' will be projected in the filling process; DataStore dh (binned version of d); Contains 100 entries; Observables: ; 1) x = 9 L(-10 - 10) B(10) ""x""; 2) y = 38 L(0 - 40) B(10) ""y""; Binned Dataset dh (binned version of d); Contains 100 bins with a total weight of 1000; Observables: 1) x = 9 L(-10 - 10) B(10) ""x""; 2) y = 38 L(0 - 40) B(10) ""y""; >> number of bins in dh : 100; >> sum of weights in dh : 1000; >> integral over histogram: 8000; >> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) ; bin center:; 1) 0x55b3355824b0 RooRealVar:: x = 1 L(-10 - 10) B(10) ""x""; 2) 0x55b3355ea380 RooRealVar:: y = 22 L(0 - 40) B(10) ""y""; weight = 76; >> Creating 1-dimensional projection on y of dh for bins with x>0; DataStore dh (binned version of d); Contains 10 entries; Observables: ; 1) y = 38 L(0 - 40) B(10) ""y""; Binned Dataset dh (binned version of d); Contains 10 bins with a total weight of 500; Observables: 1) y = 38 L(0 - 40) B(10) ""y""; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 500 will supersede previous event count of 1000 for normalization of PDF projections; ; >> Persisting d via ROOT I/O; TFile** rf402_datahandling.root ; TFile* rf402_datahandling.root ; KEY: RooDataSet d;1 d; KEY: TProcessID ProcessID0;1 8088a3fa-9b53-11ef-80e8-942c8a89beef; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf402_datahandling.C. tutorialsroofitrf402_datahandling.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2411,Energy Efficiency,reduce,reduce,2411," Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(stat",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2574,Energy Efficiency,reduce,reduce,2574,"s"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2696,Energy Efficiency,reduce,reduce,2696," (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); ; cout << "">> construct dh (binned) from d(unbi",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2829,Energy Efficiency,reduce,reduce,2829,"() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); ; cout << "">> construct dh (binned) from d(unbinned) but only take the x and y dimensions,"" << endl; << "">> the category 'c' will be projected ",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2984,Energy Efficiency,reduce,reduce,2984,"cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); ; cout << "">> construct dh (binned) from d(unbinned) but only take the x and y dimensions,"" << endl; << "">> the category 'c' will be projected in the filling process"" << endl;; ; // The binning of real variables (like x,y) is done using their fit range; // 'get/setRange()' and number of specified fit ",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:5123,Energy Efficiency,reduce,reduce,5123,"n per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.3;; y = 20.5;; cout << "">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) "" << endl;; cout << "" bin center:"" << endl;; dh.get(RooArgSet(x, y))->Print(""v""); // load bin center coordinates in internal buffer; cout << "" weight = "" << dh.weight() << endl; // return weight of last loaded coordinates; ; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.; cout << "">> Creating 1-dimensional projection on y of dh for bins with x>0"" << endl;; std::unique_ptr<RooAbsData> dh2{dh.reduce(y, ""x>0"")};; dh2->Print(""v"");; ; // Add dh2 to yframe and redraw; dh2->plotOn(yframe, LineColor(kRed), MarkerColor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet* d = (RooDataSet*) f.FindObject(""d"") ;; ; new TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:5398,Energy Efficiency,reduce,reduce,5398,"e) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.3;; y = 20.5;; cout << "">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) "" << endl;; cout << "" bin center:"" << endl;; dh.get(RooArgSet(x, y))->Print(""v""); // load bin center coordinates in internal buffer; cout << "" weight = "" << dh.weight() << endl; // return weight of last loaded coordinates; ; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.; cout << "">> Creating 1-dimensional projection on y of dh for bins with x>0"" << endl;; std::unique_ptr<RooAbsData> dh2{dh.reduce(y, ""x>0"")};; dh2->Print(""v"");; ; // Add dh2 to yframe and redraw; dh2->plotOn(yframe, LineColor(kRed), MarkerColor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet* d = (RooDataSet*) f.FindObject(""d"") ;; ; new TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.4);; yframe->Draw();; }; d#define d(i)Definition RSha256.hxx:102; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; RooCategory.h; RooDataHist.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; Int_tint Int_tDefinition RtypesCore.h:45; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TFile.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsCollection::getStorage_t const & get() constConst access to the underlying stl container.Definition RooAbsCol",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:771,Integrability,interface,interface,771,". ROOT: tutorials/roofit/rf402_datahandling.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf402_datahandling.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; using namespace RooFit;; ; // WVE Add reduction by range; ; void rf402_datahandling(); {; ; // Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format; ; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", 0, 40);; RooCategory c(""c"", ""c"");; c.defineType(""Plus"", +1);; c.defineType(""Minus"", -1);; ; // B a s i c O p e r a t i o n s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout <<",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:5144,Integrability,interface,interfaced,5144,"n per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.3;; y = 20.5;; cout << "">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) "" << endl;; cout << "" bin center:"" << endl;; dh.get(RooArgSet(x, y))->Print(""v""); // load bin center coordinates in internal buffer; cout << "" weight = "" << dh.weight() << endl; // return weight of last loaded coordinates; ; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.; cout << "">> Creating 1-dimensional projection on y of dh for bins with x>0"" << endl;; std::unique_ptr<RooAbsData> dh2{dh.reduce(y, ""x>0"")};; dh2->Print(""v"");; ; // Add dh2 to yframe and redraw; dh2->plotOn(yframe, LineColor(kRed), MarkerColor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet* d = (RooDataSet*) f.FindObject(""d"") ;; ; new TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:694,Modifiability,inherit,inherit,694,". ROOT: tutorials/roofit/rf402_datahandling.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf402_datahandling.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; using namespace RooFit;; ; // WVE Add reduction by range; ; void rf402_datahandling(); {; ; // Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format; ; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", 0, 40);; RooCategory c(""c"", ""c"");; c.defineType(""Plus"", +1);; c.defineType(""Minus"", -1);; ; // B a s i c O p e r a t i o n s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout <<",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:1369,Modifiability,variab,variables,1369,"aHist.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; using namespace RooFit;; ; // WVE Add reduction by range; ; void rf402_datahandling(); {; ; // Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format; ; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", 0, 40);; RooCategory c(""c"", ""c"");; c.defineType(""Plus"", +1);; c.defineType(""Minus"", -1);; ; // B a s i c O p e r a t i o n s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -----------------------------",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:3894,Modifiability,variab,variables,3894,"y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The merge() function adds two data set column-wise; cout << endl << "">> merge d2(y) with d1(x,c) to form d1(x,c,y)"" << endl;; static_cast<RooDataSet&>(*d1).merge(&static_cast<RooDataSet&>(*d2));; d1->Print(""v"");; ; // The append() function adds two datasets row-wise; cout << endl << "">> append data points of d3 to d1"" << endl;; static_cast<RooDataSet&>(*d1).append(static_cast<RooDataSet&>(*d3));; d1->Print(""v"");; ; // O p e r a t i o n s o n b i n n e d d a t a s e t s; // ---------------------------------------------------------; ; // A binned dataset can be constructed empty, from an unbinned dataset, or; // from a ROOT native histogram (TH1,2,3); ; cout << "">> construct dh (binned) from d(unbinned) but only take the x and y dimensions,"" << endl; << "">> the category 'c' will be projected in the filling process"" << endl;; ; // The binning of real variables (like x,y) is done using their fit range; // 'get/setRange()' and number of specified fit bins 'get/setBins()'.; // Category dimensions of binned datasets get one bin per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:7708,Modifiability,variab,variable,7708,"*options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooAbsCollection.h:315; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::mergebool merge(RooDataSet *data1, RooDataSet *data2=nullptr, RooDataSet *data3=nullptr, RooDataSet *data4=nullptr, RooDataSet *data5=nullptr, RooDataSet *data6=nullptr)Definition RooDataSet.cxx:1079; RooDataSet::appendvoid append(RooDataSet &data)Add all data points of given data set to this data set.Definition RooDataSet.cxx:1138; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooPlot.h:138; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::MarkerColorRooCmdArg MarkerColor(Color",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:816,Performance,perform,performed,816,". ROOT: tutorials/roofit/rf402_datahandling.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf402_datahandling.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooDataHist.h""; #include ""RooGaussian.h""; #include ""RooCategory.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""TFile.h""; using namespace RooFit;; ; // WVE Add reduction by range; ; void rf402_datahandling(); {; ; // Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format; ; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar y(""y"", ""y"", 0, 40);; RooCategory c(""c"", ""c"");; c.defineType(""Plus"", +1);; c.defineType(""Minus"", -1);; ; // B a s i c O p e r a t i o n s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout <<",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:2035,Performance,load,loads,2035,"s o n u n b i n n e d d a t a s e t s; // --------------------------------------------------------------; ; // RooDataSet is an unbinned dataset (a collection of points in N-dimensional space); RooDataSet d(""d"", ""d"", RooArgSet(x, y, c));; ; // Unlike RooAbsArgs (RooAbsPdf,RooFormulaVar,....) datasets are not attached to; // the variables they are constructed from. Instead they are attached to an internal; // clone of the supplied set of arguments; ; // Fill d with dummy values; Int_t i;; for (i = 0; i < 1000; i++) {; x = i / 50 - 10;; y = sqrt(1.0 * i);; c.setLabel((i % 2) ? ""Plus"" : ""Minus"");; ; // We must explicitly refer to x,y,c here to pass the values because; // d is not linked to them (as explained above); d.add(RooArgSet(x, y, c));; }; d.Print(""v"");; cout << endl;; ; // The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); // supplied in the constructor; const RooArgSet *row = d.get();; row->Print(""v"");; cout << endl;; ; // Get with an argument loads a specific data point in row and returns; // a pointer to row argset. get() always returns the same pointer, unless; // an invalid row number is specified. In that case a null ptr is returned; d.get(900)->Print(""v"");; cout << endl;; ; // R e d u c i n g , A p p e n d i n g a n d M e r g i n g; // -------------------------------------------------------------; ; // The reduce() function returns a new dataset which is a subset of the original; cout << endl << "">> d1 has only columns x,c"" << endl;; std::unique_ptr<RooAbsData> d1{d.reduce({x, c})};; d1->Print(""v"");; ; cout << endl << "">> d2 has only column y"" << endl;; std::unique_ptr<RooAbsData> d2{d.reduce({y})};; d2->Print(""v"");; ; cout << endl << "">> d3 has only the points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d3{d.reduce(""y>5.17"")};; d3->Print(""v"");; ; cout << endl << "">> d4 has only columns x,c for data points with y>5.17"" << endl;; std::unique_ptr<RooAbsData> d4{d.reduce({x, c}, ""y>5.17"")};; d4->Print(""v"");; ; // The m",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:4894,Performance,load,load,4894,") is done using their fit range; // 'get/setRange()' and number of specified fit bins 'get/setBins()'.; // Category dimensions of binned datasets get one bin per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.3;; y = 20.5;; cout << "">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) "" << endl;; cout << "" bin center:"" << endl;; dh.get(RooArgSet(x, y))->Print(""v""); // load bin center coordinates in internal buffer; cout << "" weight = "" << dh.weight() << endl; // return weight of last loaded coordinates; ; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.; cout << "">> Creating 1-dimensional projection on y of dh for bins with x>0"" << endl;; std::unique_ptr<RooAbsData> dh2{dh.reduce(y, ""x>0"")};; dh2->Print(""v"");; ; // Add dh2 to yframe and redraw; dh2->plotOn(yframe, LineColor(kRed), MarkerColor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet*",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:5012,Performance,load,loaded,5012,"n per defined category state; x.setBins(10);; y.setBins(10);; RooDataHist dh(""dh"", ""binned version of d"", RooArgSet(x, y), d);; dh.Print(""v"");; ; RooPlot *yframe = y.frame(Bins(10), Title(""Operations on binned datasets""));; dh.plotOn(yframe); // plot projection of 2D binned data on y; ; // Examine the statistics of a binned dataset; cout << "">> number of bins in dh : "" << dh.numEntries() << endl;; cout << "">> sum of weights in dh : "" << dh.sum(false) << endl;; cout << "">> integral over histogram: "" << dh.sum(true) << endl; // accounts for bin volume; ; // Locate a bin from a set of coordinates and retrieve its properties; x = 0.3;; y = 20.5;; cout << "">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) "" << endl;; cout << "" bin center:"" << endl;; dh.get(RooArgSet(x, y))->Print(""v""); // load bin center coordinates in internal buffer; cout << "" weight = "" << dh.weight() << endl; // return weight of last loaded coordinates; ; // Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; //; // All reduce() methods are interfaced in RooAbsData. All reduction techniques; // demonstrated on unbinned datasets can be applied to binned datasets as well.; cout << "">> Creating 1-dimensional projection on y of dh for bins with x>0"" << endl;; std::unique_ptr<RooAbsData> dh2{dh.reduce(y, ""x>0"")};; dh2->Print(""v"");; ; // Add dh2 to yframe and redraw; dh2->plotOn(yframe, LineColor(kRed), MarkerColor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet* d = (RooDataSet*) f.FindObject(""d"") ;; ; new TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8C.html:6527,Security,access,access,6527,"olor(kRed));; ; // S a v i n g a n d l o a d i n g f r o m f i l e; // -------------------------------------------------------; ; // Datasets can be persisted with ROOT I/O; cout << endl << "">> Persisting d via ROOT I/O"" << endl;; TFile f(""rf402_datahandling.root"", ""RECREATE"");; d.Write();; f.ls();; ; // To read back in future session:; // > TFile f(""rf402_datahandling.root"") ;; // > RooDataSet* d = (RooDataSet*) f.FindObject(""d"") ;; ; new TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600);; gPad->SetLeftMargin(0.15);; yframe->GetYaxis()->SetTitleOffset(1.4);; yframe->Draw();; }; d#define d(i)Definition RSha256.hxx:102; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; RooCategory.h; RooDataHist.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; Int_tint Int_tDefinition RtypesCore.h:45; kRed@ kRedDefinition Rtypes.h:66; TAxis.h; TCanvas.h; TFile.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsCollection::getStorage_t const & get() constConst access to the underlying stl container.Definition RooAbsCollection.h:116; RooAbsCollection::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooAbsCollection.h:315; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDataSet::mergebool merge(RooDataSet *data1, RooDataSet *data2=nullptr, RooDataSet *data3=nullptr, RooDataSet *data4=nullptr, RooDataSet *data5=nullptr, RooDataSet *data6=nullptr)Definition RooDataSet.cxx:1079; RooDataSet::appendvoid append(RooDataSet &data)Add all data points of given data set to this data set.Definition RooDataSet.cxx:1138; RooPlotPlot frame and a container for gr",MatchSource.WIKI,doc/master/rf402__datahandling_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8C.html
https://root.cern/doc/master/rf402__datahandling_8py.html:8131,Deployability,update,updateFitRangeNorm,8131," Contains 1000 entries; Observables: ; 1) y = 31.607 L(0 - 40) ""y""; DataStore d (d); Contains 973 entries; Observables: ; 1) x = 9.98 L(-10 - 10) ""x""; 2) y = 31.607 L(0 - 40) ""y""; 3) c = Plus(idx = 1); ""c""; DataStore d (d); Contains 973 entries; Observables: ; 1) x = 9.98 L(-10 - 10) ""x""; 2) c = Plus(idx = 1); ""c""; DataStore d (d); Contains 1000 entries; Observables: ; 1) x = 9.98 L(-10 - 10) ""x""; 2) c = Plus(idx = 1); ""c""; 3) y = 31.607 L(0 - 40) ""y""; DataStore d (d); Contains 1973 entries; Observables: ; 1) x = 9.98 L(-10 - 10) ""x""; 2) c = Plus(idx = 1); ""c""; 3) y = 31.607 L(0 - 40) ""y""; DataStore dh (binned version of d); Contains 100 entries; Observables: ; 1) x = 9 L(-10 - 10) B(10) ""x""; 2) y = 38 L(0 - 40) B(10) ""y""; Binned Dataset dh (binned version of d); Contains 100 bins with a total weight of 1000; Observables: 1) x = 9 L(-10 - 10) B(10) ""x""; 2) y = 38 L(0 - 40) B(10) ""y""; 1) 0x8cc6a00 RooRealVar:: x = 1 L(-10 - 10) B(10) ""x""; 2) 0x8bb47d0 RooRealVar:: y = 22 L(0 - 40) B(10) ""y""; DataStore dh (binned version of d); Contains 10 entries; Observables: ; 1) y = 38 L(0 - 40) B(10) ""y""; Binned Dataset dh (binned version of d); Contains 10 bins with a total weight of 500; Observables: 1) y = 38 L(0 - 40) B(10) ""y""; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 500 will supersede previous event count of 1000 for normalization of PDF projections; TFile** rf402_datahandling.root ; TFile* rf402_datahandling.root ; KEY: RooDataSet d;1 d; KEY: TProcessID ProcessID0;1 8387ccd4-9b53-11ef-895e-942c8a89beef; RooRealVar::x = -10 L(-10 - 10) ; RooRealVar::y = 0 L(0 - 40) ; { {""Minus"" , -1}, {""Plus"" , 1} }; <class cppyy.gbl.RooRealVar at 0x8228040>; RooRealVar::x = -9.98 L(-10 - 10) ; RooRealVar::y = 1 L(0 - 40) ; { {""Minus"" , -1}, {""Plus"" , 1} }; <class cppyy.gbl.RooRealVar at 0x8228040>; RooRealVar::x = -9.96 L(-10 - 10) ; RooRealVar::y = 1.41421 L(0 - 40) ; { {""Minus"" , -1}, {""Plus"" , 1} }; <class cppyy.gbl.RooRealVar at 0x8228040>; ; ; ; ; >> d1 h",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:2193,Energy Efficiency,reduce,reduce,2193,"ey are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x an",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:2314,Energy Efficiency,reduce,reduce,2314,"s; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x and y dimensions, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) i",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:2391,Energy Efficiency,reduce,reduce,2391,"); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x and y dimensions, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fi",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:2479,Energy Efficiency,reduce,reduce,2479,"efer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x and y dimensions, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defi",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:2588,Energy Efficiency,reduce,reduce,2588," y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x and y dimensions, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4425,Energy Efficiency,reduce,reduce,4425,"number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d); dh.Print(""v""); ; yframe = y.frame(Bins=10, Title=""Operations on binned datasets""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf402_datahandling.png""); typeOption",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4666,Energy Efficiency,reduce,reduce,4666,"ts""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf402_datahandling.png""); typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:573,Integrability,interface,interface,573,". ROOT: tutorials/roofit/rf402_datahandling.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf402_datahandling.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; from __future__ import print_function; import ROOT; import math; ; # WVE Add reduction by range; ; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format; ; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 40); c = ROOT.RooCategory(""c"", ""c""); c.defineType(""Plus"", +1); c.defineType(""Minus"", -1); ; # Basic operations on unbinned datasetss; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is ",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4446,Integrability,interface,interfaced,4446,"number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d); dh.Print(""v""); ; yframe = y.frame(Bins=10, Title=""Operations on binned datasets""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf402_datahandling.png""); typeOption",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:502,Modifiability,inherit,inherit,502,". ROOT: tutorials/roofit/rf402_datahandling.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf402_datahandling.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; from __future__ import print_function; import ROOT; import math; ; # WVE Add reduction by range; ; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format; ; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 40); c = ROOT.RooCategory(""c"", ""c""); c.defineType(""Plus"", +1); c.defineType(""Minus"", -1); ; # Basic operations on unbinned datasetss; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is ",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:1175,Modifiability,variab,variables,1175,"g.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; from __future__ import print_function; import ROOT; import math; ; # WVE Add reduction by range; ; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format; ; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 40); c = ROOT.RooCategory(""c"", ""c""); c.defineType(""Plus"", +1); c.defineType(""Minus"", -1); ; # Basic operations on unbinned datasetss; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # ----------------------------------------------------",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:3302,Modifiability,variab,variables,3302,"--------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 to d1""); d1.append(d3); d1.Print(""v""); ; # Operations on binned datasets; # ---------------------------------------------------------; ; # A binned dataset can be constructed empty, an unbinned dataset, or; # from a ROOT native histogram (TH1,2,3); ; print("">> construct dh (binned) from d(unbinned) but only take the x and y dimensions, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d); dh.Print(""v""); ; yframe = y.frame(Bins=10, Title=""Operations on binned datasets""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = ",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:617,Performance,perform,performed,617,". ROOT: tutorials/roofit/rf402_datahandling.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf402_datahandling.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: tools for manipulation of (un)binned datasets . ; from __future__ import print_function; import ROOT; import math; ; # WVE Add reduction by range; ; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format; ; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); y = ROOT.RooRealVar(""y"", ""y"", 0, 40); c = ROOT.RooCategory(""c"", ""c""); c.defineType(""Plus"", +1); c.defineType(""Minus"", -1); ; # Basic operations on unbinned datasetss; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is ",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:1852,Performance,load,loads,1852,"; # --------------------------------------------------------------; ; # ROOT.RooDataSet is an unbinned dataset (a collection of points in; # N-dimensional space); d = ROOT.RooDataSet(""d"", ""d"", {x, y, c}); ; # Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; ; # Fill d with dummy values; for i in range(1000):; x.setVal(i / 50 - 10); y.setVal(math.sqrt(1.0 * i)); if i % 2:; c.setLabel(""Plus""); else:; c.setLabel(""Minus""); ; # We must explicitly refer to x,y, here to pass the values because; # d is not linked to them (as explained above); if i < 3:; print(x, y, c); print(type(x)); d.add({x, y, c}); ; d.Print(""v""); print(""""); ; # The get() function returns a pointer to the internal copy of the RooArgSet(x,y,c); # supplied in the constructor; row = d.get(); row.Print(""v""); print(""""); ; # Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned; d.get(900).Print(""v""); print(""""); ; # Reducing, appending and merging; # -------------------------------------------------------------; ; # The reduce() function returns a dataset which is a subset of the; # original; print(""\n >> d1 has only columns x,c""); d1 = d.reduce({x, c}); d1.Print(""v""); ; print(""\n >> d2 has only column y""); d2 = d.reduce({y}); d2.Print(""v""); ; print(""\n >> d3 has only the points with y>5.17""); d3 = d.reduce(""y>5.17""); d3.Print(""v""); ; print(""\n >> d4 has only columns x, for data points with y>5.17""); d4 = d.reduce({x, c}, ""y>5.17""); d4.Print(""v""); ; # The merge() function adds two data set column-wise; print(""\n >> merge d2(y) with d1(x,c) to form d1(x,c,y)""); d1.merge(d2); d1.Print(""v""); ; # The append() function adds two datasets row-wise; print(""\n >> append data points of d3 ",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4185,Performance,load,load,4185,"s, ""); print("">> the category 'c' will be projected in the filling process""); ; # The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d); dh.Print(""v""); ; yframe = y.frame(Bins=10, Title=""Operations on binned datasets""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datah",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4317,Performance,load,loaded,4317,"number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state; x.setBins(10); y.setBins(10); dh = ROOT.RooDataHist(""dh"", ""binned version of d"", {x, y}, d); dh.Print(""v""); ; yframe = y.frame(Bins=10, Title=""Operations on binned datasets""); dh.plotOn(yframe) # plot projection of 2D binned data on y; ; # Examine the statistics of a binned dataset; print("">> number of bins in dh : "", dh.numEntries()); print("">> sum of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf402_datahandling.png""); typeOption",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf402__datahandling_8py.html:4803,Performance,load,loading,4803,"m of weights in dh : "", dh.sum(False)); # accounts for bin volume; print("">> integral over histogram: "", dh.sum(True)); ; # Locate a bin from a set of coordinates and retrieve its properties; x.setVal(0.3); y.setVal(20.5); print("">> retrieving the properties of the bin enclosing coordinate (x,y) = (0.3,20.5) bin center:""); # load bin center coordinates in internal buffer; dh.get({x, y}).Print(""v""); print("" weight = "", dh.weight()) # return weight of last loaded coordinates; ; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.; print("">> Creating 1-dimensional projection on y of dh for bins with x>0""); dh2 = dh.reduce({y}, ""x>0""); dh2.Print(""v""); ; # Add dh2 to yframe and redraw; dh2.plotOn(yframe, LineColor=""r"", MarkerColor=""r""); ; # Saving and loading from file; # -------------------------------------------------------; ; # Datasets can be persisted with ROOT I/O; print(""\n >> Persisting d via ROOT I/O""); f = ROOT.TFile(""rf402_datahandling.root"", ""RECREATE""); d.Write(); f.ls(); ; # To read back in future session:; # > ROOT.TFile f(""rf402_datahandling.root""); # > d = (ROOT.RooDataSet*) f.FindObject(""d""); ; c = ROOT.TCanvas(""rf402_datahandling"", ""rf402_datahandling"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); yframe.GetYaxis().SetTitleOffset(1.4); yframe.Draw(); ; c.SaveAs(""rf402_datahandling.png""); typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist r",MatchSource.WIKI,doc/master/rf402__datahandling_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf402__datahandling_8py.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2350,Availability,error,error,2350,"---------------------------------------------------------------------; ; // Construct formula to calculate (fake) weight for events; RooFormulaVar wFunc(""w"", ""event weight"", ""(x*x+10)"", x);; ; // Add column with variable w to previously generated dataset; RooRealVar *w = (RooRealVar *)data->addColumn(wFunc);; ; // Dataset d is now a dataset with two observable (x,w) with 1000 entries; data->Print();; ; // Instruct dataset wdata in interpret w as event weight rather than as observable; RooDataSet wdata(data->GetName(), data->GetTitle(), data.get(), *data->get(), 0, w->GetName());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2469,Availability,error,errors,2469,"et with two observable (x,w) with 1000 entries; data->Print();; ; // Instruct dataset wdata in interpret w as event weight rather than as observable; RooDataSet wdata(data->GetName(), data->GetTitle(), data.get(), *data->get(), 0, w->GetName());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbs",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2612,Availability,error,errors,2612,"e());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // ------------------------------------------------------------------------------------",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:3411,Availability,error,error,3411,"individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // -----------------------------------------------------------------------------------------; ; // Construct a pdf with the same shape as p0 after weighting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the same number of weights as data; std::unique_ptr<RooDataSet> data3{genPdf.generate(x, 43000)};; ; // Fit the 2nd order polynomial to both unweighted datasets and save the results for comparison; std::unique_ptr<RooFitResult> r_ml_unw10{p2.fitTo(*data2, Save(), PrintLevel(-1))};; std::unique_ptr<RooFitResult> r_ml_unw43{p2.fitTo(*data3, Save(), PrintLevel(-1))};; ; // C h i 2 f i ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:3437,Availability,error,errors,3437,"individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // -----------------------------------------------------------------------------------------; ; // Construct a pdf with the same shape as p0 after weighting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the same number of weights as data; std::unique_ptr<RooDataSet> data3{genPdf.generate(x, 43000)};; ; // Fit the 2nd order polynomial to both unweighted datasets and save the results for comparison; std::unique_ptr<RooFitResult> r_ml_unw10{p2.fitTo(*data2, Save(), PrintLevel(-1))};; std::unique_ptr<RooFitResult> r_ml_unw43{p2.fitTo(*data3, Save(), PrintLevel(-1))};; ; // C h i 2 f i ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:4738,Availability,error,errors,4738,"ting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the same number of weights as data; std::unique_ptr<RooDataSet> data3{genPdf.generate(x, 43000)};; ; // Fit the 2nd order polynomial to both unweighted datasets and save the results for comparison; std::unique_ptr<RooFitResult> r_ml_unw10{p2.fitTo(*data2, Save(), PrintLevel(-1))};; std::unique_ptr<RooFitResult> r_ml_unw43{p2.fitTo(*data3, Save(), PrintLevel(-1))};; ; // C h i 2 f i t o f p d f t o b i n n e d w e i g h t e d d a t a s e t; // ------------------------------------------------------------------------------------; ; // Construct binned clone of unbinned weighted dataset; std::unique_ptr<RooAbsData> binnedData{wdata.binnedClone()};; binnedData->Print(""v"");; ; // Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates; std::unique_ptr<RooAbsReal> chi2{; p2.createChi2(static_cast<RooDataHist &>(*binnedData), DataError(RooAbsData::SumW2))};; RooMinimizer m(*chi2);; m.migrad();; m.hesse();; ; // Plot chi^2 fit result on frame as well; std::unique_ptr<RooFitResult> r_chi2_wgt{m.save()};; p2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // C o m p a r e f i t r e s u l t s o f c h i 2 , M L f i t s t o ( u n ) w e i g h t e d d a t a; // ---------------------------------------------------------------------------------------------------------------; ; // Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; // than to 1Kevt of unweighted data, whereas the reference chi^2 fit with SumW2 error gives a result closer to; // that of an unbinned ML fit to 1Kevt of unweighted data.; ; cout << ""==> ML Fit results on 1K unweighted events",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:4865,Availability,error,errors,4865,"ting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the same number of weights as data; std::unique_ptr<RooDataSet> data3{genPdf.generate(x, 43000)};; ; // Fit the 2nd order polynomial to both unweighted datasets and save the results for comparison; std::unique_ptr<RooFitResult> r_ml_unw10{p2.fitTo(*data2, Save(), PrintLevel(-1))};; std::unique_ptr<RooFitResult> r_ml_unw43{p2.fitTo(*data3, Save(), PrintLevel(-1))};; ; // C h i 2 f i t o f p d f t o b i n n e d w e i g h t e d d a t a s e t; // ------------------------------------------------------------------------------------; ; // Construct binned clone of unbinned weighted dataset; std::unique_ptr<RooAbsData> binnedData{wdata.binnedClone()};; binnedData->Print(""v"");; ; // Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates; std::unique_ptr<RooAbsReal> chi2{; p2.createChi2(static_cast<RooDataHist &>(*binnedData), DataError(RooAbsData::SumW2))};; RooMinimizer m(*chi2);; m.migrad();; m.hesse();; ; // Plot chi^2 fit result on frame as well; std::unique_ptr<RooFitResult> r_chi2_wgt{m.save()};; p2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // C o m p a r e f i t r e s u l t s o f c h i 2 , M L f i t s t o ( u n ) w e i g h t e d d a t a; // ---------------------------------------------------------------------------------------------------------------; ; // Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; // than to 1Kevt of unweighted data, whereas the reference chi^2 fit with SumW2 error gives a result closer to; // that of an unbinned ML fit to 1Kevt of unweighted data.; ; cout << ""==> ML Fit results on 1K unweighted events",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:4890,Availability,error,error,4890,"ting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the same number of weights as data; std::unique_ptr<RooDataSet> data3{genPdf.generate(x, 43000)};; ; // Fit the 2nd order polynomial to both unweighted datasets and save the results for comparison; std::unique_ptr<RooFitResult> r_ml_unw10{p2.fitTo(*data2, Save(), PrintLevel(-1))};; std::unique_ptr<RooFitResult> r_ml_unw43{p2.fitTo(*data3, Save(), PrintLevel(-1))};; ; // C h i 2 f i t o f p d f t o b i n n e d w e i g h t e d d a t a s e t; // ------------------------------------------------------------------------------------; ; // Construct binned clone of unbinned weighted dataset; std::unique_ptr<RooAbsData> binnedData{wdata.binnedClone()};; binnedData->Print(""v"");; ; // Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates; std::unique_ptr<RooAbsReal> chi2{; p2.createChi2(static_cast<RooDataHist &>(*binnedData), DataError(RooAbsData::SumW2))};; RooMinimizer m(*chi2);; m.migrad();; m.hesse();; ; // Plot chi^2 fit result on frame as well; std::unique_ptr<RooFitResult> r_chi2_wgt{m.save()};; p2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // C o m p a r e f i t r e s u l t s o f c h i 2 , M L f i t s t o ( u n ) w e i g h t e d d a t a; // ---------------------------------------------------------------------------------------------------------------; ; // Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; // than to 1Kevt of unweighted data, whereas the reference chi^2 fit with SumW2 error gives a result closer to; // that of an unbinned ML fit to 1Kevt of unweighted data.; ; cout << ""==> ML Fit results on 1K unweighted events",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:5643,Availability,error,error,5643,"---------------------------------------------------------------; ; // Construct binned clone of unbinned weighted dataset; std::unique_ptr<RooAbsData> binnedData{wdata.binnedClone()};; binnedData->Print(""v"");; ; // Perform chi2 fit to binned weighted dataset using sum-of-weights errors; //; // NB: Within the usual approximations of a chi2 fit, a chi2 fit to weighted; // data using sum-of-weights-squared errors does give correct error; // estimates; std::unique_ptr<RooAbsReal> chi2{; p2.createChi2(static_cast<RooDataHist &>(*binnedData), DataError(RooAbsData::SumW2))};; RooMinimizer m(*chi2);; m.migrad();; m.hesse();; ; // Plot chi^2 fit result on frame as well; std::unique_ptr<RooFitResult> r_chi2_wgt{m.save()};; p2.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // C o m p a r e f i t r e s u l t s o f c h i 2 , M L f i t s t o ( u n ) w e i g h t e d d a t a; // ---------------------------------------------------------------------------------------------------------------; ; // Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; // than to 1Kevt of unweighted data, whereas the reference chi^2 fit with SumW2 error gives a result closer to; // that of an unbinned ML fit to 1Kevt of unweighted data.; ; cout << ""==> ML Fit results on 1K unweighted events"" << endl;; r_ml_unw10->Print();; cout << ""==> ML Fit results on 43K unweighted events"" << endl;; r_ml_unw43->Print();; cout << ""==> ML Fit results on 1K weighted events with a summed weight of 43K"" << endl;; r_ml_wgt->Print();; cout << ""==> Corrected ML Fit results on 1K weighted events with a summed weight of 43K"" << endl;; r_ml_wgt_corr->Print();; cout << ""==> Chi2 Fit results on 1K weighted events with a summed weight of 43K"" << endl;; r_chi2_wgt->Print();; ; new TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.8);; frame->Draw();; }; RooDataHist.h; RooDataSet.h; RooFitResult.h; Ro",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10125,Availability,error,errors,10125,"Arg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf403_weightedevtsDefinition rf403_weightedevts.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fi",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10203,Availability,error,error,10203,"espace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf403_weightedevtsDefinition rf403_weightedevts.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10304,Availability,error,error,10304,"espace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf403_weightedevtsDefinition rf403_weightedevts.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10319,Availability,error,error,10319,"espace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf403_weightedevtsDefinition rf403_weightedevts.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10421,Availability,error,errors,10421,"leconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculat",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10448,Availability,error,error,10448,"leconst char * TitleDefinition TXMLSetup.cxx:68; mTMarker mDefinition textangle.C:8; ; RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculat",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10825,Availability,error,error,10825,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11290,Availability,error,error,11290,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12401,Availability,error,error,12401,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12870,Availability,error,error,12870,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11696,Deployability,integrat,integrator,11696,"[#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficien",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11827,Deployability,integrat,integrator,11827,"evel; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summa",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11958,Deployability,integrat,integrator,11958,"bsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12089,Deployability,integrat,integrator,12089,"normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_bin",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:7668,Integrability,interface,interface,7668,"xis.h; TCanvas.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooMinimizerWrapper class around ROOT::Math::Minimizer that provides a seamless interface between the minimizer f...Definition RooMinimizer.h:48; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TMarker::Printvoid Print(Option_t *option="""") ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11696,Integrability,integrat,integrator,11696,"[#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficien",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11827,Integrability,integrat,integrator,11827,"evel; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summa",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11958,Integrability,integrat,integrator,11958,"bsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12089,Integrability,integrat,integrator,12089,"normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_bin",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:1353,Modifiability,variab,variable,1353,"taHist.h""; #include ""RooGaussian.h""; #include ""RooFormulaVar.h""; #include ""RooGenericPdf.h""; #include ""RooPolynomial.h""; #include ""RooMinimizer.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooFitResult.h""; using namespace RooFit;; ; void rf403_weightedevts(); {; // C r e a t e o b s e r v a b l e a n d u n w e i g h t e d d a t a s e t; // -------------------------------------------------------------------------------; ; // Declare observable; RooRealVar x(""x"", ""x"", -10, 10);; x.setBins(40);; ; // Construction a uniform pdf; RooPolynomial p0(""px"", ""px"", x);; ; // Sample 1000 events from pdf; std::unique_ptr<RooDataSet> data{p0.generate(x, 1000)};; ; // C a l c u l a t e w e i g h t a n d m a k e d a t a s e t w e i g h t e d; // -----------------------------------------------------------------------------------; ; // Construct formula to calculate (fake) weight for events; RooFormulaVar wFunc(""w"", ""event weight"", ""(x*x+10)"", x);; ; // Add column with variable w to previously generated dataset; RooRealVar *w = (RooRealVar *)data->addColumn(wFunc);; ; // Dataset d is now a dataset with two observable (x,w) with 1000 entries; data->Print();; ; // Instruct dataset wdata in interpret w as event weight rather than as observable; RooDataSet wdata(data->GetName(), data->GetTitle(), data.get(), *data->get(), 0, w->GetName());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error ",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:7967,Modifiability,variab,variable,7967,"xy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsData::SumW2@ SumW2Definition RooAbsData.h:108; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooMinimizerWrapper class around ROOT::Math::Minimizer that provides a seamless interface between the minimizer f...Definition RooMinimizer.h:48; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TMarker::Printvoid Print(Option_t *option="""") const overrideDump this marker with its attributes.Definition TMarker.cxx:339; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::SumW2ErrorRooCmdArg SumW2Error(bool flag)Definition RooGlobalFunc.cxx:733; RooFit::DataErrorRooCmdA",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2994,Performance,perform,performed,2994,"uadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // -----------------------------------------------------------------------------------------; ; // Construct a pdf with the same shape as p0 after weighting; RooGenericPdf genPdf(""genPdf"", ""x*x+10"", x);; ; // Sample a dataset with the same number of events as data; std::unique_ptr<RooDataSet> data2{genPdf.generate(x, 1000)};; ; // Sample a dataset with the sa",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:10919,Performance,optimiz,optimization,10919,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11016,Performance,optimiz,optimization,11016,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11384,Performance,optimiz,optimization,11384,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:11599,Performance,optimiz,optimization,11599,,MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12495,Performance,optimiz,optimization,12495,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12592,Performance,optimiz,optimization,12592,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:12964,Performance,optimiz,optimization,12964,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:13061,Performance,optimiz,optimization,13061,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2799,Testability,log,logL,2799,"e());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // ------------------------------------------------------------------------------------",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2818,Testability,log,log,2818,"e());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // ------------------------------------------------------------------------------------",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2883,Testability,log,logL,2883,"e());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // ------------------------------------------------------------------------------------",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8C.html:2904,Testability,log,log,2904,"e());; ; // Dataset d is now a dataset with one observable (x) with 1000 entries and a sum of weights of ~430K; wdata.Print();; ; // U n b i n n e d M L f i t t o w e i g h t e d d a t a; // ---------------------------------------------------------------; ; // Construction quadratic polynomial pdf for fitting; RooRealVar a0(""a0"", ""a0"", 1);; RooRealVar a1(""a1"", ""a1"", 0, -1, 1);; RooRealVar a2(""a2"", ""a2"", 1, 0, 10);; RooPolynomial p2(""p2"", ""p2"", x, RooArgList(a0, a1, a2), 0);; ; // Fit quadratic polynomial to weighted data; ; // NOTE: A plain Maximum likelihood fit to weighted data does in general; // NOT result in correct error estimates, unless individual; // event weights represent Poisson statistics themselves.; //; // Fit with 'wrong' errors; std::unique_ptr<RooFitResult> r_ml_wgt{p2.fitTo(wdata, Save(), PrintLevel(-1))};; ; // A first order correction to estimated parameter errors in an; // (unbinned) ML fit can be obtained by calculating the; // covariance matrix as; //; // V' = V C-1 V; //; // where V is the covariance matrix calculated from a fit; // to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; // matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; // (i.e. the weights are applied squared); //; // A fit in this mode can be performed as follows:; ; std::unique_ptr<RooFitResult> r_ml_wgt_corr{p2.fitTo(wdata, Save(), SumW2Error(true), PrintLevel(-1))};; ; // P l o t w e i g h e d d a t a a n d f i t r e s u l t; // ---------------------------------------------------------------; ; // Construct plot frame; RooPlot *frame = x.frame(Title(""Unbinned ML fit, binned chi^2 fit to weighted data""));; ; // Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError(RooAbsData::SumW2));; ; // Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame);; ; // ML Fit of pdf to equivalent unweighted dataset; // ------------------------------------------------------------------------------------",MatchSource.WIKI,doc/master/rf403__weightedevts_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:1897,Availability,error,error,1897,"ght for events; wFunc = ROOT.RooFormulaVar(""w"", ""event weight"", ""(x*x+10)"", [x]); ; # Add column with variable w to previously generated dataset; w = data.addColumn(wFunc); ; # Dataset d is now a dataset with two observable (x,w) with 1000 entries; data.Print(); ; # Instruct dataset wdata in interpret w as event weight rather than as; # observable; wdata = ROOT.RooDataSet(data.GetName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error ",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2006,Availability,error,errors,2006,"mn(wFunc); ; # Dataset d is now a dataset with two observable (x,w) with 1000 entries; data.Print(); ; # Instruct dataset wdata in interpret w as event weight rather than as; # observable; wdata = ROOT.RooDataSet(data.GetName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit ",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2120,Availability,error,errors,2120,"tName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+1",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2837,Availability,error,error,2837,"E: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweighted datasets and save the; # results for comparison; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unb",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2863,Availability,error,errors,2863,"E: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweighted datasets and save the; # results for comparison; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unb",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:3956,Availability,error,errors,3956," of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweighted datasets and save the; # results for comparison; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unbinned weighted dataset; binnedData = wdata.binnedClone(); binnedData.Print(""v""); ; # Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates; chi2 = p2.createChi2(binnedData, ROOT.RooFit.DataError(""SumW2"")); m = ROOT.RooMinimizer(chi2); m.migrad(); m.hesse(); ; # Plot chi^2 fit result on frame as well; r_chi2_wgt = m.save(); p2.plotOn(frame, LineStyle=""--"", LineColor=""r""); ; # Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; ; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.; ; print(""==> ML Fit results on 1K unweighted events""); r_ml_unw10.Print(); print(""==> ML Fit results on 43K unweighted events""); r_ml_unw43.Print(); print(""==> ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt.Print(); print(",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:4078,Availability,error,errors,4078," of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweighted datasets and save the; # results for comparison; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unbinned weighted dataset; binnedData = wdata.binnedClone(); binnedData.Print(""v""); ; # Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates; chi2 = p2.createChi2(binnedData, ROOT.RooFit.DataError(""SumW2"")); m = ROOT.RooMinimizer(chi2); m.migrad(); m.hesse(); ; # Plot chi^2 fit result on frame as well; r_chi2_wgt = m.save(); p2.plotOn(frame, LineStyle=""--"", LineColor=""r""); ; # Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; ; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.; ; print(""==> ML Fit results on 1K unweighted events""); r_ml_unw10.Print(); print(""==> ML Fit results on 43K unweighted events""); r_ml_unw43.Print(); print(""==> ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt.Print(); print(",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:4103,Availability,error,error,4103," of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweighted datasets and save the; # results for comparison; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unbinned weighted dataset; binnedData = wdata.binnedClone(); binnedData.Print(""v""); ; # Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates; chi2 = p2.createChi2(binnedData, ROOT.RooFit.DataError(""SumW2"")); m = ROOT.RooMinimizer(chi2); m.migrad(); m.hesse(); ; # Plot chi^2 fit result on frame as well; r_chi2_wgt = m.save(); p2.plotOn(frame, LineStyle=""--"", LineColor=""r""); ; # Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; ; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.; ; print(""==> ML Fit results on 1K unweighted events""); r_ml_unw10.Print(); print(""==> ML Fit results on 43K unweighted events""); r_ml_unw43.Print(); print(""==> ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt.Print(); print(",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:4661,Availability,error,error,4661,"n; r_ml_unw10 = p2.fitTo(data2, Save=True, PrintLevel=-1); r_ml_unw43 = p2.fitTo(data3, Save=True, PrintLevel=-1); ; # Chis2 fit of pdf to binned weighted dataset; # ---------------------------------------------------------------------------; ; # Construct binned clone of unbinned weighted dataset; binnedData = wdata.binnedClone(); binnedData.Print(""v""); ; # Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates; chi2 = p2.createChi2(binnedData, ROOT.RooFit.DataError(""SumW2"")); m = ROOT.RooMinimizer(chi2); m.migrad(); m.hesse(); ; # Plot chi^2 fit result on frame as well; r_chi2_wgt = m.save(); p2.plotOn(frame, LineStyle=""--"", LineColor=""r""); ; # Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; ; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.; ; print(""==> ML Fit results on 1K unweighted events""); r_ml_unw10.Print(); print(""==> ML Fit results on 43K unweighted events""); r_ml_unw43.Print(); print(""==> ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt.Print(); print(""==> Corrected ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt_corr.Print(); print(""==> Chi2 Fit results on 1K weighted events with a summed weight of 43K""); r_chi2_wgt.Print(); ; c = ROOT.TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:5996,Availability,error,errors,5996,"ighted events with a summed weight of 43K""); r_ml_wgt.Print(); print(""==> Corrected ML Fit results on 1K weighted events with a summed weight of 43K""); r_ml_wgt_corr.Print(); print(""==> Chi2 Fit results on 1K weighted events with a summed weight of 43K""); r_chi2_wgt.Print(); ; c = ROOT.TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fi",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6074,Availability,error,error,6074,"lts on 1K weighted events with a summed weight of 43K""); r_chi2_wgt.Print(); ; c = ROOT.TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6175,Availability,error,error,6175,"lts on 1K weighted events with a summed weight of 43K""); r_chi2_wgt.Print(); ; c = ROOT.TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6190,Availability,error,error,6190,"lts on 1K weighted events with a summed weight of 43K""); r_chi2_wgt.Print(); ; c = ROOT.TCanvas(""rf403_weightedevts"", ""rf403_weightedevts"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contai",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6292,Availability,error,errors,6292,"me.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculat",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6319,Availability,error,error,6319,"me.GetYaxis().SetTitleOffset(1.8); frame.Draw(); ; c.SaveAs(""rf403_weightedevts.png""); RooDataSet::pxData[x,w] = 1000 entries; RooDataSet::pxData[x,weight:w] = 1000 entries (43238.9 weighted); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#0] WARNING:InputArguments -- RooAbsPdf::fitTo(p2): WARNING: a likelihood fit is requested of what appears to be weighted data.; While the estimated values of the parameters will always be calculated taking the weights into account,; there are multiple ways to estimate the errors of the parameters. You are advised to make an; explicit choice for the error calculation:; - Either provide SumW2Error(true), to calculate a sum-of-weights-corrected HESSE error matrix; (error will be proportional to the number of events in MC).; - Or provide SumW2Error(false), to return errors from original HESSE error matrix; (which will be proportional to the sum of the weights, i.e., a dataset with <sum of weights> events).; - Or provide AsymptoticError(true), to use the asymptotically correct expression; (for details see https://arxiv.org/abs/1911.01303).""; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculat",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6696,Availability,error,error,6696,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7161,Availability,error,error,7161,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8272,Availability,error,error,8272,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8741,Availability,error,error,8741,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7567,Deployability,integrat,integrator,7567,"[#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficien",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7698,Deployability,integrat,integrator,7698,"evel; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summa",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7829,Deployability,integrat,integrator,7829,"bsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const ",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7960,Deployability,integrat,integrator,7960,"normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_bin",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7567,Integrability,integrat,integrator,7567,"[#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficien",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7698,Integrability,integrat,integrator,7698,"evel; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summa",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7829,Integrability,integrat,integrator,7829,"bsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const ",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7960,Integrability,integrat,integrator,7960,"normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_bin",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:945,Modifiability,variab,variable,945,". ROOT: tutorials/roofit/rf403_weightedevts.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf403_weightedevts.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; 'DATA AND CATEGORIES' RooFit tutorial macro #403 ; Using weights in unbinned datasets. ; from __future__ import print_function; import ROOT; ; ; # Create observable and unweighted dataset; # -------------------------------------------; ; # Declare observable; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); x.setBins(40); ; # Construction a uniform pdf; p0 = ROOT.RooPolynomial(""px"", ""px"", x); ; # Sample 1000 events from pdf; data = p0.generate({x}, 1000); ; # Calculate weight and make dataset weighted; # --------------------------------------------------; ; # Construct formula to calculate (fake) weight for events; wFunc = ROOT.RooFormulaVar(""w"", ""event weight"", ""(x*x+10)"", [x]); ; # Add column with variable w to previously generated dataset; w = data.addColumn(wFunc); ; # Dataset d is now a dataset with two observable (x,w) with 1000 entries; data.Print(); ; # Instruct dataset wdata in interpret w as event weight rather than as; # observable; wdata = ROOT.RooDataSet(data.GetName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wr",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2491,Performance,perform,performed,2491,"--------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+10"", [x]); ; # Sample a dataset with the same number of events as data; data2 = genPdf.generate({x}, 1000); ; # Sample a dataset with the same number of weights as data; data3 = genPdf.generate({x}, 43000); ; # Fit the 2nd order polynomial to both unweigh",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6790,Performance,optimiz,optimization,6790,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:6887,Performance,optimiz,optimization,6887,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7255,Performance,optimiz,optimization,7255,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:7470,Performance,optimiz,optimization,7470,,MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8366,Performance,optimiz,optimization,8366,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8463,Performance,optimiz,optimization,8463,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8835,Performance,optimiz,optimization,8835,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:8932,Performance,optimiz,optimization,8932,"INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_pxData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2) Calculating sum-of-weights-squared correction matrix for covariance matrix; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:NumericIntegration -- RooRealIntegral::init(genPdf_Int[x]) using numeric integrator RooIntegrator1D to calculate Int(x); [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(p2_over_p2_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_p2_over_p2_Int[x]_genPdfData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; DataStore pxData_binned (Generated From px_binned); Contains 40 entries; Observables: ; 1) x = 9.",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2300,Testability,log,logL,2300,"tName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+1",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2319,Testability,log,log,2319,"tName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+1",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2383,Testability,log,logL,2383,"tName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+1",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf403__weightedevts_8py.html:2404,Testability,log,log,2404,"tName(), data.GetTitle(), data, data.get(), """", w.GetName()); ; # Dataset d is now a dataset with one observable (x) with 1000 entries and; # a sum of weights of ~430K; wdata.Print(); ; # Unbinned ML fit to weighted data; # ---------------------------------------------------------------; ; # Construction quadratic polynomial pdf for fitting; a0 = ROOT.RooRealVar(""a0"", ""a0"", 1); a1 = ROOT.RooRealVar(""a1"", ""a1"", 0, -1, 1); a2 = ROOT.RooRealVar(""a2"", ""a2"", 1, 0, 10); p2 = ROOT.RooPolynomial(""p2"", ""p2"", x, [a0, a1, a2], 0); ; # Fit quadratic polynomial to weighted data; ; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors; r_ml_wgt = p2.fitTo(wdata, Save=True, PrintLevel=-1); ; # A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:; ; r_ml_wgt_corr = p2.fitTo(wdata, Save=True, SumW2Error=True, PrintLevel=-1); ; # Plot weighted data and fit result; # ---------------------------------------------------------------; ; # Construct plot frame; frame = x.frame(Title=""Unbinned ML fit, chi^2 fit to weighted data""); ; # Plot data using sum-of-weights-squared error rather than Poisson errors; wdata.plotOn(frame, DataError=""SumW2""); ; # Overlay result of 2nd order polynomial fit to weighted data; p2.plotOn(frame); ; # ML fit of pdf to equivalent unweighted dataset; # ---------------------------------------------------------------------; ; # Construct a pdf with the same shape as p0 after weighting; genPdf = ROOT.RooGenericPdf(""genPdf"", ""x*x+1",MatchSource.WIKI,doc/master/rf403__weightedevts_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8py.html
https://root.cern/doc/master/rf404__categories_8C.html:4583,Energy Efficiency,reduce,reduce,4583,"lav) state combinations; Roo1DTable *bttable = data->table(RooArgSet(tagCat, b0flav));; bttable->Print(""v"");; ; // Retrieve number of events from table; // Number can be non-integer if source dataset has weighed events; double nb0 = btable->get(""B0"");; std::cout << ""Number of events with B0 flavor is "" << nb0 << std::endl;; ; // Retrieve fraction of events with ""Lepton"" tag; double fracLep = ttable->getFrac(""Lepton"");; std::cout << ""Fraction of events tagged with Lepton tag is "" << fracLep << std::endl;; ; // D e f i n i n g r a n g e s f o r p l o t t i n g , f i t t i n g o n c a t e g o r i e s; // ------------------------------------------------------------------------------------------------------; ; // Define named range as comma separated list of labels; tagCat.setRange(""good"", ""Lepton,Kaon"");; ; // Or add state names one by one; tagCat.addToRange(""soso"", ""NetTagger-1"");; tagCat.addToRange(""soso"", ""NetTagger-2"");; ; // Use category range in dataset reduction specification; std::unique_ptr<RooAbsData> goodData{data->reduce(CutRange(""good""))};; static_cast<RooDataSet&>(*goodData).table(tagCat)->Print(""v"");; }; Roo1DTable.h; RooCategory.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; Roo1DTableOne-dimensional table.Definition Roo1DTable.h:23; Roo1DTable::getdouble get(const char *label, bool silent=false) constReturn the table entry named 'label'.Definition Roo1DTable.cxx:245; Roo1DTable::getFracdouble getFrac(const char *label, bool silent=false) constReturn the fraction of entries in the table contained in the slot named 'label'.Definition Roo1DTable.cxx:302; Roo1DTable::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition Roo1DTable.",MatchSource.WIKI,doc/master/rf404__categories_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf404__categories_8C.html
https://root.cern/doc/master/rf404__categories_8C.html:301,Modifiability,variab,variables,301,". ROOT: tutorials/roofit/rf404_categories.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf404_categories.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: working with RooCategory objects to describe discrete variables ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooPolynomial.h""; #include ""RooCategory.h""; #include ""Roo1DTable.h""; #include ""RooGaussian.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include <iostream>; using namespace RooFit;; ; void rf404_categories(); {; ; // C o n s t r u c t a c a t e g o r y w i t h l a b e l s; // ----------------------------------------------------------------; ; // Define a category with labels only; RooCategory tagCat(""tagCat"", ""Tagging category"");; tagCat.defineType(""Lepton"");; tagCat.defineType(""Kaon"");; tagCat.defineType(""NetTagger-1"");; tagCat.defineType(""NetTagger-2"");; tagCat.Print();; ; // C o n s t r u c t a c a t e g o r y w i t h l a b e l s a n d i n d i c e s; // ----------------------------------------------------------------------------------------; ; // Define a category with explicitly numbered states; RooCategory b0flav(""b0flav"", ""B0 flavour eigenstate"");; b0flav[""B0""] = -1;; b0flav[""B0bar""] = 1;; // Print it in ""verbose"" mode to see all states.; b0flav.Print(""V"");; ; ; // Alternatively, define many states at once. The function takes; // a map with std::string --> index mapping.; RooCategory largeCat(""largeCat"", ""A category with many states"");; largeCat.defineTypes({; {""A"", 0}, {""b"", 2}, {""c"", 8}, {""dee"", 4},; {""F"", 133}, {""g"", 15}, {""H"", -20}; });; ; ; // I t e r a t e, q u e r y a n d s e t s t a t e s; // --------------------------------------------------------; ; // One can iterate through the {index,name} pair of category objects; std::cout << ""\nThis is the for loop over states of 'largeCat':"";; for (const auto& idxAndName : largeCat); std::cout << ""\n\t"" << idxAndName.fir",MatchSource.WIKI,doc/master/rf404__categories_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf404__categories_8C.html
https://root.cern/doc/master/rf404__categories_8py.html:2483,Energy Efficiency,reduce,reduce,2483,"le = data.table(tagCat, ""x>8.23""); ttable.Print(); ttable.Print(""v""); ; # Create table for all (tagCat x b0flav) state combinations; bttable = data.table({tagCat, b0flav}); bttable.Print(""v""); ; # Retrieve number of events from table; # Number can be non-integer if source dataset has weighed events; nb0 = btable.get(""B0""); print(""Number of events with B0 flavor is "", nb0); ; # Retrieve fraction of events with ""Lepton"" tag; fracLep = ttable.getFrac(""Lepton""); print(""Fraction of events tagged with Lepton tag is "", fracLep); ; # Defining ranges for plotting, fitting on categories; # ------------------------------------------------------------------------------------------------------; ; # Define named range as comma separated list of labels; tagCat.setRange(""good"", ""Lepton,Kaon""); ; # Or add state names one by one; tagCat.addToRange(""soso"", ""NetTagger-1""); tagCat.addToRange(""soso"", ""NetTagger-2""); ; # Use category range in dataset reduction specification; goodData = data.reduce(CutRange=""good""); goodData.table(tagCat).Print(""v""); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; RooCategory::tagCat = Lepton(idx = 0); ; RooCategory::b0flav = B0(idx = -1); ; Roo1DTable::b0flav = (B0=5040,B0bar=4960); ; Table b0flav : pData; +-------+------+; | B0 | 5040 |; | B0bar | 4960 |; +-------+------+; ; Roo1DTable::tagCat = (Lepton=487,Kaon=433,NetTagger-1=439,NetTagger-2=406); ; Table tagCat : pData(x>8.23); +-------------+-----+; | Lepton | 487 |; | Kaon | 433 |; | NetTagger-1 | 439 |; | NetTagger-2 | 406 |; +-------------+-----+; ; ; Table (tagCat x b0flav) : pData; +---------------------+------+; | {Lepton;B0} | 1281 |; | {Kaon;B0} | 1253 |; | {NetTagger-1;B0} | 1234 |; | {NetTagger-2;B0} | 1272 |; | {Lepton;B0bar} | 1269 |; | {Kaon;B0bar} | 1255 |; | {NetTagger-1;B0bar} | 1219 |; | {NetTagger-2;B0bar} | 1217 |; +---------------------+------+; ; ; Table tagCat : pData; +-------------+------+; | Lepton | 2550 |; | Kaon | 2508 |; | NetTa",MatchSource.WIKI,doc/master/rf404__categories_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf404__categories_8py.html
https://root.cern/doc/master/rf404__categories_8py.html:321,Modifiability,variab,variables,321,". ROOT: tutorials/roofit/rf404_categories.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf404_categories.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Data and categories: working with ROOT.RooCategory objects to describe discrete variables ; ; from __future__ import print_function; import ROOT; ; ; # Construct a category with labels; # --------------------------------------------; ; # Define a category with labels only; tagCat = ROOT.RooCategory(""tagCat"", ""Tagging category""); tagCat.defineType(""Lepton""); tagCat.defineType(""Kaon""); tagCat.defineType(""NetTagger-1""); tagCat.defineType(""NetTagger-2""); tagCat.Print(); ; # Construct a category with labels and indices; # ------------------------------------------------; ; # Define a category with explicitly numbered states; b0flav = ROOT.RooCategory(""b0flav"", ""B0 flavour eigenstate"", {""B0"": -1, ""B0bar"": 1}); b0flav.Print(); ; # Generate dummy data for tabulation demo; # ------------------------------------------------; ; # Generate a dummy dataset; x = ROOT.RooRealVar(""x"", ""x"", 0, 10); data = ROOT.RooPolynomial(""p"", ""p"", x).generate({x, b0flav, tagCat}, 10000); ; # Print tables of category contents of datasets; # --------------------------------------------------; ; # Tables are equivalent of plots for categories; btable = data.table(b0flav); btable.Print(); btable.Print(""v""); ; # Create table for subset of events matching cut expression; ttable = data.table(tagCat, ""x>8.23""); ttable.Print(); ttable.Print(""v""); ; # Create table for all (tagCat x b0flav) state combinations; bttable = data.table({tagCat, b0flav}); bttable.Print(""v""); ; # Retrieve number of events from table; # Number can be non-integer if source dataset has weighed events; nb0 = btable.get(""B0""); print(""Number of events with B0 flavor is "", nb0); ; # Retrieve fraction of events with ""Lepton"" tag; fracLep = ttable.getFrac(""Lepton""); print(""Fraction of events tagged with ",MatchSource.WIKI,doc/master/rf404__categories_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf404__categories_8py.html
https://root.cern/doc/master/rf405__realtocatfuncs_8C.html:7248,Deployability,update,updateFitRangeNorm,7248,"me(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooThresholdCategoryA real-to-category mapping defined by a series of thresholds.Definition RooThresholdCategory.h:24; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf405_realtocatfuncsDefinition rf405_realtocatfuncs.py:1; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 2748 events out of 10000 total events; ; Table xBins : aData; +---------------+------+; | x_coarse_bin0 | 105 |; | x_coarse_bin1 | 329 |; | x_coarse_bin2 | 499 |; | x_coarse_bin3 | 739 |; | x_coarse_bin4 | 934 |; | x_coarse_bin5 | 1218 |; | x_coarse_bin6 | 1450 |; | x_coarse_bin7 | 1675 |; | x_coarse_bin8 | 1767 |; | x_coarse_bin9 | 1284 |; +---------------+------+; ; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 2627 will supersede previous event count of 10000 for normalization of PDF projections; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf405_realtocatfuncs.C. tutorialsroofitrf405_realtocatfuncs.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html
https://root.cern/doc/master/rf405__realtocatfuncs_8C.html:3981,Energy Efficiency,reduce,reduce,3981,"inition; // in a real-valued input observable observables to state names. The state names are automatically; // constructed from the variable name, the binning name and the bin number. If no binning name; // is specified the default binning is mapped; ; x.setBins(10, ""coarse"");; RooBinningCategory xBins(""xBins"", ""coarse bins in x"", x, ""coarse"");; ; // U s e b i n n i n g f u n c t i o n f o r t a b u l a t i o n a n d p l o t t i n g; // -----------------------------------------------------------------------------------------------; ; // Print table of xBins state multiplicity. Note that xBins does not need to be an observable in data; // it can be a function of observables in data as well; Roo1DTable *xbtable = data->table(xBins);; xbtable->Print(""v"");; ; // Add values of xBins function to dataset so that it can be used as observable; RooCategory *xb = (RooCategory *)data->addColumn(xBins);; ; // Define range ""alt"" as including bins 1,3,5,7,9; xb->setRange(""alt"", ""x_coarse_bin1,x_coarse_bin3,x_coarse_bin5,x_coarse_bin7,x_coarse_bin9"");; ; // Construct subset of data matching range ""alt"" but only for the first 5000 events and plot it on the frame; std::unique_ptr<RooAbsData> dataSel{data->reduce(CutRange(""alt""), EventRange(0, 5000))};; dataSel->plotOn(xframe, MarkerColor(kGreen), LineColor(kGreen));; ; new TCanvas(""rf405_realtocatfuncs"", ""rf405_realtocatfuncs"", 600, 600);; xframe->SetMinimum(0.01);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; }; a#define a(i)Definition RSha256.hxx:99; Roo1DTable.h; RooArgusBG.h; RooBinningCategory.h; RooCategory.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; RooThresholdCategory.h; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#de",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html
https://root.cern/doc/master/rf405__realtocatfuncs_8C.html:2906,Modifiability,variab,variable,2906,"ddThreshold(8.23, ""Signal"");; xRegion.addThreshold(9.23, ""SideBand"");; ; // U s e t h r e s h o l d f u n c t i o n t o p l o t d a t a r e g i o n s; // -------------------------------------------------------------------------------------; ; // Add values of threshold function to dataset so that it can be used as observable; data->addColumn(xRegion);; ; // Make plot of data in x; RooPlot *xframe = x.frame(Title(""Demo of threshold and binning mapping functions""));; data->plotOn(xframe);; ; // Use calculated category to select sideband data; data->plotOn(xframe, Cut(""xRegion==xRegion::SideBand""), MarkerColor(kRed), LineColor(kRed));; ; // C r e a t e a b i n n i n g r e a l - > c a t f u n c t i o n; // ----------------------------------------------------------------------; ; // A RooBinningCategory is a category function that maps bins of a (named) binning definition; // in a real-valued input observable observables to state names. The state names are automatically; // constructed from the variable name, the binning name and the bin number. If no binning name; // is specified the default binning is mapped; ; x.setBins(10, ""coarse"");; RooBinningCategory xBins(""xBins"", ""coarse bins in x"", x, ""coarse"");; ; // U s e b i n n i n g f u n c t i o n f o r t a b u l a t i o n a n d p l o t t i n g; // -----------------------------------------------------------------------------------------------; ; // Print table of xBins state multiplicity. Note that xBins does not need to be an observable in data; // it can be a function of observables in data as well; Roo1DTable *xbtable = data->table(xBins);; xbtable->Print(""v"");; ; // Add values of xBins function to dataset so that it can be used as observable; RooCategory *xb = (RooCategory *)data->addColumn(xBins);; ; // Define range ""alt"" as including bins 1,3,5,7,9; xb->setRange(""alt"", ""x_coarse_bin1,x_coarse_bin3,x_coarse_bin5,x_coarse_bin7,x_coarse_bin9"");; ; // Construct subset of data matching range ""alt"" but only for the first 5",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html
https://root.cern/doc/master/rf405__realtocatfuncs_8C.html:5702,Modifiability,variab,variable,5702,"GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; Roo1DTableOne-dimensional table.Definition Roo1DTable.h:23; Roo1DTable::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition Roo1DTable.h:50; RooArgusBGRooArgusBG is a RooAbsPdf implementation describing the ARGUS background shape.Definition RooArgusBG.h:22; RooBinningCategoryProvides a real-to-category mapping defined by a series of thresholds.Definition RooBinningCategory.h:23; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooCategory::setRangevoid setRange(const char *rangeName, const char *stateNameList)Definition RooCategory.cxx:336; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPlot::SetMinimumSetMinimum(ymin); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooThresholdCategoryA real-to-category mapping defined by a series of thresholds.Definition RooThresholdCategory.h:24; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::MarkerColorRooCmdArg MarkerColor(Color_t color)Definition RooGlobalFunc.cxx:352; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mos",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8C.html
https://root.cern/doc/master/rf405__realtocatfuncs_8py.html:4141,Deployability,update,updateFitRangeNorm,4141,"""); xBins = ROOT.RooBinningCategory(""xBins"", ""coarse bins in x"", x, ""coarse""); ; # Use binning function for tabulation and plotting; # -----------------------------------------------------------------------------------------------; ; # Print table of xBins state multiplicity. Note that xBins does not need to be an observable in data; # it can be a function of observables in data as well; xbtable = data.table(xBins); xbtable.Print(""v""); ; # Add values of xBins function to dataset so that it can be used as; # observable; xb = data.addColumn(xBins); ; # Define range ""alt"" as including bins 1,3,5,7,9; xb.setRange(""alt"", ""x_coarse_bin1,x_coarse_bin3,x_coarse_bin5,x_coarse_bin7,x_coarse_bin9""); ; # Construct subset of data matching range ""alt"" but only for the first; # 5000 events and plot it on the frame; dataSel = data.reduce(CutRange=""alt"", EventRange=(0, 5000)); dataSel.plotOn(xframe, MarkerColor=""g"", LineColor=""g""); ; c = ROOT.TCanvas(""rf405_realtocatfuncs"", ""rf405_realtocatfuncs"", 600, 600); xframe.SetMinimum(0.01); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf405_realtocatfuncs.png""); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 2748 events out of 10000 total events; ; Table xBins : aData; +---------------+------+; | x_coarse_bin0 | 105 |; | x_coarse_bin1 | 329 |; | x_coarse_bin2 | 499 |; | x_coarse_bin3 | 739 |; | x_coarse_bin4 | 934 |; | x_coarse_bin5 | 1218 |; | x_coarse_bin6 | 1450 |; | x_coarse_bin7 | 1675 |; | x_coarse_bin8 | 1767 |; | x_coarse_bin9 | 1284 |; +---------------+------+; ; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 2627 will supersede previous event count of 10000 for normalization of PDF projections; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf405_realtocatfuncs.py. tutorialsroofitrf405_realtocatfuncs.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8py.html
https://root.cern/doc/master/rf405__realtocatfuncs_8py.html:3357,Energy Efficiency,reduce,reduce,3357,"from the variable name, binning name and the bin number. If no binning name; # is specified the default binning is mapped; ; x.setBins(10, ""coarse""); xBins = ROOT.RooBinningCategory(""xBins"", ""coarse bins in x"", x, ""coarse""); ; # Use binning function for tabulation and plotting; # -----------------------------------------------------------------------------------------------; ; # Print table of xBins state multiplicity. Note that xBins does not need to be an observable in data; # it can be a function of observables in data as well; xbtable = data.table(xBins); xbtable.Print(""v""); ; # Add values of xBins function to dataset so that it can be used as; # observable; xb = data.addColumn(xBins); ; # Define range ""alt"" as including bins 1,3,5,7,9; xb.setRange(""alt"", ""x_coarse_bin1,x_coarse_bin3,x_coarse_bin5,x_coarse_bin7,x_coarse_bin9""); ; # Construct subset of data matching range ""alt"" but only for the first; # 5000 events and plot it on the frame; dataSel = data.reduce(CutRange=""alt"", EventRange=(0, 5000)); dataSel.plotOn(xframe, MarkerColor=""g"", LineColor=""g""); ; c = ROOT.TCanvas(""rf405_realtocatfuncs"", ""rf405_realtocatfuncs"", 600, 600); xframe.SetMinimum(0.01); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf405_realtocatfuncs.png""); [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 2748 events out of 10000 total events; ; Table xBins : aData; +---------------+------+; | x_coarse_bin0 | 105 |; | x_coarse_bin1 | 329 |; | x_coarse_bin2 | 499 |; | x_coarse_bin3 | 739 |; | x_coarse_bin4 | 934 |; | x_coarse_bin5 | 1218 |; | x_coarse_bin6 | 1450 |; | x_coarse_bin7 | 1675 |; | x_coarse_bin8 | 1767 |; | x_coarse_bin9 | 1284 |; +---------------+------+; ; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 2627 will supersede previous event count of 10000 for normalization of PDF projections; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf405_realtocatfuncs.py",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8py.html
https://root.cern/doc/master/rf405__realtocatfuncs_8py.html:2393,Modifiability,variab,variable,2393,"ackground; # 4.23 5.23 8.23 9.23; xRegion.addThreshold(4.23, ""Background""); xRegion.addThreshold(5.23, ""SideBand""); xRegion.addThreshold(8.23, ""Signal""); xRegion.addThreshold(9.23, ""SideBand""); ; # Use threshold function to plot data regions; # ----------------------------------------------; ; # Add values of threshold function to dataset so that it can be used as; # observable; data.addColumn(xRegion); ; # Make plot of data in x; xframe = x.frame(Title=""Demo of threshold and binning mapping functions""); data.plotOn(xframe); ; # Use calculated category to select sideband data; data.plotOn(xframe, Cut=""xRegion==xRegion::SideBand"", MarkerColor=""r"", LineColor=""r""); ; # Create a binning real -> cat function; # ----------------------------------------------------------------------; ; # A RooBinningCategory is a category function that maps bins of a (named) binning definition; # in a real-valued input observable observables to state names. The state names are automatically; # constructed from the variable name, binning name and the bin number. If no binning name; # is specified the default binning is mapped; ; x.setBins(10, ""coarse""); xBins = ROOT.RooBinningCategory(""xBins"", ""coarse bins in x"", x, ""coarse""); ; # Use binning function for tabulation and plotting; # -----------------------------------------------------------------------------------------------; ; # Print table of xBins state multiplicity. Note that xBins does not need to be an observable in data; # it can be a function of observables in data as well; xbtable = data.table(xBins); xbtable.Print(""v""); ; # Add values of xBins function to dataset so that it can be used as; # observable; xb = data.addColumn(xBins); ; # Define range ""alt"" as including bins 1,3,5,7,9; xb.setRange(""alt"", ""x_coarse_bin1,x_coarse_bin3,x_coarse_bin5,x_coarse_bin7,x_coarse_bin9""); ; # Construct subset of data matching range ""alt"" but only for the first; # 5000 events and plot it on the frame; dataSel = data.reduce(CutRange=""alt"", EventRa",MatchSource.WIKI,doc/master/rf405__realtocatfuncs_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf405__realtocatfuncs_8py.html
https://root.cern/doc/master/rf407__latextables_8C.html:2460,Availability,error,error,2460,"a1"", ""a1"", 0.2, 0., 1.);; RooChebychev bkg1(""bkg1"", ""Background 1"", x, RooArgSet(a0, a1));; ; // Build expontential pdf; RooRealVar alpha(""alpha"", ""alpha"", -1);; RooExponential bkg2(""bkg2"", ""Background 2"", x, alpha);; ; // Sum the background components into a composite background pdf; RooRealVar bkg1frac(""sig1frac"", ""fraction of component 1 in background"", 0.2, 0., 1.);; RooAddPdf bkg(""bkg"", ""Signal"", RooArgList(bkg1, bkg2), sig1frac);; ; // Sum the composite signal and background; RooRealVar bkgfrac(""bkgfrac"", ""fraction of background"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""g1+g2+a"", RooArgList(bkg, sig), bkgfrac);; ; // M a k e l i s t o f p a r a m e t e r s b e f o r e a n d a f t e r f i t; // ----------------------------------------------------------------------------------------; ; // Make list of model parameters; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; ; // Save snapshot of prefit parameters; std::unique_ptr<RooArgSet> initParams{static_cast<RooArgSet *>(params->snapshot())};; ; // Do fit to data, to obtain error estimates on parameters; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; model.fitTo(*data, PrintLevel(-1));; ; // P r i n t l a t ex t a b l e o f p a r a m e t e r s o f p d f; // --------------------------------------------------------------------------; ; // Print parameter list in LaTeX for (one column with names, one column with values); params->printLatex();; ; // Print parameter list in LaTeX for (names values|names values); params->printLatex(Columns(2));; ; // Print two parameter lists side by side (name values initvalues); params->printLatex(Sibling(*initParams));; ; // Print two parameter lists side by side (name values initvalues|name values initvalues); params->printLatex(Sibling(*initParams), Columns(2));; ; // Write LaTex table to file; params->printLatex(Sibling(*initParams), OutputFile(""rf407_latextables.tex""));; }; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooExponential.h; RooGaussian.h; RooPlo",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8C.html:5466,Availability,error,error,5466,"leRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf407_latextablesDefinition rf407_latextables.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $ 0.2$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & ",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8C.html:5560,Performance,optimiz,optimization,5560,"leRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf407_latextablesDefinition rf407_latextables.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $ 0.2$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & ",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8C.html:5657,Performance,optimiz,optimization,5657,"leRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf407_latextablesDefinition rf407_latextables.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$ & $ 0.2$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$ & ",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8C.html:4935,Safety,safe,safe,4935,"r object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooExponentialExponential PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooFit::ColumnsRooCmdArg Columns(Int_t ncol)Definition RooGlobalFunc.cxx:513; RooFit::SiblingRooCmdArg Sibling(const RooAbsCollection &sibling)Definition RooGlobalFunc.cxx:521; RooFit::OutputFileRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf407_latextablesDefinition rf407_latextables.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.71\pm 0.06",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8C.html:5102,Safety,safe,safe,5102,"l PDF.Definition RooExponential.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooFit::ColumnsRooCmdArg Columns(Int_t ncol)Definition RooGlobalFunc.cxx:513; RooFit::SiblingRooCmdArg Sibling(const RooAbsCollection &sibling)Definition RooGlobalFunc.cxx:521; RooFit::OutputFileRooCmdArg OutputFile(const char *fileName)Definition RooGlobalFunc.cxx:517; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf407_latextablesDefinition rf407_latextables.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$\\; $\verb+a1+ $ & $ 0.2\pm 0.2$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.45\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.71\pm 0.06$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.6\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ &",MatchSource.WIKI,doc/master/rf407__latextables_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8C.html
https://root.cern/doc/master/rf407__latextables_8py.html:2160,Availability,error,error,2160,", 0.5, 0.0, 1.0); a1 = ROOT.RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0); bkg1 = ROOT.RooChebychev(""bkg1"", ""Background 1"", x, [a0, a1]); ; # Build expontential pdf; alpha = ROOT.RooRealVar(""alpha"", ""alpha"", -1); bkg2 = ROOT.RooExponential(""bkg2"", ""Background 2"", x, alpha); ; # Sum the background components into a composite background pdf; bkg1frac = ROOT.RooRealVar(""sig1frac"", ""fraction of component 1 in background"", 0.2, 0.0, 1.0); bkg = ROOT.RooAddPdf(""bkg"", ""Signal"", [bkg1, bkg2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Make list of parameters before and after fit; # ----------------------------------------------------------------------------------------; ; # Make list of model parameters; params = model.getParameters({x}); ; # Save snapshot of prefit parameters; initParams = params.snapshot(); ; # Do fit to data, obtain error estimates on parameters; data = model.generate({x}, 1000); model.fitTo(data, PrintLevel=-1); ; # Print LateX table of parameters of pdf; # --------------------------------------------------------------------------; ; # Print parameter list in LaTeX for (one column with names, column with; # values); params.printLatex(); ; # Print parameter list in LaTeX for (names values|names values); params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf407__latextables_8py.html:3590,Availability,error,error,3590,"params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $ 0$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $ ",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf407__latextables_8py.html:3684,Performance,optimiz,optimization,3684,"params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $ 0$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $ ",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf407__latextables_8py.html:3781,Performance,optimiz,optimization,3781,"params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+alpha+ $ & $ -1.00$ & $\verb+sigma1+ $ & $ 0.5$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lcc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $ 0.5$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$ & $ 0$\\; $\verb+alpha+ $ & $ -1.00$ & $-1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$ & $ ",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf407__latextables_8py.html:3059,Safety,safe,safe,3059,"odel parameters; params = model.getParameters({x}); ; # Save snapshot of prefit parameters; initParams = params.snapshot(); ; # Do fit to data, obtain error estimates on parameters; data = model.generate({x}, 1000); model.fitTo(data, PrintLevel=-1); ; # Print LateX table of parameters of pdf; # --------------------------------------------------------------------------; ; # Print parameter list in LaTeX for (one column with names, column with; # values); params.printLatex(); ; # Print parameter list in LaTeX for (names values|names values); params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.79\pm 0.05$",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf407__latextables_8py.html:3226,Safety,safe,safe,3226,"parameters; data = model.generate({x}, 1000); model.fitTo(data, PrintLevel=-1); ; # Print LateX table of parameters of pdf; # --------------------------------------------------------------------------; ; # Print parameter list in LaTeX for (one column with names, column with; # values); params.printLatex(); ; # Print parameter list in LaTeX for (names values|names values); params.printLatex(Columns=2); ; # Print two parameter lists side by side (name values initvalues); params.printLatex(Sibling=initParams); ; # Print two parameter lists side by side (name values initvalues|name; # values initvalues); params.printLatex(Sibling=initParams, Columns=2); ; # Write LaTex table to file; params.printLatex(Sibling=initParams, OutputFile=""rf407_latextables.tex""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; \begin{tabular}{lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$\\; $\verb+a1+ $ & $ 0.3\pm 0.1$\\; $\verb+alpha+ $ & $ -1.00$\\; $\verb+bkgfrac+ $ & $ 0.46\pm 0.03$\\; $\verb+mean+ $ & $ 5$\\; $\verb+sig1frac+ $ & $ 0.79\pm 0.05$\\; $\verb+sigma1+ $ & $ 0.5$\\; $\verb+sigma2+ $ & $ 1$\\; \end{tabular}; \begin{tabular}{lc|lc}; $\verb+a0+ $ & $ 0.5\pm 0.2$ & $\verb+mean+ $ & $ 5$\\; $\verb+a1+ $ &",MatchSource.WIKI,doc/master/rf407__latextables_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf407__latextables_8py.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:5013,Integrability,interface,interface,5013,"() {; rf408_RDataFrameToRooFit();; return 0;; }; mainint main()Definition Prototype.cxx:12; RooAbsDataHelper.h; RooDataSetHelperRooAbsDataHelper< RooDataSet > RooDataSetHelperHelper for creating a RooDataSet inside RDataFrame.Definition RooAbsDataHelper.h:157; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; ROOT::RDF::RInterface::DefineRInterface< Proxied, DS_t > Define(std::string_view name, F expression, const ColumnNames_t &columns={})Define a new column.Definition RInterface.hxx:441; ROOT::RDF::RResultPtrSmart pointer for the return type of actions.Definition RResultPtr.hxx:119; ROOT::RDF::RResultPtr::GetValueconst T & GetValue()Get a const reference to the encapsulated object.Definition RResultPtr.hxx:228; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; RooAbsDataHelperThis is a helper for an RDataFrame action, which fills RooFit data classes.Definition RooAbsDataHelper.h:119; RooAbsDataAbstract base class for binned and unbinned datasets.Definition RooAbsData.h:57; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TRandom::Uniformvirtual Double_t Uniform(Double_t x1=1)Returns a uniform deviate on the interval (0, x1).Definition TRandom.cxx:682",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:983,Modifiability,variab,variables,983," ROOT: tutorials/roofit/rf408_RDataFrameToRooFit.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf408_RDataFrameToRooFit.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Fill RooDataSet/RooDataHist in RDataFrame. ; This tutorial shows how to fill RooFit data classes directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; #include <RooAbsDataHelper.h>; ; #include <TRandom.h>; ; /// Print the first few entries and summary statistics.; void printData(const RooAbsData& data) {; std::cout << ""\n"";; data.Print();; ; for (int i=0; i < data.numEntries() && i < 20; ++i) {; std::cout << ""("";; for (const auto var : *data.get(i)) {; std::cout << std::setprecision(3) << std::right << std::fixed << std::setw(8) << static_cast<const RooAbsReal*>(var)->getVal() << "", "";; }; std::cout << "")\tweight="" << std::setw(10) << data.weight() << std::endl;; }; ; // Get the x and y variables from the dataset:; const auto & x = static_cast<const RooRealVar&>(*(*data.get())[0]);; const auto & y = static_cast<const RooRealVar&>(*(*data.get())[1]);; ; std::cout << ""mean(x) = "" << data.mean(x) << ""\tsigma(x) = "" << std::sqrt(data.moment(x, 2.)); << ""\n"" << ""mean(y) = "" << data.mean(y) << ""\tsigma(y) = "" << std::sqrt(data.moment(y, 2.)) << std::endl;; }; ; void rf408_RDataFrameToRooFit(); {; // Set up; // ------------------------; ; // We create an RDataFrame with two columns filled with 2 million random numbers.; auto df = ROOT::RDataFrame{2000000}.Define(""x"", []() { return gRandom->Uniform(-5., 5.); }).Define(""y"", []() {; return gRandom->Gaus(1., 3.);; });; ; ; // We create RooFit variables that will represent the dataset.; RooRealVar x(""x"", ""x"", -5., 5.);; RooRealVar y(""y"", ""y"", -50., 50.);; x.setBins(10);; y.setBins(20);; ; ; ; // Booking the creation of RooDataSet / RooDataHist in RDataFrame; // ----------------------------------------------------------------; ; // Method 1:; // ---",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:1692,Modifiability,variab,variables,1692,"<< ""("";; for (const auto var : *data.get(i)) {; std::cout << std::setprecision(3) << std::right << std::fixed << std::setw(8) << static_cast<const RooAbsReal*>(var)->getVal() << "", "";; }; std::cout << "")\tweight="" << std::setw(10) << data.weight() << std::endl;; }; ; // Get the x and y variables from the dataset:; const auto & x = static_cast<const RooRealVar&>(*(*data.get())[0]);; const auto & y = static_cast<const RooRealVar&>(*(*data.get())[1]);; ; std::cout << ""mean(x) = "" << data.mean(x) << ""\tsigma(x) = "" << std::sqrt(data.moment(x, 2.)); << ""\n"" << ""mean(y) = "" << data.mean(y) << ""\tsigma(y) = "" << std::sqrt(data.moment(y, 2.)) << std::endl;; }; ; void rf408_RDataFrameToRooFit(); {; // Set up; // ------------------------; ; // We create an RDataFrame with two columns filled with 2 million random numbers.; auto df = ROOT::RDataFrame{2000000}.Define(""x"", []() { return gRandom->Uniform(-5., 5.); }).Define(""y"", []() {; return gRandom->Gaus(1., 3.);; });; ; ; // We create RooFit variables that will represent the dataset.; RooRealVar x(""x"", ""x"", -5., 5.);; RooRealVar y(""y"", ""y"", -50., 50.);; x.setBins(10);; y.setBins(20);; ; ; ; // Booking the creation of RooDataSet / RooDataHist in RDataFrame; // ----------------------------------------------------------------; ; // Method 1:; // ---------; // We directly book the RooDataSetHelper action.; // We need to pass; // - the RDataFrame column types as template parameters; // - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); // - the column names that RDataFrame should fill into the dataset; //; // NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; //; // The returned object is not yet a RooDataSet, but an RResultPtr that will; // be lazy-evaluated once you call GetValue() on it. We will only evaluate; // the RResultPtr once all other RDataFrame related actions are declared.; // This way we trigger the event loop computation onl",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:2373,Modifiability,variab,variables,2373," = "" << std::sqrt(data.moment(y, 2.)) << std::endl;; }; ; void rf408_RDataFrameToRooFit(); {; // Set up; // ------------------------; ; // We create an RDataFrame with two columns filled with 2 million random numbers.; auto df = ROOT::RDataFrame{2000000}.Define(""x"", []() { return gRandom->Uniform(-5., 5.); }).Define(""y"", []() {; return gRandom->Gaus(1., 3.);; });; ; ; // We create RooFit variables that will represent the dataset.; RooRealVar x(""x"", ""x"", -5., 5.);; RooRealVar y(""y"", ""y"", -50., 50.);; x.setBins(10);; y.setBins(20);; ; ; ; // Booking the creation of RooDataSet / RooDataHist in RDataFrame; // ----------------------------------------------------------------; ; // Method 1:; // ---------; // We directly book the RooDataSetHelper action.; // We need to pass; // - the RDataFrame column types as template parameters; // - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); // - the column names that RDataFrame should fill into the dataset; //; // NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; //; // The returned object is not yet a RooDataSet, but an RResultPtr that will; // be lazy-evaluated once you call GetValue() on it. We will only evaluate; // the RResultPtr once all other RDataFrame related actions are declared.; // This way we trigger the event loop computation only once, which will; // improve the runtime significantly.; //; // To learn more about lazy actions, see:; // https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; ROOT::RDF::RResultPtr<RooDataSet> rooDataSetResult = df.Book<double, double>(; RooDataSetHelper(""dataset"", // Name; ""Title of dataset"", // Title; RooArgSet(x, y) // Variables in this dataset; ),; {""x"", ""y""} // Column names in RDataFrame.; );; ; ; // Method 2:; // ---------; // We first declare the RooDataHistHelper; RooDataHistHelper rdhMaker{""datahist"", // Name; ""Title of data hist"", // Title; RooArgSet(x, y) // Variables in",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html:2766,Usability,learn,learn,2766,", ""y"", -50., 50.);; x.setBins(10);; y.setBins(20);; ; ; ; // Booking the creation of RooDataSet / RooDataHist in RDataFrame; // ----------------------------------------------------------------; ; // Method 1:; // ---------; // We directly book the RooDataSetHelper action.; // We need to pass; // - the RDataFrame column types as template parameters; // - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); // - the column names that RDataFrame should fill into the dataset; //; // NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; //; // The returned object is not yet a RooDataSet, but an RResultPtr that will; // be lazy-evaluated once you call GetValue() on it. We will only evaluate; // the RResultPtr once all other RDataFrame related actions are declared.; // This way we trigger the event loop computation only once, which will; // improve the runtime significantly.; //; // To learn more about lazy actions, see:; // https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; ROOT::RDF::RResultPtr<RooDataSet> rooDataSetResult = df.Book<double, double>(; RooDataSetHelper(""dataset"", // Name; ""Title of dataset"", // Title; RooArgSet(x, y) // Variables in this dataset; ),; {""x"", ""y""} // Column names in RDataFrame.; );; ; ; // Method 2:; // ---------; // We first declare the RooDataHistHelper; RooDataHistHelper rdhMaker{""datahist"", // Name; ""Title of data hist"", // Title; RooArgSet(x, y) // Variables in this dataset; };; ; // Then, we move it into an RDataFrame action:; ROOT::RDF::RResultPtr<RooDataHist> rooDataHistResult = df.Book<double, double>(std::move(rdhMaker), {""x"", ""y""});; ; ; // Run it and inspect the results; // -------------------------------; ; // At this point, all RDF actions were defined (namely, the `Book`; // operations), so we can get values from the RResultPtr objects, triggering; // the event loop and getting the actual RooFit data objects.; RooDataSet const",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8C.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:4158,Integrability,interface,interface,4158,"(y) = {0:.3f}\n"".format(math.sqrt(data.moment(y, 2.0)))); ; ; print_data(roo_data_set); print_data(roo_data_hist); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t formatDefinition TGWin32VirtualXProxy.cxx:249; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; RooDataSet::dataset[x,y] = 2000000 entries; RooDataHist::dataset[x,y] = 200 bins (2e+06 weights); ; ( 4.997, -0.304, ) weight= 1.000; ( 4.472, 0.910, ) weight= 1.000; ( 4.575, 0.830, ) weight= 1.000; ( 0.400, 0.776, ) weight= 1.000; ( 2.599, -0.232, ) weight= 1.000; ( -1.844, 1.575, ) weight= 1.000; ( 0.197, 0.853, ) weight= 1.000; ( -1.077, -0.721, ) weight= 1.000; ( -4.697, -3.165, ) weight= 1.000; ( 4.437, -1.208, ) weight= 1.000; ( 3.983, -0.146, ) weight= 1.000; ( -0.014, -1.447, ) weight= 1.000; ( -3.177, -2.704, ) weight= 1.000; ( -4.371, -0.363, ) weight= 1.000; ( 2.254, -0.499, ) weight= 1.000; ( 2.139, 6.533, ) weight= 1.000; ( 1.993, 6.991, ) weight= 1.000; ( -3.708, 7.781, ) weight= 1.000; ( -4.168, 1.284, ) weight= 1.000; ( -4.177, 4.650, ) weight= 1.000; mean(x) = 0.001 sigma(x) = 2.886; mean(y) = 1.000 sigma(y) = 3.000; ; ; ( -4.500, -47.500, ) weight= 0.000; ( -4.500, -42.500, ) ",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:737,Modifiability,variab,variables,737,". ROOT: tutorials/roofit/rf408_RDataFrameToRooFit.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf408_RDataFrameToRooFit.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Fill RooDataSet/RooDataHist in RDataFrame. ; This tutorial shows how to fill RooFit data classes directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; import ROOT; import math; ; ; # Set up; # ------------------------; ; # We create an RDataFrame with two columns filled with 2 million random numbers.; df = ROOT.RDataFrame(2000000).Define(""x"", ""gRandom->Uniform(-5., 5.)"").Define(""y"", ""gRandom->Gaus(1., 3.)""); ; ; # We create RooFit variables that will represent the dataset.; x = ROOT.RooRealVar(""x"", ""x"", -5.0, 5.0); y = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dat",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:1418,Modifiability,variab,variables,1418,"asses directly from RDataFrame. Using two small helpers, we tell RDataFrame where the data has to go.; ; import ROOT; import math; ; ; # Set up; # ------------------------; ; # We create an RDataFrame with two columns filled with 2 million random numbers.; df = ROOT.RDataFrame(2000000).Define(""x"", ""gRandom->Uniform(-5., 5.)"").Define(""y"", ""gRandom->Gaus(1., 3.)""); ; ; # We create RooFit variables that will represent the dataset.; x = ROOT.RooRealVar(""x"", ""x"", -5.0, 5.0); y = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y))), (""x"", ""y""); ); ; # Method 2:; # ---------; # We first declare the RooDataHistHelper; rdhMaker = ROOT.RooDataHistHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y)); ; # Then, we move it into an RDataFrame action:; roo_data_hist_result = df.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); ; ; # Run it and inspect t",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html
https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:1803,Usability,learn,learn,1803," = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y))), (""x"", ""y""); ); ; # Method 2:; # ---------; # We first declare the RooDataHistHelper; rdhMaker = ROOT.RooDataHistHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y)); ; # Then, we move it into an RDataFrame action:; roo_data_hist_result = df.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); ; ; # Run it and inspect the results; # -------------------------------; ; # At this point, all RDF actions were defined (namely, the `Book` operations),; # so we can get values from the RResultPtr objects, triggering the event loop; # and getting the actual RooFit data objects.; roo_data_set = roo_data_set_result.GetValue(); roo_data_hist = roo_data_hist_result.GetValue(); ; # Let's inspect the dataset / datahist.; ; ; def print_data(data):; print(""""); data.Print(); for i in range(min(data.numEn",MatchSource.WIKI,doc/master/rf408__RDataFrameToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:6272,Availability,error,error,6272,", bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know that the binning is uniform and do some; # optimizations.; bins = [20]; ranges = [(-10, 10)]; counts, _ = np.histogramdd([x_arr], bins=bins, range=ranges); datahist_new_3 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins, ranges=ranges); ; print(""RooDataHist imported with uniform binning and exported back to numpy:""); print_histogram_output(datahist_new_3.to_numpy()); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14250.1, estimated distance to minimum: 2.14184e-09; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; mean -9.9828e-01 +/- 1.01e-02; sigma 1.0061e+00 +/- 7.11e-03; ; Mean of numpy array: 1.0066466535473984; Standard deviation of numpy array: 0.9973499677811349; Counts and bin edges from RooDataHist.to_numpy:; [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 2 2 5 10 17 32 38 50 78 123; 195 274 347 442 486 635 682 786 805 768 755 681 639 533 455 350 259 194; 124 93 62 27 28 16 3 2 1 1 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0]; ",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:2652,Deployability,update,updated,2652,"; # Now you can use the DataFrame e.g. for plotting. You can even combine this; # with the RooAbsReal.bins PyROOT function, which returns the binning from; # RooFit as a numpy array!; try:; import matplotlib.pyplot as plt; ; df.hist(column=""x"", bins=x.bins()); except Exception:; print(; 'Skipping `df.hist(column=""x"", bins=x.bins())` because matplotlib could not be imported or was not able to display the plot.'; ); ; del data; del arrays; del df; ; ; # Creating a dataset with NumPy and importing it to a RooDataSet; # --------------------------------------------------------------; ; # Now we create some Gaussian toy data with numpy, this time with a different; # mean.; x_arr = np.random.normal(-1.0, 1.0, (n_events,)); ; # Import the data to a RooDataSet, passing a dictionary of arrays and the; # corresponding RooRealVars just like you would pass to the RooDataSet; # constructor.; data = ROOT.RooDataSet.from_numpy({""x"": x_arr}, [x]); ; # Let's fit the Gaussian to the data. The mean is updated accordingly.; fit_result = gauss.fitTo(data, PrintLevel=-1, Save=True); fit_result.Print(); ; # We can now plot the model and the dataset with RooFit.; xframe = x.frame(Title=""Gaussian pdf""); data.plotOn(xframe); gauss.plotOn(xframe); ; # Draw RooFit plot on a canvas.; c = ROOT.TCanvas(""rf409_NumPyPandasToRooFit"", ""rf409_NumPyPandasToRooFit"", 800, 400); xframe.Draw(); c.SaveAs(""rf409_NumPyPandasToRooFit.png""); ; ; # Exporting a RooDataHist to NumPy arrays for histogram counts and bin edges; # --------------------------------------------------------------------------; ; ; def print_histogram_output(histogram_output):; counts, bin_edges = histogram_output; print(np.array(counts, dtype=int)); print(bin_edges[0]); ; ; # Create a binned clone of the dataset to show RooDataHist to NumPy export.; datahist = data.binnedClone(); ; # You can also export a RooDataHist to numpy arrays with; # RooDataHist.to_numpy(). As output, you will get a multidimensional array with; # the histogram counts ",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:4474,Integrability,interface,interface,4474,"data.binnedClone(); ; # You can also export a RooDataHist to numpy arrays with; # RooDataHist.to_numpy(). As output, you will get a multidimensional array with; # the histogram counts and a list of arrays with bin edges. This is comparable; # to the output of numpy.histogram (or numpy.histogramdd for the; # multidimensional case).; counts, bin_edges = datahist.to_numpy(); ; print(""Counts and bin edges from RooDataHist.to_numpy:""); print_histogram_output((counts, bin_edges)); ; # Let's compare the output to the counts and bin edges we get with; # numpy.histogramdd when we pass it the original samples:; print(""Counts and bin edges from np.histogram:""); print_histogram_output(np.histogramdd([x_arr], bins=[x.bins()])); ; # The array values should be the same!; ; ; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; ; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.; datahist_new_1 = ROOT.RooDataHist.from_numpy(counts, [x]); ; print(""RooDataHist imported with default binning and exported back to numpy:""); print_histogram_output(datahist_new_1.to_numpy()); ; ; # It's also possible to pass custom bin edges to `RooDataHist.from_numpy`, just; # like you pass them to `numpy.histogramdd` when you get the counts to fill the; # RooDataHist with:; bins = [np.linspace(-10, 10, 21)]; counts, _ = np.histogramdd([x_arr], bins=bins); datahist_new_2 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. ",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:4586,Modifiability,variab,variables,4586,"DataHist.to_numpy(). As output, you will get a multidimensional array with; # the histogram counts and a list of arrays with bin edges. This is comparable; # to the output of numpy.histogram (or numpy.histogramdd for the; # multidimensional case).; counts, bin_edges = datahist.to_numpy(); ; print(""Counts and bin edges from RooDataHist.to_numpy:""); print_histogram_output((counts, bin_edges)); ; # Let's compare the output to the counts and bin edges we get with; # numpy.histogramdd when we pass it the original samples:; print(""Counts and bin edges from np.histogram:""); print_histogram_output(np.histogramdd([x_arr], bins=[x.bins()])); ; # The array values should be the same!; ; ; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; ; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.; datahist_new_1 = ROOT.RooDataHist.from_numpy(counts, [x]); ; print(""RooDataHist imported with default binning and exported back to numpy:""); print_histogram_output(datahist_new_1.to_numpy()); ; ; # It's also possible to pass custom bin edges to `RooDataHist.from_numpy`, just; # like you pass them to `numpy.histogramdd` when you get the counts to fill the; # RooDataHist with:; bins = [np.linspace(-10, 10, 21)]; counts, _ = np.histogramdd([x_arr], bins=bins); datahist_new_2 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:5602,Performance,optimiz,optimizations,5602,"st the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.; datahist_new_1 = ROOT.RooDataHist.from_numpy(counts, [x]); ; print(""RooDataHist imported with default binning and exported back to numpy:""); print_histogram_output(datahist_new_1.to_numpy()); ; ; # It's also possible to pass custom bin edges to `RooDataHist.from_numpy`, just; # like you pass them to `numpy.histogramdd` when you get the counts to fill the; # RooDataHist with:; bins = [np.linspace(-10, 10, 21)]; counts, _ = np.histogramdd([x_arr], bins=bins); datahist_new_2 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know that the binning is uniform and do some; # optimizations.; bins = [20]; ranges = [(-10, 10)]; counts, _ = np.histogramdd([x_arr], bins=bins, range=ranges); datahist_new_3 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins, ranges=ranges); ; print(""RooDataHist imported with uniform binning and exported back to numpy:""); print_histogram_output(datahist_new_3.to_numpy()); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14250.1, estimated distance to",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:6366,Performance,optimiz,optimization,6366,", bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know that the binning is uniform and do some; # optimizations.; bins = [20]; ranges = [(-10, 10)]; counts, _ = np.histogramdd([x_arr], bins=bins, range=ranges); datahist_new_3 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins, ranges=ranges); ; print(""RooDataHist imported with uniform binning and exported back to numpy:""); print_histogram_output(datahist_new_3.to_numpy()); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14250.1, estimated distance to minimum: 2.14184e-09; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; mean -9.9828e-01 +/- 1.01e-02; sigma 1.0061e+00 +/- 7.11e-03; ; Mean of numpy array: 1.0066466535473984; Standard deviation of numpy array: 0.9973499677811349; Counts and bin edges from RooDataHist.to_numpy:; [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 2 2 5 10 17 32 38 50 78 123; 195 274 347 442 486 635 682 786 805 768 755 681 639 533 455 350 259 194; 124 93 62 27 28 16 3 2 1 1 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0]; ",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html:6463,Performance,optimiz,optimization,6463,", bins=bins); ; print(""RooDataHist imported with linspace binning and exported back to numpy:""); print_histogram_output(datahist_new_2.to_numpy()); ; # Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know that the binning is uniform and do some; # optimizations.; bins = [20]; ranges = [(-10, 10)]; counts, _ = np.histogramdd([x_arr], bins=bins, range=ranges); datahist_new_3 = ROOT.RooDataHist.from_numpy(counts, [x], bins=bins, ranges=ranges); ; print(""RooDataHist imported with uniform binning and exported back to numpy:""); print_histogram_output(datahist_new_3.to_numpy()); [#1] INFO:Fitting -- RooAbsPdf::fitTo(gauss_over_gauss_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_gauss_over_gauss_Int[x]_) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 14250.1, estimated distance to minimum: 2.14184e-09; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; mean -9.9828e-01 +/- 1.01e-02; sigma 1.0061e+00 +/- 7.11e-03; ; Mean of numpy array: 1.0066466535473984; Standard deviation of numpy array: 0.9973499677811349; Counts and bin edges from RooDataHist.to_numpy:; [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 2 2 5 10 17 32 38 50 78 123; 195 274 347 442 486 635 682 786 805 768 755 681 639 533 455 350 259 194; 124 93 62 27 28 16 3 2 1 1 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; 0 0 0 0 0 0 0 0 0 0]; ",MatchSource.WIKI,doc/master/rf409__NumPyPandasToRooFit_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf409__NumPyPandasToRooFit_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:9251,Availability,error,error,9251,"; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf501_simultaneouspdfDefinition rf501_simultaneouspdf.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:4125,Deployability,integrat,integrated,4125,"ng category sample as index:; // associate model with the physics state and model_ctl with the control state; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", {{""physics"", &model}, {""control"", &model_ctl}}, sample);; ; // P e r f o r m a s i m u l t a n e o u s f i t; // ---------------------------------------------------; ; // Perform simultaneous fit of model to data and model_ctl to data_ctl; std::unique_ptr<RooFitResult> fitResult{simPdf.fitTo(combData, PrintLevel(-1), Save(), PrintLevel(-1))};; fitResult->Print();; ; // P l o t m o d e l s l i c e s o n d a t a s l i c e s; // ----------------------------------------------------------------; ; // Make a frame for the physics sample; RooPlot *frame1 = x.frame(Title(""Physics sample""));; ; // Plot all data tagged as physics sample; combData.plotOn(frame1, Cut(""sample==sample::physics""));; ; // Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated.; // In other words: Since the PDF doesn't know the number of events in the different; // category states, it doesn't know how much of each component it has to project out.; // This information is read from the data.; simPdf.plotOn(frame1, Slice(sample, ""physics""), ProjWData(sample, combData));; simPdf.plotOn(frame1, Slice(sample, ""physics""), Components(""px""), ProjWData(sample, combData), LineStyle(kDashed));; ; // The same plot for the control sample slice. We do this with a different; // approach this time, for illustration purposes. Here, we are slicing the; // dataset and then use the data slice for the projection, because then the; // RooFit::Slice() becomes unnecessary. This approach is more general,; // because you can plot sums of slices by using logical or in the Cut(); // command.; RooPlot *frame2 = x.frame(Bins(30), Title(""Control sample""));; std::unique_ptr<RooAbsData> slicedDat",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:5050,Energy Efficiency,reduce,reduce,5050,"ex category; // and can thus not be integrated.; // In other words: Since the PDF doesn't know the number of events in the different; // category states, it doesn't know how much of each component it has to project out.; // This information is read from the data.; simPdf.plotOn(frame1, Slice(sample, ""physics""), ProjWData(sample, combData));; simPdf.plotOn(frame1, Slice(sample, ""physics""), Components(""px""), ProjWData(sample, combData), LineStyle(kDashed));; ; // The same plot for the control sample slice. We do this with a different; // approach this time, for illustration purposes. Here, we are slicing the; // dataset and then use the data slice for the projection, because then the; // RooFit::Slice() becomes unnecessary. This approach is more general,; // because you can plot sums of slices by using logical or in the Cut(); // command.; RooPlot *frame2 = x.frame(Bins(30), Title(""Control sample""));; std::unique_ptr<RooAbsData> slicedData{combData.reduce(Cut(""sample==sample::control""))};; slicedData->plotOn(frame2);; simPdf.plotOn(frame2, ProjWData(sample, *slicedData));; simPdf.plotOn(frame2, Components(""px_ctl""), ProjWData(sample, *slicedData), LineStyle(kDashed));; ; // The same plot for all the phase space. Here, we can just use the original; // combined dataset.; RooPlot *frame3 = x.frame(Title(""Both samples""));; combData.plotOn(frame3);; simPdf.plotOn(frame3, ProjWData(sample, combData));; simPdf.plotOn(frame3, Components(""px,px_ctl""), ProjWData(sample, combData),; LineStyle(kDashed));; ; TCanvas *c = new TCanvas(""rf501_simultaneouspdf"", ""rf403_simultaneouspdf"", 1200, 400);; c->Divide(3);; auto draw = [&](int i, RooPlot & frame) {; c->cd(i);; gPad->SetLeftMargin(0.15);; frame.GetYaxis()->SetTitleOffset(1.4);; frame.Draw();; };; draw(1, *frame1);; draw(2, *frame2);; draw(3, *frame3);; }; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; RooAddPdf.h; RooCategory.h; RooChebychev.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:4125,Integrability,integrat,integrated,4125,"ng category sample as index:; // associate model with the physics state and model_ctl with the control state; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", {{""physics"", &model}, {""control"", &model_ctl}}, sample);; ; // P e r f o r m a s i m u l t a n e o u s f i t; // ---------------------------------------------------; ; // Perform simultaneous fit of model to data and model_ctl to data_ctl; std::unique_ptr<RooFitResult> fitResult{simPdf.fitTo(combData, PrintLevel(-1), Save(), PrintLevel(-1))};; fitResult->Print();; ; // P l o t m o d e l s l i c e s o n d a t a s l i c e s; // ----------------------------------------------------------------; ; // Make a frame for the physics sample; RooPlot *frame1 = x.frame(Title(""Physics sample""));; ; // Plot all data tagged as physics sample; combData.plotOn(frame1, Cut(""sample==sample::physics""));; ; // Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated.; // In other words: Since the PDF doesn't know the number of events in the different; // category states, it doesn't know how much of each component it has to project out.; // This information is read from the data.; simPdf.plotOn(frame1, Slice(sample, ""physics""), ProjWData(sample, combData));; simPdf.plotOn(frame1, Slice(sample, ""physics""), Components(""px""), ProjWData(sample, combData), LineStyle(kDashed));; ; // The same plot for the control sample slice. We do this with a different; // approach this time, for illustration purposes. Here, we are slicing the; // dataset and then use the data slice for the projection, because then the; // RooFit::Slice() becomes unnecessary. This approach is more general,; // because you can plot sums of slices by using logical or in the Cut(); // command.; RooPlot *frame2 = x.frame(Bins(30), Title(""Control sample""));; std::unique_ptr<RooAbsData> slicedDat",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:7407,Modifiability,variab,variable,7407,"ition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooSimultaneousFacilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.Definition RooSimultaneous.h:41; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::BinsRooCmdArg Bins(Int_t nbin)Definition RooGlobalFunc.cxx:547; RooFit::IndexRooCmdArg Index(RooCategory &icat)Definition RooGlobalFunc.cxx:386; RooFit::ImportRooCmdArg Import(const char *state, TH1 &histo)Definition RooGlobalFunc.cxx:390; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::ComponentsRooCmdArg Components(Args_t &&... argsOrArgSet)Definition RooGlobalFunc.h:128; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::Sli",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:10267,Modifiability,variab,variable,10267,"02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (px); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px,px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl,model); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf501_simultaneouspdf.C. tutorialsroofitrf501_simultaneouspdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:10652,Modifiability,variab,variable,10652,"02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (px); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px,px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl,model); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf501_simultaneouspdf.C. tutorialsroofitrf501_simultaneouspdf.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:9345,Performance,optimiz,optimization,9345,"; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf501_simultaneouspdfDefinition rf501_simultaneouspdf.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:9442,Performance,optimiz,optimization,9442,"; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf501_simultaneouspdfDefinition rf501_simultaneouspdf.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:4055,Safety,predict,prediction,4055,"ng category sample as index:; // associate model with the physics state and model_ctl with the control state; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", {{""physics"", &model}, {""control"", &model_ctl}}, sample);; ; // P e r f o r m a s i m u l t a n e o u s f i t; // ---------------------------------------------------; ; // Perform simultaneous fit of model to data and model_ctl to data_ctl; std::unique_ptr<RooFitResult> fitResult{simPdf.fitTo(combData, PrintLevel(-1), Save(), PrintLevel(-1))};; fitResult->Print();; ; // P l o t m o d e l s l i c e s o n d a t a s l i c e s; // ----------------------------------------------------------------; ; // Make a frame for the physics sample; RooPlot *frame1 = x.frame(Title(""Physics sample""));; ; // Plot all data tagged as physics sample; combData.plotOn(frame1, Cut(""sample==sample::physics""));; ; // Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated.; // In other words: Since the PDF doesn't know the number of events in the different; // category states, it doesn't know how much of each component it has to project out.; // This information is read from the data.; simPdf.plotOn(frame1, Slice(sample, ""physics""), ProjWData(sample, combData));; simPdf.plotOn(frame1, Slice(sample, ""physics""), Components(""px""), ProjWData(sample, combData), LineStyle(kDashed));; ; // The same plot for the control sample slice. We do this with a different; // approach this time, for illustration purposes. Here, we are slicing the; // dataset and then use the data slice for the projection, because then the; // RooFit::Slice() becomes unnecessary. This approach is more general,; // because you can plot sums of slices by using logical or in the Cut(); // command.; RooPlot *frame2 = x.frame(Bins(30), Title(""Control sample""));; std::unique_ptr<RooAbsData> slicedDat",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:4901,Testability,log,logical,4901,"le::physics""));; ; // Plot ""physics"" slice of simultaneous pdf.; // NBL You _must_ project the sample index category with data using ProjWData; // as a RooSimultaneous makes no prediction on the shape in the index category; // and can thus not be integrated.; // In other words: Since the PDF doesn't know the number of events in the different; // category states, it doesn't know how much of each component it has to project out.; // This information is read from the data.; simPdf.plotOn(frame1, Slice(sample, ""physics""), ProjWData(sample, combData));; simPdf.plotOn(frame1, Slice(sample, ""physics""), Components(""px""), ProjWData(sample, combData), LineStyle(kDashed));; ; // The same plot for the control sample slice. We do this with a different; // approach this time, for illustration purposes. Here, we are slicing the; // dataset and then use the data slice for the projection, because then the; // RooFit::Slice() becomes unnecessary. This approach is more general,; // because you can plot sums of slices by using logical or in the Cut(); // command.; RooPlot *frame2 = x.frame(Bins(30), Title(""Control sample""));; std::unique_ptr<RooAbsData> slicedData{combData.reduce(Cut(""sample==sample::control""))};; slicedData->plotOn(frame2);; simPdf.plotOn(frame2, ProjWData(sample, *slicedData));; simPdf.plotOn(frame2, Components(""px_ctl""), ProjWData(sample, *slicedData), LineStyle(kDashed));; ; // The same plot for all the phase space. Here, we can just use the original; // combined dataset.; RooPlot *frame3 = x.frame(Title(""Both samples""));; combData.plotOn(frame3);; simPdf.plotOn(frame3, ProjWData(sample, combData));; simPdf.plotOn(frame3, Components(""px,px_ctl""), ProjWData(sample, combData),; LineStyle(kDashed));; ; TCanvas *c = new TCanvas(""rf501_simultaneouspdf"", ""rf403_simultaneouspdf"", 1200, 400);; c->Divide(3);; auto draw = [&](int i, RooPlot & frame) {; c->cd(i);; gPad->SetLeftMargin(0.15);; frame.GetYaxis()->SetTitleOffset(1.4);; frame.Draw();; };; draw(1, *frame1);; draw(2, ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:5605,Availability,error,error,5605,"slicedData)); simPdf.plotOn(frame2, Components=""px_ctl"", ProjWData=(sample, slicedData), LineStyle=""--""); ; # The same plot for all the phase space. Here, we can just use the original; # combined dataset.; frame3 = x.frame(Title=""Both samples""); combData.plotOn(frame3); simPdf.plotOn(frame3, ProjWData=(sample, combData)); simPdf.plotOn(frame3, Components=""px,px_ctl"", ProjWData=(sample, combData), LineStyle=""--""); ; c = ROOT.TCanvas(""rf501_simultaneouspdf"", ""rf501_simultaneouspdf"", 1200, 400); c.Divide(3); ; ; def draw(i, frame):; c.cd(i); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; ; draw(1, frame1); draw(2, frame2); draw(3, frame3); ; c.SaveAs(""rf501_simultaneouspdf.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:3605,Deployability,integrat,integrated,3605,"-----------------------------------------------------------------------; ; # Construct a simultaneous pdf using category sample as index: associate model; # with the physics state and model_ctl with the control state; simPdf = ROOT.RooSimultaneous(""simPdf"", ""simultaneous pdf"", {""physics"": model, ""control"": model_ctl}, sample); ; # Perform a simultaneous fit; # ---------------------------------------------------; ; # Perform simultaneous fit of model to data and model_ctl to data_ctl; fitResult = simPdf.fitTo(combData, PrintLevel=-1, Save=True); fitResult.Print(); ; # Plot model slices on data slices; # ----------------------------------------------------------------; ; # Make a frame for the physics sample; frame1 = x.frame(Title=""Physics sample""); ; # Plot all data tagged as physics sample; combData.plotOn(frame1, Cut=""sample==sample::physics""); ; # Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.; simPdf.plotOn(frame1, Slice=(sample, ""physics""), ProjWData=(sample, combData)); simPdf.plotOn(frame1, Slice=(sample, ""physics""), Components=""px"", ProjWData=(sample, combData), LineStyle=""--""); ; # The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.; frame2 = x.frame(Title=""Control sample""); slicedData = combData.reduce(Cut=""sample==sample::control""); slicedData.plotOn(fr",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:4461,Energy Efficiency,reduce,reduce,4461," using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.; simPdf.plotOn(frame1, Slice=(sample, ""physics""), ProjWData=(sample, combData)); simPdf.plotOn(frame1, Slice=(sample, ""physics""), Components=""px"", ProjWData=(sample, combData), LineStyle=""--""); ; # The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.; frame2 = x.frame(Title=""Control sample""); slicedData = combData.reduce(Cut=""sample==sample::control""); slicedData.plotOn(frame2); simPdf.plotOn(frame2, ProjWData=(sample, slicedData)); simPdf.plotOn(frame2, Components=""px_ctl"", ProjWData=(sample, slicedData), LineStyle=""--""); ; # The same plot for all the phase space. Here, we can just use the original; # combined dataset.; frame3 = x.frame(Title=""Both samples""); combData.plotOn(frame3); simPdf.plotOn(frame3, ProjWData=(sample, combData)); simPdf.plotOn(frame3, Components=""px,px_ctl"", ProjWData=(sample, combData), LineStyle=""--""); ; c = ROOT.TCanvas(""rf501_simultaneouspdf"", ""rf501_simultaneouspdf"", 1200, 400); c.Divide(3); ; ; def draw(i, frame):; c.cd(i); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; ; draw(1, frame1); draw(2, frame2); draw(3, frame3); ; c.SaveAs(""rf501_simultaneouspdf.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mav",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:3605,Integrability,integrat,integrated,3605,"-----------------------------------------------------------------------; ; # Construct a simultaneous pdf using category sample as index: associate model; # with the physics state and model_ctl with the control state; simPdf = ROOT.RooSimultaneous(""simPdf"", ""simultaneous pdf"", {""physics"": model, ""control"": model_ctl}, sample); ; # Perform a simultaneous fit; # ---------------------------------------------------; ; # Perform simultaneous fit of model to data and model_ctl to data_ctl; fitResult = simPdf.fitTo(combData, PrintLevel=-1, Save=True); fitResult.Print(); ; # Plot model slices on data slices; # ----------------------------------------------------------------; ; # Make a frame for the physics sample; frame1 = x.frame(Title=""Physics sample""); ; # Plot all data tagged as physics sample; combData.plotOn(frame1, Cut=""sample==sample::physics""); ; # Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.; simPdf.plotOn(frame1, Slice=(sample, ""physics""), ProjWData=(sample, combData)); simPdf.plotOn(frame1, Slice=(sample, ""physics""), Components=""px"", ProjWData=(sample, combData), LineStyle=""--""); ; # The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.; frame2 = x.frame(Title=""Control sample""); slicedData = combData.reduce(Cut=""sample==sample::control""); slicedData.plotOn(fr",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:6621,Modifiability,variab,variable,6621,"+/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (px); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px,px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl,model); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf501_simultaneouspdf.py. tutorialsroofitrf501_simultaneouspdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:7006,Modifiability,variab,variable,7006,"+/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (px); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) slice variable sample was not projected anyway; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x averages with data index category (sample); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) directly selected PDF components: (px,px_ctl); [#1] INFO:Plotting -- RooAbsPdf::plotOn(simPdf) indirectly selected PDF components: (model_ctl,model); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf501_simultaneouspdf.py. tutorialsroofitrf501_simultaneouspdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:5699,Performance,optimiz,optimization,5699,"slicedData)); simPdf.plotOn(frame2, Components=""px_ctl"", ProjWData=(sample, slicedData), LineStyle=""--""); ; # The same plot for all the phase space. Here, we can just use the original; # combined dataset.; frame3 = x.frame(Title=""Both samples""); combData.plotOn(frame3); simPdf.plotOn(frame3, ProjWData=(sample, combData)); simPdf.plotOn(frame3, Components=""px,px_ctl"", ProjWData=(sample, combData), LineStyle=""--""); ; c = ROOT.TCanvas(""rf501_simultaneouspdf"", ""rf501_simultaneouspdf"", 1200, 400); c.Divide(3); ; ; def draw(i, frame):; c.cd(i); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; ; draw(1, frame1); draw(2, frame2); draw(3, frame3); ; c.SaveAs(""rf501_simultaneouspdf.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:5796,Performance,optimiz,optimization,5796,"slicedData)); simPdf.plotOn(frame2, Components=""px_ctl"", ProjWData=(sample, slicedData), LineStyle=""--""); ; # The same plot for all the phase space. Here, we can just use the original; # combined dataset.; frame3 = x.frame(Title=""Both samples""); combData.plotOn(frame3); simPdf.plotOn(frame3, ProjWData=(sample, combData)); simPdf.plotOn(frame3, Components=""px,px_ctl"", ProjWData=(sample, combData), LineStyle=""--""); ; c = ROOT.TCanvas(""rf501_simultaneouspdf"", ""rf501_simultaneouspdf"", 1200, 400); c.Divide(3); ; ; def draw(i, frame):; c.cd(i); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; ; draw(1, frame1); draw(2, frame2); draw(3, frame3); ; c.SaveAs(""rf501_simultaneouspdf.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); [#",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:3536,Safety,predict,prediction,3536,"-----------------------------------------------------------------------; ; # Construct a simultaneous pdf using category sample as index: associate model; # with the physics state and model_ctl with the control state; simPdf = ROOT.RooSimultaneous(""simPdf"", ""simultaneous pdf"", {""physics"": model, ""control"": model_ctl}, sample); ; # Perform a simultaneous fit; # ---------------------------------------------------; ; # Perform simultaneous fit of model to data and model_ctl to data_ctl; fitResult = simPdf.fitTo(combData, PrintLevel=-1, Save=True); fitResult.Print(); ; # Plot model slices on data slices; # ----------------------------------------------------------------; ; # Make a frame for the physics sample; frame1 = x.frame(Title=""Physics sample""); ; # Plot all data tagged as physics sample; combData.plotOn(frame1, Cut=""sample==sample::physics""); ; # Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.; simPdf.plotOn(frame1, Slice=(sample, ""physics""), ProjWData=(sample, combData)); simPdf.plotOn(frame1, Slice=(sample, ""physics""), Components=""px"", ProjWData=(sample, combData), LineStyle=""--""); ; # The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.; frame2 = x.frame(Title=""Control sample""); slicedData = combData.reduce(Cut=""sample==sample::control""); slicedData.plotOn(fr",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf501__simultaneouspdf_8py.html:4360,Testability,log,logical,4360,"n(frame1, Cut=""sample==sample::physics""); ; # Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.; simPdf.plotOn(frame1, Slice=(sample, ""physics""), ProjWData=(sample, combData)); simPdf.plotOn(frame1, Slice=(sample, ""physics""), Components=""px"", ProjWData=(sample, combData), LineStyle=""--""); ; # The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.; frame2 = x.frame(Title=""Control sample""); slicedData = combData.reduce(Cut=""sample==sample::control""); slicedData.plotOn(frame2); simPdf.plotOn(frame2, ProjWData=(sample, slicedData)); simPdf.plotOn(frame2, Components=""px_ctl"", ProjWData=(sample, slicedData), LineStyle=""--""); ; # The same plot for all the phase space. Here, we can just use the original; # combined dataset.; frame3 = x.frame(Title=""Both samples""); combData.plotOn(frame3); simPdf.plotOn(frame3, ProjWData=(sample, combData)); simPdf.plotOn(frame3, Components=""px,px_ctl"", ProjWData=(sample, combData), LineStyle=""--""); ; c = ROOT.TCanvas(""rf501_simultaneouspdf"", ""rf501_simultaneouspdf"", 1200, 400); c.Divide(3); ; ; def draw(i, frame):; c.cd(i); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; ; draw(1, frame1); draw(2, frame2); draw(3, frame3); ; c.SaveAs(""rf501_simultaneouspdf.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) ",MatchSource.WIKI,doc/master/rf501__simultaneouspdf_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8py.html
https://root.cern/doc/master/rf502__wspacewrite_8C.html:5329,Modifiability,variab,variables,5329,"wspacewriteDefinition rf502_wspacewrite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sig1frac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset modelData; ; RooWorkspace(w) workspace contents; ; variables; ---------; (a0,a1,bkgfrac,mean,sig1frac,sigma1,sigma2,x); ; p.d.f.s; -------; RooChebychev::bkg[ x=x coefList=(a0,a1) ] = 0.8; RooAddPdf::model[ bkgfrac * bkg + [%] * sig ] = 0.9/1; RooAddPdf::sig[ sig1frac * sig1 + [%] * sig2 ] = 1/1; RooGaussian::sig1[ x=x mean=mean sigma=sigma1 ] = 1; RooGaussian::sig2[ x=x mean=mean sigma=sigma2 ] = 1; ; datasets; --------; RooDataSet::modelData(x); ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition",MatchSource.WIKI,doc/master/rf502__wspacewrite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8C.html
https://root.cern/doc/master/rf502__wspacewrite_8C.html:3944,Safety,safe,safe,3944,"yle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf502_wspacewriteDefinition rf502_wspacewrite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:Objec",MatchSource.WIKI,doc/master/rf502__wspacewrite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8C.html
https://root.cern/doc/master/rf502__wspacewrite_8C.html:4111,Safety,safe,safe,4111,"on RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooChebychevChebychev polynomial p.d.f.Definition RooChebychev.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf502_wspacewriteDefinition rf502_wspacewrite.py:1; ; [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sig1frac; [#1] INFO:ObjectHan",MatchSource.WIKI,doc/master/rf502__wspacewrite_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8C.html
https://root.cern/doc/master/rf502__wspacewrite_8py.html:3622,Modifiability,variab,variables,3622,"file; w.writeToFile(""rf502_workspace_py.root""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sig1frac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing dataset modelData; ; RooWorkspace(w) workspace contents; ; variables; ---------; (a0,a1,bkgfrac,mean,sig1frac,sigma1,sigma2,x); ; p.d.f.s; -------; RooChebychev::bkg[ x=x coefList=(a0,a1) ] = 1; RooAddPdf::model[ bkgfrac * bkg + [%] * sig ] = 1/1; RooAddPdf::sig[ sig1frac * sig1 + [%] * sig2 ] = 1/1; RooGaussian::sig1[ x=x mean=mean sigma=sigma1 ] = 1; RooGaussian::sig2[ x=x mean=mean sigma=sigma2 ] = 1; ; datasets; --------; RooDataSet::modelData(x); ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verke",MatchSource.WIKI,doc/master/rf502__wspacewrite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8py.html
https://root.cern/doc/master/rf502__wspacewrite_8py.html:2237,Safety,safe,safe,2237,"1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0); sig = ROOT.RooAddPdf(""sig"", ""Signal"", [sig1, sig2], [sig1frac]); ; # Sum the composite signal and background; bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Generate a data sample of 1000 events in x from model; data = model.generate({x}, 1000); ; # Create workspace, import data and model; # -----------------------------------------------------------------------------; ; # Create a empty workspace; w = ROOT.RooWorkspace(""w"", ""workspace""); ; # Import model and all its components into the workspace; w.Import(model); ; # Import data into the workspace; w.Import(data); ; # Print workspace contents; w.Print(); ; # Save workspace in file; # -------------------------------------------; ; # Save the workspace into a ROOT file; w.writeToFile(""rf502_workspace_py.root""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:Objec",MatchSource.WIKI,doc/master/rf502__wspacewrite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8py.html
https://root.cern/doc/master/rf502__wspacewrite_8py.html:2404,Safety,safe,safe,2404," bkgfrac = ROOT.RooRealVar(""bkgfrac"", ""fraction of background"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""g1+g2+a"", [bkg, sig], [bkgfrac]); ; # Generate a data sample of 1000 events in x from model; data = model.generate({x}, 1000); ; # Create workspace, import data and model; # -----------------------------------------------------------------------------; ; # Create a empty workspace; w = ROOT.RooWorkspace(""w"", ""workspace""); ; # Import model and all its components into the workspace; w.Import(model); ; # Import data into the workspace; w.Import(data); ; # Print workspace contents; w.Print(); ; # Save workspace in file; # -------------------------------------------; ; # Save the workspace into a ROOT file; w.writeToFile(""rf502_workspace_py.root""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooChebychev::bkg; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::a1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::bkgfrac; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::sig; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::sig1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::mean; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sigma1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::sig1frac; [#1] INFO:ObjectHan",MatchSource.WIKI,doc/master/rf502__wspacewrite_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf502__wspacewrite_8py.html
https://root.cern/doc/master/rf503__wspaceread_8C.html:5801,Availability,error,error,5801,"FitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf503_wspacereadDefinition rf503_wspaceread.py:1; ; 0x559b3dca42c0 RooAddPdf::model = 0.9/1 [Auto,Clean] ; 0x559b3deb0210/V- RooChebychev::bkg = 0.8 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3c2d1250/V- RooRealVar::a0 = 0.5; 0x559b3c353b60/V- RooRealVar::a1 = 0.2; 0x559b3df69400/V- RooRealVar::bkgfrac = 0.5; 0x559b3defe0a0/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x559b3ded9e50/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d6274d0/V- RooRealVar::sigma1 = 0.5; 0x559b3bf56940/V- RooRealVar::sig1frac = 0.8; 0x559b3def8000/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d7146b0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf503_wspaceread.C. tutorialsroofitrf503_wspaceread.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html
https://root.cern/doc/master/rf503__wspaceread_8C.html:2924,Integrability,interface,interface,2924,"e frame on the canvas; new TCanvas(""rf503_wspaceread"", ""rf503_wspaceread"", 600, 600);; gPad->SetLeftMargin(0.15);; xframe->GetYaxis()->SetTitleOffset(1.4);; xframe->Draw();; }; f#define f(i)Definition RSha256.hxx:104; RooAddPdf.h; RooChebychev.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooRealVar.h; RooWorkspace.h; kDashed@ kDashedDefinition TAttLine.h:48; kDotted@ kDottedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; TFile.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsDataAbstract base class for binned and unbinned datasets.Definition RooAbsData.h:57; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::plotOnRooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option",MatchSource.WIKI,doc/master/rf503__wspaceread_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html
https://root.cern/doc/master/rf503__wspaceread_8C.html:3795,Modifiability,variab,variable,3795,"st overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsDataAbstract base class for binned and unbinned datasets.Definition RooAbsData.h:57; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::plotOnRooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf503_wspacereadDef",MatchSource.WIKI,doc/master/rf503__wspaceread_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html
https://root.cern/doc/master/rf503__wspaceread_8C.html:5895,Performance,optimiz,optimization,5895,"FitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf503_wspacereadDefinition rf503_wspaceread.py:1; ; 0x559b3dca42c0 RooAddPdf::model = 0.9/1 [Auto,Clean] ; 0x559b3deb0210/V- RooChebychev::bkg = 0.8 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3c2d1250/V- RooRealVar::a0 = 0.5; 0x559b3c353b60/V- RooRealVar::a1 = 0.2; 0x559b3df69400/V- RooRealVar::bkgfrac = 0.5; 0x559b3defe0a0/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x559b3ded9e50/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d6274d0/V- RooRealVar::sigma1 = 0.5; 0x559b3bf56940/V- RooRealVar::sig1frac = 0.8; 0x559b3def8000/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d7146b0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf503_wspaceread.C. tutorialsroofitrf503_wspaceread.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html
https://root.cern/doc/master/rf503__wspaceread_8C.html:5992,Performance,optimiz,optimization,5992,"FitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf503_wspacereadDefinition rf503_wspaceread.py:1; ; 0x559b3dca42c0 RooAddPdf::model = 0.9/1 [Auto,Clean] ; 0x559b3deb0210/V- RooChebychev::bkg = 0.8 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3c2d1250/V- RooRealVar::a0 = 0.5; 0x559b3c353b60/V- RooRealVar::a1 = 0.2; 0x559b3df69400/V- RooRealVar::bkgfrac = 0.5; 0x559b3defe0a0/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x559b3ded9e50/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d6274d0/V- RooRealVar::sigma1 = 0.5; 0x559b3bf56940/V- RooRealVar::sig1frac = 0.8; 0x559b3def8000/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x559b3c0035d0/V- RooRealVar::x = 5; 0x559b3d77d310/V- RooRealVar::mean = 5; 0x559b3d7146b0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf503_wspaceread.C. tutorialsroofitrf503_wspaceread.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8C.html
https://root.cern/doc/master/rf503__wspaceread_8py.html:2645,Availability,error,error,2645,"Style="":""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf503_wspaceread"", ""rf503_wspaceread"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf503_wspaceread.png""); 0x8fdb600 RooAddPdf::model = 1/1 [Auto,Clean] ; 0x91994b0/V- RooChebychev::bkg = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x27be9c0/V- RooRealVar::a0 = 0.5; 0x2765460/V- RooRealVar::a1 = 0; 0x9279200/V- RooRealVar::bkgfrac = 0.5; 0x926e430/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x91f8100/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x4735f60/V- RooRealVar::sigma1 = 0.5; 0x4735b70/V- RooRealVar::sig1frac = 0.8; 0x9205290/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x873e5a0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf503_wspaceread.py. tutorialsroofitrf503_wspaceread.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8py.html
https://root.cern/doc/master/rf503__wspaceread_8py.html:2739,Performance,optimiz,optimization,2739,"Style="":""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf503_wspaceread"", ""rf503_wspaceread"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf503_wspaceread.png""); 0x8fdb600 RooAddPdf::model = 1/1 [Auto,Clean] ; 0x91994b0/V- RooChebychev::bkg = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x27be9c0/V- RooRealVar::a0 = 0.5; 0x2765460/V- RooRealVar::a1 = 0; 0x9279200/V- RooRealVar::bkgfrac = 0.5; 0x926e430/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x91f8100/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x4735f60/V- RooRealVar::sigma1 = 0.5; 0x4735b70/V- RooRealVar::sig1frac = 0.8; 0x9205290/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x873e5a0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf503_wspaceread.py. tutorialsroofitrf503_wspaceread.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8py.html
https://root.cern/doc/master/rf503__wspaceread_8py.html:2836,Performance,optimiz,optimization,2836,"Style="":""); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf503_wspaceread"", ""rf503_wspaceread"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf503_wspaceread.png""); 0x8fdb600 RooAddPdf::model = 1/1 [Auto,Clean] ; 0x91994b0/V- RooChebychev::bkg = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x27be9c0/V- RooRealVar::a0 = 0.5; 0x2765460/V- RooRealVar::a1 = 0; 0x9279200/V- RooRealVar::bkgfrac = 0.5; 0x926e430/V- RooAddPdf::sig = 1/1 [Auto,Clean] ; 0x91f8100/V- RooGaussian::sig1 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x4735f60/V- RooRealVar::sigma1 = 0.5; 0x4735b70/V- RooRealVar::sig1frac = 0.8; 0x9205290/V- RooGaussian::sig2 = 1 [Auto,Dirty] ; 0x880af10/V- RooRealVar::x = 5; 0x87e28d0/V- RooRealVar::mean = 5; 0x873e5a0/V- RooRealVar::sigma2 = 1; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) directly selected PDF components: (bkg,sig2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(model) indirectly selected PDF components: (sig); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf503_wspaceread.py. tutorialsroofitrf503_wspaceread.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,doc/master/rf503__wspaceread_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf503__wspaceread_8py.html
https://root.cern/doc/master/rf504__simwstool_8C.html:6030,Modifiability,config,configured,6030,"Var::p0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::c; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::d; Splitrule for p.d.f model with state list ; parameter m is split with constraint in categories (c); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of prototype pdfs (model); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of splitting categories (c); [#1] INFO:ObjectHandling -- RooSimPdfBuilder::executeBuild: processing prototype pdf model; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: configured customizers for all prototype pdfs; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: Customizing prototype pdf model for mode run1; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: Customizing prototype pdf model for mode run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooSimultaneous::model_sim; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model_run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g_run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m_run2; 0x55656a223190 RooSimultaneous::model_sim = 1 [Auto,Dirty] ; 0x556569c50c80/V- RooCategory::c = run2(idx = 1); ; 0x55656a228010/V- RooAddPdf::model_run1 = 1/1 [Auto,Clean] ; 0x556569f7c820/V- RooGaussian::g_run1 = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x556569f7f4c0/V- RooRealVar::m_run1 = 0; 0x55656b8a01d0/V- RooRealVar::s = 1; 0x556569cc56f0/V- RooRealVar::f = 0.5; 0x55656b8a52d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x55656b8a99b0/V- RooRealVar::p0 = 0.01; 0x55656a397b30/V- RooAddPdf::model_run2 = 1/1 [A",MatchSource.WIKI,doc/master/rf504__simwstool_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8C.html
https://root.cern/doc/master/rf504__simwstool_8C.html:7828,Modifiability,variab,variables,7828,"(w) importing RooRealVar::m_run2; 0x55656a223190 RooSimultaneous::model_sim = 1 [Auto,Dirty] ; 0x556569c50c80/V- RooCategory::c = run2(idx = 1); ; 0x55656a228010/V- RooAddPdf::model_run1 = 1/1 [Auto,Clean] ; 0x556569f7c820/V- RooGaussian::g_run1 = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x556569f7f4c0/V- RooRealVar::m_run1 = 0; 0x55656b8a01d0/V- RooRealVar::s = 1; 0x556569cc56f0/V- RooRealVar::f = 0.5; 0x55656b8a52d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x55656b8a99b0/V- RooRealVar::p0 = 0.01; 0x55656a397b30/V- RooAddPdf::model_run2 = 1/1 [Auto,Clean] ; 0x55656a3f28a0/V- RooGaussian::g_run2 = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x55656a3f4db0/V- RooRealVar::m_run2 = 0; 0x55656b8a01d0/V- RooRealVar::s = 1; 0x556569cc56f0/V- RooRealVar::f = 0.5; 0x55656b8a52d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x55656b8aeb30/V- RooRealVar::x = 0; 0x55656b8a99b0/V- RooRealVar::p0 = 0.01; ; RooWorkspace(w) w contents; ; variables; ---------; (c,d,f,m,m_run1,m_run2,p0,s,x); ; p.d.f.s; -------; RooGaussian::g[ x=x mean=m sigma=s ] = 1; RooGaussian::g_run1[ x=x mean=m_run1 sigma=s ] = 0.011109; RooGaussian::g_run2[ x=x mean=m_run2 sigma=s ] = 0.011109; RooAddPdf::model[ f * g + [%] * p ] = 1/1; RooAddPdf::model_run1[ f * g_run1 + [%] * p ] = 0.505554/1; RooAddPdf::model_run2[ f * g_run2 + [%] * p ] = 0.505554/1; RooSimultaneous::model_sim[ indexCat=c run1=model_run1 run2=model_run2 ] = 0.505554; RooPolynomial::p[ x=x coefList=(p0) ] = 1; ; Splitrule for p.d.f model with state list ; parameter p0 is split with constraint in categories (c,d); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of prototype pdfs (model); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of splitting categories (c,d); [#1] INFO:ObjectHandling -- RooSimPdfBuilder::executeBuild: processing prototype pdf model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooMultiCategory::c,d; [#1] INFO:ObjectHandling",MatchSource.WIKI,doc/master/rf504__simwstool_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8C.html
https://root.cern/doc/master/rf504__simwstool_8C.html:8871,Modifiability,config,configured,8871,,MatchSource.WIKI,doc/master/rf504__simwstool_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8C.html
https://root.cern/doc/master/rf504__simwstool_8C.html:4772,Safety,safe,safe,4772,"; RooCategoryObject to represent discrete states.Definition RooCategory.h:28; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooSimWSToolThe RooSimWSTool is a tool operating on RooWorkspace objects that can clone PDFs into a series of var...Definition RooSimWSTool.h:38; RooSimultaneousFacilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.Definition RooSimultaneous.h:41; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf504_simwstoolDefinition rf504_simwstool.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::s; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::f; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooPolynomial::p; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::p0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::c; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::d; Splitrule for p.d.f model with state list ; parameter m is split with constraint in categories (c); [#1] INFO:ObjectHandling",MatchSource.WIKI,doc/master/rf504__simwstool_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8C.html
https://root.cern/doc/master/rf504__simwstool_8py.html:3889,Modifiability,config,configured,3889," importing RooPolynomial::p; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::p0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::c; Splitrule for p.d.f model with state list ; parameter m is split with constraint in categories (c); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of prototype pdfs (model); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of splitting categories (c); [#1] INFO:ObjectHandling -- RooSimPdfBuilder::executeBuild: processing prototype pdf model; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: configured customizers for all prototype pdfs; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: Customizing prototype pdf model for mode run1; [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: Customizing prototype pdf model for mode run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooSimultaneous::model_sim; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m_run1; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model_run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g_run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m_run2; 0x8977910 RooSimultaneous::model_sim = 1 [Auto,Dirty] ; 0x7e3df80/V- RooCategory::c = run2(idx = 1); ; 0x88c8b40/V- RooAddPdf::model_run1 = 1/1 [Auto,Clean] ; 0x8bb84f0/V- RooGaussian::g_run1 = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x8baab20/V- RooRealVar::m_run1 = 0; 0x889de80/V- RooRealVar::s = 1; 0x88077e0/V- RooRealVar::f = 0.5; 0x88a49d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x87a0f50/V- RooRealVar::p0 = 0.01; 0x8bf9210/V- RooAddPdf::model_run2 = 1/1 [Auto,Clean] ; 0x896d2a0/V- RooGaussian::g",MatchSource.WIKI,doc/master/rf504__simwstool_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8py.html
https://root.cern/doc/master/rf504__simwstool_8py.html:5587,Modifiability,variab,variables,5587,"Workspace::import(w) importing RooGaussian::g_run2; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m_run2; 0x8977910 RooSimultaneous::model_sim = 1 [Auto,Dirty] ; 0x7e3df80/V- RooCategory::c = run2(idx = 1); ; 0x88c8b40/V- RooAddPdf::model_run1 = 1/1 [Auto,Clean] ; 0x8bb84f0/V- RooGaussian::g_run1 = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x8baab20/V- RooRealVar::m_run1 = 0; 0x889de80/V- RooRealVar::s = 1; 0x88077e0/V- RooRealVar::f = 0.5; 0x88a49d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x87a0f50/V- RooRealVar::p0 = 0.01; 0x8bf9210/V- RooAddPdf::model_run2 = 1/1 [Auto,Clean] ; 0x896d2a0/V- RooGaussian::g_run2 = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x8bfd6b0/V- RooRealVar::m_run2 = 0; 0x889de80/V- RooRealVar::s = 1; 0x88077e0/V- RooRealVar::f = 0.5; 0x88a49d0/V- RooPolynomial::p = 1 [Auto,Dirty] ; 0x1c88ae0/V- RooRealVar::x = 0; 0x87a0f50/V- RooRealVar::p0 = 0.01; ; RooWorkspace(w) w contents; ; variables; ---------; (c,d,f,m,m_run1,m_run2,p0,s,x); ; p.d.f.s; -------; RooGaussian::g[ x=x mean=m sigma=s ] = 1; RooGaussian::g_run1[ x=x mean=m_run1 sigma=s ] = 0.011109; RooGaussian::g_run2[ x=x mean=m_run2 sigma=s ] = 0.011109; RooAddPdf::model[ f * g + [%] * p ] = 1/1; RooAddPdf::model_run1[ f * g_run1 + [%] * p ] = 0.505554/1; RooAddPdf::model_run2[ f * g_run2 + [%] * p ] = 0.505554/1; RooSimultaneous::model_sim[ indexCat=c run1=model_run1 run2=model_run2 ] = 0.505554; RooPolynomial::p[ x=x coefList=(p0) ] = 1; ; Splitrule for p.d.f model with state list ; parameter p0 is split with constraint in categories (c,d); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of prototype pdfs (model); [#1] INFO:ObjectHandling -- RooSimWSTool::executeBuild: list of splitting categories (c,d); [#1] INFO:ObjectHandling -- RooSimPdfBuilder::executeBuild: processing prototype pdf model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooMultiCategory::c,d; [#1] INFO:ObjectHandling",MatchSource.WIKI,doc/master/rf504__simwstool_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8py.html
https://root.cern/doc/master/rf504__simwstool_8py.html:6630,Modifiability,config,configured,6630,,MatchSource.WIKI,doc/master/rf504__simwstool_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8py.html
https://root.cern/doc/master/rf504__simwstool_8py.html:2631,Safety,safe,safe,2631,"--------------; ; # Construct a simultaneous pdf with the following form; #; # model_run1(x) = f*gauss_run1(x,m_run1,s) + (1-f)*poly; # model_run2(x) = f*gauss_run2(x,m_run2,s) + (1-f)*poly; # simpdf(x,c) = model_run1(x) if c==""run1""; # = model_run2(x) if c==""run2""; #; # Returned pdf is owned by the workspace; model_sim = sct.build(""model_sim"", ""model"", SplitParam=(""m"", ""c"")); ; # Print tree structure of model; model_sim.Print(""t""); ; # Adjust model_sim parameters in workspace; w.var(""m_run1"").setVal(-3); w.var(""m_run2"").setVal(+3); ; # Print contents of workspace; w.Print(""v""); ; # Build a simultaneous model with product split; # -----------------------------------------------------------------------------------------; ; # Build another simultaneous pdf using a composite split in states c X d; model_sim2 = sct.build(""model_sim2"", ""model"", SplitParam=(""p0"", ""c,d"")); ; # Print tree structure of self model; model_sim2.Print(""t""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::d; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooAddPdf::model; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooGaussian::g; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::x; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::m; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::s; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::f; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooPolynomial::p; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooRealVar::p0; [#1] INFO:ObjectHandling -- RooWorkspace::import(w) importing RooCategory::c; Splitrule for p.d.f model with state list ; parameter m is split with constraint in categories (c); [#1] INFO:ObjectHandl",MatchSource.WIKI,doc/master/rf504__simwstool_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf504__simwstool_8py.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:4104,Availability,error,error,4104," RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TStringBasic string class.Definition TString.h:139; TString::AppendTString & Append(const char *cs)Definition TString.h:572; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf505_asciicfgDefinition rf505_asciicfg.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing incl",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:284,Deployability,configurat,configuration,284,". ROOT: tutorials/roofit/rf505_asciicfg.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf505_asciicfg.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: reading and writing ASCII configuration files ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf505_asciicfg(); {; // C r e a t e p d f; // ------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // F i t m o d e l t o t o y d a t a; // -----------------------------------------; ; std::unique_ptr<RooDataSet> d{model.generate(x, 1000)};; model.fitTo(*d, PrintLevel(-1));; ; // W r i t e p a r a m e t e r s t o a s c i i f i l e; // -----------------------------------------------------------; ; // Obtain set of parameters; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; ; // Write parameters to file; params->writeToFile(""rf505_asciicfg_example.txt"");; ; TString dir1 = gROOT->GetTutorialDir() ;; dir1.Append(""/roofit/rf505_asciicfg.txt"") ;; TString dir2 = ""rf505_asciicfg_example.txt"";; ; // R e a d p a r a m e t e r s f r o m a s c i i f i l e; // ----------------------------------------------------------------; ; // Read parameters from file; params->readFromFile(dir2);; params->Print(""v"");; ; // Read parameters from section 'Section2' of file; params->readFromFile(dir1, 0, ""Section2"");; params->Print(""v"");; ; // Read parameters from se",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:284,Modifiability,config,configuration,284,". ROOT: tutorials/roofit/rf505_asciicfg.C File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rf505_asciicfg.C File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organisation and simultaneous fits: reading and writing ASCII configuration files ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; using namespace RooFit;; ; void rf505_asciicfg(); {; // C r e a t e p d f; // ------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // F i t m o d e l t o t o y d a t a; // -----------------------------------------; ; std::unique_ptr<RooDataSet> d{model.generate(x, 1000)};; model.fitTo(*d, PrintLevel(-1));; ; // W r i t e p a r a m e t e r s t o a s c i i f i l e; // -----------------------------------------------------------; ; // Obtain set of parameters; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; ; // Write parameters to file; params->writeToFile(""rf505_asciicfg_example.txt"");; ; TString dir1 = gROOT->GetTutorialDir() ;; dir1.Append(""/roofit/rf505_asciicfg.txt"") ;; TString dir2 = ""rf505_asciicfg_example.txt"";; ; // R e a d p a r a m e t e r s f r o m a s c i i f i l e; // ----------------------------------------------------------------; ; // Read parameters from file; params->readFromFile(dir2);; params->Print(""v"");; ; // Read parameters from section 'Section2' of file; params->readFromFile(dir1, 0, ""Section2"");; params->Print(""v"");; ; // Read parameters from se",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:2040,Modifiability,variab,variables,2040," t o a s c i i f i l e; // -----------------------------------------------------------; ; // Obtain set of parameters; std::unique_ptr<RooArgSet> params{model.getParameters(x)};; ; // Write parameters to file; params->writeToFile(""rf505_asciicfg_example.txt"");; ; TString dir1 = gROOT->GetTutorialDir() ;; dir1.Append(""/roofit/rf505_asciicfg.txt"") ;; TString dir2 = ""rf505_asciicfg_example.txt"";; ; // R e a d p a r a m e t e r s f r o m a s c i i f i l e; // ----------------------------------------------------------------; ; // Read parameters from file; params->readFromFile(dir2);; params->Print(""v"");; ; // Read parameters from section 'Section2' of file; params->readFromFile(dir1, 0, ""Section2"");; params->Print(""v"");; ; // Read parameters from section 'Section3' of file. Mark all; // variables that were processed with the ""READ"" attribute; params->readFromFile(dir1, ""READ"", ""Section3"");; ; // Print the list of parameters that were not read from Section3; cout << ""The following parameters of the were _not_ read from Section3: ""; << (*params->selectByAttrib(""READ"", false)) << endl;; ; // Read parameters from section 'Section4' of file, which contains; // 'include file' statement of rf505_asciicfg_example.txt; // so that we effective read the same; ; params->readFromFile(dir1, 0, ""Section4"");; params->Print(""v"");; }; d#define d(i)Definition RSha256.hxx:102; f#define f(i)Definition RSha256.hxx:104; RooAddPdf.h; RooDataSet.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; TAxis.h; TCanvas.h; gROOT#define gROOTDefinition TROOT.h:406; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:4198,Performance,optimiz,optimization,4198," RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TStringBasic string class.Definition TString.h:139; TString::AppendTString & Append(const char *cs)Definition TString.h:572; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf505_asciicfgDefinition rf505_asciicfg.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing incl",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:4295,Performance,optimiz,optimization,4295," RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TStringBasic string class.Definition TString.h:139; TString::AppendTString & Append(const char *cs)Definition TString.h:572; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf505_asciicfgDefinition rf505_asciicfg.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing incl",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8C.html:3740,Safety,safe,safe,3740,"ussian.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; TAxis.h; TCanvas.h; gROOT#define gROOTDefinition TROOT.h:406; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TStringBasic string class.Definition TString.h:139; TString::AppendTString & Append(const char *cs)Definition TString.h:572; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf505_asciicfgDefinition rf505_asciicfg.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf5",MatchSource.WIKI,doc/master/rf505__asciicfg_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:2723,Availability,error,error,2723,"rameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x803b610 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; [",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:299,Deployability,configurat,configuration,299,". ROOT: tutorials/roofit/rf505_asciicfg.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf505_asciicfg.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: reading and writing ASCII configuration files ; ; from __future__ import print_function; import ROOT; ; ; # Create pdf; # ------------------; ; # Construct gauss(x,m,s); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.select",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:299,Modifiability,config,configuration,299,". ROOT: tutorials/roofit/rf505_asciicfg.py File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces ; rf505_asciicfg.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Organization and simultaneous fits: reading and writing ASCII configuration files ; ; from __future__ import print_function; import ROOT; ; ; # Create pdf; # ------------------; ; # Construct gauss(x,m,s); x = ROOT.RooRealVar(""x"", ""x"", -10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.select",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:1472,Modifiability,config,configFile,1472,"10, 10); m = ROOT.RooRealVar(""m"", ""m"", 0, -10, 10); s = ROOT.RooRealVar(""s"", ""s"", 1, -10, 10); gauss = ROOT.RooGaussian(""g"", ""g"", x, m, s); ; # Construct poly(x,p0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalizati",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:1625,Modifiability,config,configFile,1625,"0); p0 = ROOT.RooRealVar(""p0"", ""p0"", 0.01, 0.0, 1.0); poly = ROOT.RooPolynomial(""p"", ""p"", x, [p0]); ; # model = f*gauss(x) + (1-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddit",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:1738,Modifiability,variab,variables,1738,"-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- Ro",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:1815,Modifiability,config,configFile,1815,"to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deac",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:2206,Modifiability,config,configFile,2206,"ams.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputAr",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:2817,Performance,optimiz,optimization,2817,"rameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x803b610 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; [",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:2914,Performance,optimiz,optimization,2914,"rameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x803b610 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; [",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf505__asciicfg_8py.html:2359,Safety,safe,safe,2359,"-------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x803b610 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x79b4c50 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7f83920 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x47c4aa0 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_examp",MatchSource.WIKI,doc/master/rf505__asciicfg_8py.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html
https://root.cern/doc/master/rf506__msgservice_8C.html:8681,Availability,error,error,8681,"istFactory ; ; [#1] INFO:Integration -- RooRealIntegral::ctor(g_Int[x]) Constructing integral of function g over observables(x) with normalization () with range identifier <none>; [#1] INFO:Integration -- g: Observable x is suitable for analytical integration (if supported by p.d.f); [#1] INFO:Integration -- g: Function integrated observables (x) internally with code 1; [#1] INFO:Integration -- g: Observables (x) are analytically integrated with code 1; RooRealIntegral::g_Int[x][ Int gd[Ana](x) ] = 2.50663; ; Active Message streams; [0] MinLevel = PROGRESS Topic = Generation Minimization Plotting Fitting Integration LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; pr",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:8871,Availability,error,error,8871,"istFactory ; ; [#1] INFO:Integration -- RooRealIntegral::ctor(g_Int[x]) Constructing integral of function g over observables(x) with normalization () with range identifier <none>; [#1] INFO:Integration -- g: Observable x is suitable for analytical integration (if supported by p.d.f); [#1] INFO:Integration -- g: Function integrated observables (x) internally with code 1; [#1] INFO:Integration -- g: Observables (x) are analytically integrated with code 1; RooRealIntegral::g_Int[x][ Int gd[Ana](x) ] = 2.50663; ; Active Message streams; [0] MinLevel = PROGRESS Topic = Generation Minimization Plotting Fitting Integration LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; pr",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:8886,Availability,avail,available,8886,"istFactory ; ; [#1] INFO:Integration -- RooRealIntegral::ctor(g_Int[x]) Constructing integral of function g over observables(x) with normalization () with range identifier <none>; [#1] INFO:Integration -- g: Observable x is suitable for analytical integration (if supported by p.d.f); [#1] INFO:Integration -- g: Function integrated observables (x) internally with code 1; [#1] INFO:Integration -- g: Observables (x) are analytically integrated with code 1; RooRealIntegral::g_Int[x][ Int gd[Ana](x) ] = 2.50663; ; Active Message streams; [0] MinLevel = PROGRESS Topic = Generation Minimization Plotting Fitting Integration LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; pr",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:8996,Availability,error,error,8996,"ation LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; ",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:9011,Availability,avail,available,9011,"ation LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; ",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:9119,Availability,error,error,9119,"ation LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; ",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:9134,Availability,avail,available,9134,"ation LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; ",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:9247,Availability,error,error,9247,"andling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; prevFCN = 31.47244051 m=0.5715, ; prevFCN = 30.87227361 m=1.707, ; prevFCN = 29.88047134 m=2.064, ; prevFCN = 29.97604268 f=0.5008, m=1.707, ; prevFCN = 29.88564172 f=0.4992, ; prevFCN = 29.87531802 f=0.5, m=1.711, ; prevFCN = 29.88",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:9262,Availability,avail,available,9262,"andling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prevFCN = 31.76758673 f=0.499, ; prevFCN = 31.75008506 f=0.5, m=0.02014, ; prevFCN = 31.72980141 m=-0.02014, ; prevFCN = 31.78749743 m=0.004235, ; prevFCN = 31.75274724 m=-0.004235, ; prevFCN = 31.76488389 m=0, p0=0.01005, ; prevFCN = 31.75954549 p0=0.009948, ; prevFCN = 31.75810351 p0=0.01013, ; prevFCN = 31.76062402 p0=0.009872, ; prevFCN = 31.75703788 p0=0.01, s=1.02, ; prevFCN = 31.67915486 s=0.9799, ; prevFCN = 31.84068856 s=1.002, ; prevFCN = 31.75075447 s=0.998, ; prevFCN = 31.76691405 m=0.004235, s=1, ; prevFCN = 31.75274724 m=0.02118, ; prevFCN = 31.72829189 m=0.06353, ; prevFCN = 31.66614321 m=0.1906, ; prevFCN = 31.47244051 m=0.5715, ; prevFCN = 30.87227361 m=1.707, ; prevFCN = 29.88047134 m=2.064, ; prevFCN = 29.97604268 f=0.5008, m=1.707, ; prevFCN = 29.88564172 f=0.4992, ; prevFCN = 29.87531802 f=0.5, m=1.711, ; prevFCN = 29.88",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:11860,Availability,error,error,11860,"7, ; prevFCN = 28.97321652 m=1.722, ; prevFCN = 28.97256819 m=1.724, p0=0.0004103, ; prevFCN = 28.97321664 p0=0.0003662, ; prevFCN = 28.97257031 p0=0.000388, s=1.279, ; prevFCN = 28.97432524 s=1.273, ; prevFCN = 28.97145596 s=1.282, ; prevFCN = 28.97575564 s=1.269, ; prevFCN = 28.97003607 f=0.2452, m=1.663, p0=5.498e-07, s=0.9876, ; prevFCN = 28.8608997 f=0.2274, m=1.628, p0=0.0001029, s=0.8218, ; prevFCN = 28.87647974 f=0.241, m=1.655, p0=3.204e-06, s=0.9491, ; prevFCN = 28.85685477 f=0.2418, ; prevFCN = 28.85692699 f=0.2403, ; prevFCN = 28.85679737 f=0.241, m=1.659, ; prevFCN = 28.85436009 m=1.651, ; prevFCN = 28.8593705 m=1.655, p0=1.215e-06, ; prevFCN = 28.85682558 p0=6.138e-06, ; prevFCN = 28.85689784 p0=3.204e-06, s=0.9556, ; prevFCN = 28.85804684 s=0.9426, ; prevFCN = 28.85571545 s=0.9524, ; prevFCN = 28.85746237 s=0.9458, ; prevFCN = 28.85626117 f=0.2171, m=1.753, p0=0.0002379, s=0.6877, ; prevFCN = 28.6750677 f=0.1311, m=2.143, p0=0.004887, s=-0.3611, RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (31.8407) to force MIGRAD to back out of this region. Error log follows.; Parameter values: f=0.131146 m=2.14309 p0=0.00488743 s=-0.361096; RooAddPdf::model[ f * g_over_g_Int[x] + [%] * p_over_p_Int[x] ]; getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05)",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:14951,Availability,error,error,14951,"ion integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; p.d.f normalization integral is zero or negative @ numerator=g=2.2451e-08, denominator=g_Int[x]=-0.905133; ; ; prevFCN = 122.3539561 f=0.2285, m=1.706, p0=7.868e-05, s=0.8134, ; prevFCN = 28.78647388 f=0.1125, m=2.24, p0=0.006973, s=-0.6231, RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (31.8407) to force MIGRAD to back out of this region. Error log follows.; Parameter values: f=0.112499 m=2.24008 p0=0.00697315 s=-0.623113; RooAddPdf::model[ f * g_over_g_Int[x] + [%] * p_over_p_Int[x] ]; getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.112499); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.112499); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.112499); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.112499); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05)",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:25192,Availability,error,error,25192," p0=2.82e-06, s=0.2108, ; prevFCN = 26.37499245 s=0.2107, ; prevFCN = 26.37498621 f=0.2652, s=0.2107, ; prevFCN = 26.37498903 f=0.2652, ; prevFCN = 26.37498915 f=0.2652, m=2.259, ; prevFCN = 26.37498949 m=2.259, ; prevFCN = 26.37498869 m=2.259, p0=2.905e-06, ; prevFCN = 26.37499046 p0=2.736e-06, ; prevFCN = 26.37498772 p0=2.82e-06, s=0.2107, ; prevFCN = 26.37498971 s=0.2107, ; prevFCN = 26.37498846 f=0.2653, m=2.259, s=0.2107, ; prevFCN = 26.37499134 m=2.259, p0=3.259e-06, ; prevFCN = 26.37499614 p0=2.82e-06, s=0.2108, ; prevFCN = 26.3749924 f=0.2652, m=2.259, p0=3.259e-06, s=0.2107, ; prevFCN = 26.37499844 p0=2.82e-06, s=0.2108, ; prevFCN = 26.37499475 m=2.259, p0=3.259e-06, ; prevFCN = 26.37499954 p0=2.82e-06, s=0.2107, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; ; prevFCN = 26.37498908 f=0.2667, ; prevFCN = 26.37503727 f=0.2636, ; prevFCN = 26.37504545 f=0.2657, ; prevFCN = 26.37499405 f=0.2646, ; prevFCN = 26.37499692 f=0.2652, m=2.261, ; prevFCN = 26.37506777 m=2.258, ; prevFCN = 26.37501136 m=2.26, ; prevFCN = 26.37500554 m=2.259, ; prevFCN = 26.37498543 m=2.259, p0=6.522e-06, ; prevFCN = 26.3750489 p0=6.471e-07, ; prevFCN = 26.37495398 p0=5.331e-06, ; prevFCN = 26.37502965 p0=1.101e-06, ; prevFCN = 26.37496132 p0=2.82e-06, s=0.2117, ; prevFCN = 26.37508362 s=0.2098, ; prevFCN = 26.37499532 s=0.2111, ; prevFCN = 26.37501134 s=0.2104, ; prevFCN = 26.37497963 f=0.2652, m=2.259, p0=1.367e-14, s=0.2103, ; prevFCN = 26.37493072 f=0.2658, ; prevFCN = 26.37493708 f=0.2647, ; prevFCN = 26.37493",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:1317,Deployability,configurat,configuration,1317,"d simultaneous fits: tuning and customizing the RooFit message logging facility ; ; #include ""RooRealVar.h""; #include ""RooDataSet.h""; #include ""RooGaussian.h""; #include ""RooPolynomial.h""; #include ""RooAddPdf.h""; #include ""TCanvas.h""; #include ""TAxis.h""; #include ""RooPlot.h""; #include ""RooMsgService.h""; ; using namespace RooFit;; ; void rf506_msgservice(); {; // C r e a t e p d f; // --------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10)};; ; // P r i n t c o n f i g u r a t i o n o f m e s s a g e s e r v i c e; // ---------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // A d d i n g I n t e g r a t i o n t o p i c t o e x i s t i n g I N F O s t r e a m; // -----------------------------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // Add Integration topic to existing INFO stream; RooMsgService::instance().getStream(1).addTopic(Integration);; ; // Construct integral over gauss to demonstrate new message stream; std::unique_ptr<RooAbsReal> igauss{gauss.createIntegral(x)};; igauss->Print();; ; // Print streams configuration in verbose, which also shows inactive streams; cout << endl;; RooMsgService::instance().Print();; cout << endl;; ; // Remove stream; RooMsgService::instance().getStream(1).removeTopic(Integration);; ; // E x a m p l e s o f p d f v a l u e t r a c i n g s t r e a m; // ----------------",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
https://root.cern/doc/master/rf506__msgservice_8C.html:1592,Deployability,configurat,configuration,1592,"#include ""RooPlot.h""; #include ""RooMsgService.h""; ; using namespace RooFit;; ; void rf506_msgservice(); {; // C r e a t e p d f; // --------------------; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; std::unique_ptr<RooDataSet> data{model.generate(x, 10)};; ; // P r i n t c o n f i g u r a t i o n o f m e s s a g e s e r v i c e; // ---------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // A d d i n g I n t e g r a t i o n t o p i c t o e x i s t i n g I N F O s t r e a m; // -----------------------------------------------------------------------------------------------; ; // Print streams configuration; RooMsgService::instance().Print();; cout << endl;; ; // Add Integration topic to existing INFO stream; RooMsgService::instance().getStream(1).addTopic(Integration);; ; // Construct integral over gauss to demonstrate new message stream; std::unique_ptr<RooAbsReal> igauss{gauss.createIntegral(x)};; igauss->Print();; ; // Print streams configuration in verbose, which also shows inactive streams; cout << endl;; RooMsgService::instance().Print();; cout << endl;; ; // Remove stream; RooMsgService::instance().getStream(1).removeTopic(Integration);; ; // E x a m p l e s o f p d f v a l u e t r a c i n g s t r e a m; // -----------------------------------------------------------------------; ; // Show DEBUG level message on function tracing, trace RooGaussian only; RooMsgService::instance().addStream(DEBUG, Topic(Tracing), ClassName(""RooGaussian""));; ; // Perform a fit to generate some",MatchSource.WIKI,doc/master/rf506__msgservice_8C.html,root-project,root,v6-32-06,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html
