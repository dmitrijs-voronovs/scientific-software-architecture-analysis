id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/sofa-framework/sofa/issues/1731:434,Integrability,message,message,434,"Hello everyone,. I'm using operations of type `dst_transform *= src_transform` and noticed multiple debug messages on the terminal output:. ```; [INFO] [Transform] SolidTypes<R>::Transform::operator *=; ```. I made a small fix suppressing the line which I'll PR soon.; I'm using a modified version of the latest release v20.12 - but the issue seems to exist as well in master. Please let me know if there's any deeper meaning to this message or anything else to clean up,. Cheers,. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1731
https://github.com/sofa-framework/sofa/pull/1732:806,Availability,failure,failures,806,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:855,Availability,failure,failures,855,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:175,Deployability,release,release,175,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:63,Integrability,message,message,63,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:425,Security,Certificate,Certificate,425,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:536,Security,certificate,certificate-of-origin-dco,536,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:801,Testability,test,test,801,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:850,Testability,test,test,850,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1732:38,Usability,simpl,simply,38,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732
https://github.com/sofa-framework/sofa/pull/1733:651,Availability,failure,failures,651,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1733:700,Availability,failure,failures,700,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1733:270,Security,Certificate,Certificate,270,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1733:381,Security,certificate,certificate-of-origin-dco,381,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1733:646,Testability,test,test,646,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1733:695,Testability,test,test,695,"This PR adds translation and rotation transforms to ReadState component. ; Scaling was already possible. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1733
https://github.com/sofa-framework/sofa/pull/1734:1592,Availability,failure,failures,1592,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:1641,Availability,failure,failures,1641,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:239,Integrability,depend,dependency,239,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:288,Modifiability,Config,Config,288,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:298,Safety,avoid,avoid,298,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:1211,Security,Certificate,Certificate,1211,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:1322,Security,certificate,certificate-of-origin-dco,1322,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:1587,Testability,test,test,1587,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1734:1636,Testability,test,test,1636,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734
https://github.com/sofa-framework/sofa/pull/1735:1492,Availability,failure,failures,1492,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:1541,Availability,failure,failures,1541,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:12,Deployability,update,updateLinks,12,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:705,Deployability,update,updateLinks,705,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:744,Deployability,update,updateLinks,744,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:868,Security,expose,expose,868,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:1111,Security,Certificate,Certificate,1111,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:1222,Security,certificate,certificate-of-origin-dco,1222,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:1487,Testability,test,test,1487,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1735:1536,Testability,test,test,1536,"This PR the updateLinks method in SingleLink and MultiLink.; The rational is taht there is no need to implement general algortihm in templated class if one version is possible for their abstract Base class. Implementing the algorithm in the has multiple advantage:; - easier to read, understand and debug because there the code is template free; - faster to compile as only one version of the code has to be code-generated instead of having one version for each type template in each the compilation units. ; - as the implementation is not templated it can be defined in the .cpp instead of the .h, this permit to have less #include files that propagate in all our code base. . Basically:; SingleLink<T>::updateLinks (in Link.h); MultiLink<T>::updateLinks (in Link.h); are now implemented in BaseLink.cpp. several methods (_doXXX_) in BaseLink have been introduced to expose Link<> behavior to BaseLink. This PR is based on top if #1717 and #1749; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1735
https://github.com/sofa-framework/sofa/pull/1736:972,Availability,failure,failures,972,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:1021,Availability,failure,failures,1021,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:591,Security,Certificate,Certificate,591,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:702,Security,certificate,certificate-of-origin-dco,702,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:967,Testability,test,test,967,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:1016,Testability,test,test,1016,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1736:298,Usability,clear,clear,298,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736
https://github.com/sofa-framework/sofa/pull/1737:1887,Availability,failure,failures,1887," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1936,Availability,failure,failures,1936," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:988,Energy Efficiency,reduce,reduce,988,"e current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more tha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:837,Integrability,wrap,wrap,837,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:611,Safety,avoid,avoid,611,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:490,Security,expose,expose,490,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:857,Security,expose,expose,857,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1506,Security,Certificate,Certificate,1506," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1617,Security,certificate,certificate-of-origin-dco,1617," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1882,Testability,test,test,1882," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1931,Testability,test,test,1931," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:172,Usability,simpl,simpler,172,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:567,Usability,simpl,simpler,567,"The current implementation of Node::Single rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1737:1193,Usability,clear,clear,1193," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737
https://github.com/sofa-framework/sofa/pull/1738:774,Availability,error,error,774,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1542,Availability,failure,failures,1542,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1591,Availability,failure,failures,1591,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1161,Security,Certificate,Certificate,1161,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1272,Security,certificate,certificate-of-origin-dco,1272,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1537,Testability,test,test,1537,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1738:1586,Testability,test,test,1586,"This is the follow up of discussion: https://github.com/sofa-framework/sofa/issues/1675. The UI part is not very important but the change introduced in BaseData.h and BaseObject deserve ; a bit of attention. I will pass it to ready when I will need for a review but If you have some time @hugtalbot I would like to have ; your opinion on the change in BaseData. **EDIT**: . This PR allows to define optional datafields. Here's how it looks. ; If a datafield is set to have no default value (using the new `setWithDefaultValue()`), the gui will display `<no default value>`. . <img src=""https://user-images.githubusercontent.com/12150715/128062448-1720eb27-aa9a-4f29-a22e-ad961945f605.png"" width=""500""/>. Additionally, if a datafield is required and has no default value, an error will show up on the terminal and the gui will display `<missing value>`. . ![Screenshot from 2021-08-03 11-31-22](https://user-images.githubusercontent.com/12150715/128062431-05b679ed-10a2-45e6-9c9a-14aa41a1f1f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1738
https://github.com/sofa-framework/sofa/pull/1739:726,Availability,failure,failures,726,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1739:775,Availability,failure,failures,775,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1739:345,Security,Certificate,Certificate,345,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1739:456,Security,certificate,certificate-of-origin-dco,456,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1739:721,Testability,test,test,721,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1739:770,Testability,test,test,770,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739
https://github.com/sofa-framework/sofa/pull/1740:738,Availability,failure,failures,738,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:787,Availability,failure,failures,787,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:142,Integrability,message,messages,142,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:357,Security,Certificate,Certificate,357,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:468,Security,certificate,certificate-of-origin-dco,468,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:733,Testability,test,test,733,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1740:782,Testability,test,test,782,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740
https://github.com/sofa-framework/sofa/pull/1741:572,Availability,failure,failures,572,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1741:621,Availability,failure,failures,621,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1741:191,Security,Certificate,Certificate,191,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1741:302,Security,certificate,certificate-of-origin-dco,302,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1741:567,Testability,test,test,567,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1741:616,Testability,test,test,616,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741
https://github.com/sofa-framework/sofa/pull/1742:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1742:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1742:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1742:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1742:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1742:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1742
https://github.com/sofa-framework/sofa/pull/1743:491,Availability,error,error,491,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:1173,Availability,failure,failures,1173,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:1222,Availability,failure,failures,1222,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:792,Security,Certificate,Certificate,792,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:903,Security,certificate,certificate-of-origin-dco,903,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:150,Testability,test,tests,150,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:1168,Testability,test,test,1168,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:1217,Testability,test,test,1217,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1743:458,Usability,clear,clearer,458,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743
https://github.com/sofa-framework/sofa/pull/1744:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1744:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1744:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1744:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1744:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1744:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1744
https://github.com/sofa-framework/sofa/pull/1745:1628,Availability,failure,failures,1628,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1745:1677,Availability,failure,failures,1677,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1745:1247,Security,Certificate,Certificate,1247,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1745:1358,Security,certificate,certificate-of-origin-dco,1358,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1745:1623,Testability,test,test,1623,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1745:1672,Testability,test,test,1672,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745
https://github.com/sofa-framework/sofa/pull/1747:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/pull/1747:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/pull/1747:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/pull/1747:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/pull/1747:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/pull/1747:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747
https://github.com/sofa-framework/sofa/issues/1748:2724,Availability,fault,fault,2724,"ofa::helper::io::Mesh*, boost::intrusive_ptr<sofa::component::topology::RegularGridTopology>, sofa::helper::vector<sofa::component::topology::SparseGridTopology::Type, sofa::helper::CPUMemoryManager<sofa::component::topology::SparseGridTopology::Type> >&) const+0x1f2) [0x7f67a0b49082]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildFromTriangleMesh(sofa::helper::io::Mesh*)+0x2c8) [0x7f67a0b4a3d8]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildAsFinest()+0x2d8) [0x7f67a0b4ac58]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(+0x2d2a2b) [0x7f67a0b3fa2b]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x1a3) [0x7f67a054e5b3]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*)+0x3a5) [0x7f67a5421455]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool)+0x15f) [0x7f67a542187f]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::initNode(sofa::simulation::Node*)+0xaa) [0x7f67a05b8b4a]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::init(sofa::simulation::Node*)+0xb0) [0x7f67a05b8620]; -> runSofa() [0x40f3a3]; -> /lib64/libc.so.6(__libc_start_main+0xf2) [0x7f679ef201e2]; -> runSofa() [0x4105de]; [1] 36378 segmentation fault (core dumped) runSofa /tmp/test.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748
https://github.com/sofa-framework/sofa/issues/1748:2757,Testability,test,test,2757,"ofa::helper::io::Mesh*, boost::intrusive_ptr<sofa::component::topology::RegularGridTopology>, sofa::helper::vector<sofa::component::topology::SparseGridTopology::Type, sofa::helper::CPUMemoryManager<sofa::component::topology::SparseGridTopology::Type> >&) const+0x1f2) [0x7f67a0b49082]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildFromTriangleMesh(sofa::helper::io::Mesh*)+0x2c8) [0x7f67a0b4a3d8]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildAsFinest()+0x2d8) [0x7f67a0b4ac58]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(+0x2d2a2b) [0x7f67a0b3fa2b]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x1a3) [0x7f67a054e5b3]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*)+0x3a5) [0x7f67a5421455]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool)+0x15f) [0x7f67a542187f]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::initNode(sofa::simulation::Node*)+0xaa) [0x7f67a05b8b4a]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::Simulation::init(sofa::simulation::Node*)+0xb0) [0x7f67a05b8620]; -> runSofa() [0x40f3a3]; -> /lib64/libc.so.6(__libc_start_main+0xf2) [0x7f679ef201e2]; -> runSofa() [0x4105de]; [1] 36378 segmentation fault (core dumped) runSofa /tmp/test.scn; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748
https://github.com/sofa-framework/sofa/issues/1748:167,Usability,simpl,simply,167,"Bug reported by @AndreaMendizabal . When a SparseGridTopology doesn't contain any embedded nodes within its boundaries (set using `min` and `max` data parameters), it simply crashes. . Minimal reproducible example:; ```xml; <Node>; <Mesh name=""m"" position=""0 0 0"" />; <SparseGridTopology min=""0 0 1"" max=""1 1 1"" src=""@m"" />; </Node>; ```. Output:; ```; ########## SIG 11 - SIGSEGV: segfault ##########; -> /opt/sofa/lib/libSofaHelper.so.20.12.00(sofa::helper::BackTrace::dump()+0x23) [0x7f679f685cf3]; -> /opt/sofa/lib/libSofaHelper.so.20.12.00(sofa::helper::BackTrace::sig(int)+0x1cf) [0x7f679f68606f]; -> /lib64/libc.so.6(+0x3da60) [0x7f679ef35a60]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::voxelizeTriangleMesh(sofa::helper::io::Mesh*, boost::intrusive_ptr<sofa::component::topology::RegularGridTopology>, sofa::helper::vector<sofa::component::topology::SparseGridTopology::Type, sofa::helper::CPUMemoryManager<sofa::component::topology::SparseGridTopology::Type> >&) const+0x1f2) [0x7f67a0b49082]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildFromTriangleMesh(sofa::helper::io::Mesh*)+0x2c8) [0x7f67a0b4a3d8]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(sofa::component::topology::SparseGridTopology::buildAsFinest()+0x2d8) [0x7f67a0b4ac58]; -> /opt/sofa/lib/libSofaBaseTopology.so.20.12.00(+0x2d2a2b) [0x7f67a0b3fa2b]; -> /opt/sofa/lib/libSofaSimulationCore.so.20.12.00(sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x1a3) [0x7f67a054e5b3]; -> /opt/sofa/lib/libSofaSimulationGraph.so.20.12.00(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748
https://github.com/sofa-framework/sofa/pull/1749:1123,Availability,failure,failures,1123,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1749:1172,Availability,failure,failures,1172,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1749:742,Security,Certificate,Certificate,742,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1749:853,Security,certificate,certificate-of-origin-dco,853,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1749:1118,Testability,test,test,1118,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1749:1167,Testability,test,test,1167,"When using Single with/without storepath the way a link should behave is ""unclear"" and inconsitant with multlink. A multilink of size 1 can contains a nullptr while a single link containing a nullptr has size zero (which has side effect on path attributes). Now the size of a SingleLink is either 0 or 1 and a link can contain either nullptr or a path. Said differently, a SingleLink with a path set now report a size of 1. To fix the bug it was needed to change the SinglePtr signature (which is breaking but as this is an internal feature of SingleLink should be problematic). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749
https://github.com/sofa-framework/sofa/pull/1750:654,Availability,failure,failures,654,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1750:703,Availability,failure,failures,703,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1750:273,Security,Certificate,Certificate,273,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1750:384,Security,certificate,certificate-of-origin-dco,384,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1750:649,Testability,test,test,649,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1750:698,Testability,test,test,698,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750
https://github.com/sofa-framework/sofa/pull/1751:1380,Availability,failure,failures,1380,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:1429,Availability,failure,failures,1429,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:667,Security,access,access,667,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:999,Security,Certificate,Certificate,999,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:1110,Security,certificate,certificate-of-origin-dco,1110,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:1375,Testability,test,test,1375,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/pull/1751:1424,Testability,test,test,1424,"There is no need to have the operator<<() fully defined in the class declaration.; A better code decoupling can be obtained in the following way. Let's suppose we want to support a new class named MyClass. ; A more opaque design is composed of three parts. 1) declare the function << for a given type, (eg: in the vicinity of the forward declaration of MyClass in fwd.h):; ```cpp ; SOFA_CORE_API std::ostream& operator<<(..., MyClass&);; ```. 2) define the function in a MyClass.cpp (or anywhere you prefer):; ```cpp ; operator<<(..., MyClass& a){ ....put the implementation here... }; ```. 3) This one is optional only if the implementation of the operator requires access to private data field). If this happens then you need an exra step to specify the following ; ```cpp ; class MyClass { friend operator<<(..., MyClass&); }; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1751
https://github.com/sofa-framework/sofa/issues/1752:1621,Deployability,install,install,1621,"::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1654,Deployability,install,install,1654,"::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1719,Deployability,install,install,1719,"`. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject(",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1788,Deployability,install,install,1788,"ofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking aga",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1855,Deployability,install,install,1855,"namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking against and which cmake target contains it?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1912,Deployability,install,install,1912,"namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking against and which cmake target contains it?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1976,Deployability,install,install,1976,"namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking against and which cmake target contains it?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:2268,Deployability,install,install,2268,"namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking against and which cmake target contains it?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:2436,Deployability,install,install,2436,"namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/install/lib/libgtest.so -lpthread; ```. but it fails with an unidefined reference. ```; undefined reference to `sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<2, double>, sofa::defaulttype::Vec<2, double>, double> >::MechanicalObject()'; ```. what is missing here? Which library should I be linking against and which cmake target contains it?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:52,Testability,test,test,52,"I am trying to create a MechanicalObject for a unit test. I have the following:. ```; namespace VNCS; {; namespace Sim2D; {; struct Kernel {; using Real = double;. using SimType = typename sofa::defaulttype::Vec2Types;; static constexpr int SimSize = 2;; using Coord = typename SimType::Coord;; using Deriv = typename SimType::Deriv;; using VecCoord = typename SimType::VecCoord;; using VecDeriv = typename SimType::VecDeriv;; using MatrixDeriv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1078,Testability,TEST,TEST,1078," SimType = typename sofa::defaulttype::Vec2Types;; static constexpr int SimSize = 2;; using Coord = typename SimType::Coord;; using Deriv = typename SimType::Deriv;; using VecCoord = typename SimType::VecCoord;; using VecDeriv = typename SimType::VecDeriv;; using MatrixDeriv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/issues/1752:1475,Testability,test,tests,1475,"riv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /usr/lib/libboost_program_options.so.1.75.0 /usr/lib/libboost_thread.so.1.75.0 /opt/libs/sofa/build/install/lib/libgtest.so.2.6.2 /usr/lib/libQt5Core.so.5.15.2 /usr/lib/libgmpxx.so /usr/lib/libmpfr.so /usr/lib/libgmp.so /usr/local/lib/libspdlog.a /opt/libs/sofa/build/instal",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752
https://github.com/sofa-framework/sofa/pull/1753:784,Availability,failure,failures,784,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:833,Availability,failure,failures,833,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:403,Security,Certificate,Certificate,403,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:514,Security,certificate,certificate-of-origin-dco,514,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:779,Testability,test,test,779,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:828,Testability,test,test,828,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/pull/1753:118,Usability,clear,clear,118,"I don't know what exactly was TData for, but in years no-one ever use it so I merged Data & TData to make things more clear.; I also re-implemented the existing feature using the child-delegation pattern instead of relying on call super. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1753
https://github.com/sofa-framework/sofa/issues/1754:160,Availability,error,error,160,"/SofaKernel/modules/SofaHelper/src/sofa/helper/system/FileSystem.cpp line 131; Code:; bool FileSystem::createDirectory(const std::string& path); {; std::string error; // <-- unused ; #ifdef WIN32; if (CreateDirectory(Utils::widenString(path).c_str(), nullptr) == 0); {; DWORD errorCode = ::GetLastError();; msg_error(""FileSystem::createdirectory()"") << path << "": "" << Utils::GetLastError();; return true;; }; #else; if (mkdir(path.c_str(), 0755)); {; msg_error(""FileSystem::createdirectory()"") << path << "": "" << strerror(errno);; return true;; }; #endif; else; {; return false;; }; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1754
https://github.com/sofa-framework/sofa/issues/1754:276,Availability,error,errorCode,276,"/SofaKernel/modules/SofaHelper/src/sofa/helper/system/FileSystem.cpp line 131; Code:; bool FileSystem::createDirectory(const std::string& path); {; std::string error; // <-- unused ; #ifdef WIN32; if (CreateDirectory(Utils::widenString(path).c_str(), nullptr) == 0); {; DWORD errorCode = ::GetLastError();; msg_error(""FileSystem::createdirectory()"") << path << "": "" << Utils::GetLastError();; return true;; }; #else; if (mkdir(path.c_str(), 0755)); {; msg_error(""FileSystem::createdirectory()"") << path << "": "" << strerror(errno);; return true;; }; #endif; else; {; return false;; }; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1754
https://github.com/sofa-framework/sofa/pull/1755:825,Availability,failure,failures,825,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1755:874,Availability,failure,failures,874,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1755:444,Security,Certificate,Certificate,444,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1755:555,Security,certificate,certificate-of-origin-dco,555,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1755:820,Testability,test,test,820,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1755:869,Testability,test,test,869,"```; cmake_dependent_option(; name: SOFA_BUILD_WITH_PCH_ENABLED; description: ""Compile SOFA using precompiled header (to accelerate the build process)""; default value: OFF; when to show the option: ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16""; value forced when hidden: OFF; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1755
https://github.com/sofa-framework/sofa/pull/1756:996,Availability,failure,failures,996,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:1045,Availability,failure,failures,1045,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:293,Deployability,update,updated,293,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:615,Security,Certificate,Certificate,615,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:726,Security,certificate,certificate-of-origin-dco,726,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:991,Testability,test,test,991,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/pull/1756:1040,Testability,test,test,1040,"Preliminary support with the new Qt6 library. - Some Qt code/UI files were dated from the Qt4 era, and were using deprecated functions in Qt5 (and removed in Qt6).; - Qt6 does not support WebEngine and Charts for the moment (?) -> no qdocbrowser, nor chart profiling; - QGLViewer has not been updated for Qt6 upstream either -> no qtglviewer. Qt5 is still the main version targeted for SOFA, so if CMake finds both Qt5 and Qt6, it will prioritize Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1756
https://github.com/sofa-framework/sofa/issues/1757:142,Modifiability,plugin,plugins,142,"Before 20.12 there was a lot of ""stowaway passenger"" includes. We are in the process of removing them which has the consequence that a lot of plugins relying on these ""stowaway passenger"" are not compiling anymore. ; Fixing that is relatively easy in most of the case, you need to find which type is missing and include the corresponding file in the most appropriate file of your project. It can in a .cpp, an .inl or a .h.; Most common missing includes ares:; ```cpp; sofa::simulation::Node => #include <sofa/simulation/Node.h>; msg_xxxx function => #include <sofa/helper/logging/Messaging.h>; system::thread ctime => #include <sofa/helper/system/thread/CTime.h>; fixed_array => #include <sofa/helper/fixed_array.h>; ```. In PR:; ```cpp; sofa::helper::AdvancedTimer => #include<sofa/helper/AdvancedTimer.h>; sofa::helper::ScopedAdvancedTimer => #include<sofa/helper/ScopedAdvancedTimer.h>; sofa::type::Mat => #include<sofa/type/Mat.h>; ```. In PR: #1794 ; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/MultiMatrixAccessor.h>; #include <sofa/defaulttype/typeinfo/TypeInfo_Mat.h>; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757
https://github.com/sofa-framework/sofa/issues/1757:573,Testability,log,logging,573,"Before 20.12 there was a lot of ""stowaway passenger"" includes. We are in the process of removing them which has the consequence that a lot of plugins relying on these ""stowaway passenger"" are not compiling anymore. ; Fixing that is relatively easy in most of the case, you need to find which type is missing and include the corresponding file in the most appropriate file of your project. It can in a .cpp, an .inl or a .h.; Most common missing includes ares:; ```cpp; sofa::simulation::Node => #include <sofa/simulation/Node.h>; msg_xxxx function => #include <sofa/helper/logging/Messaging.h>; system::thread ctime => #include <sofa/helper/system/thread/CTime.h>; fixed_array => #include <sofa/helper/fixed_array.h>; ```. In PR:; ```cpp; sofa::helper::AdvancedTimer => #include<sofa/helper/AdvancedTimer.h>; sofa::helper::ScopedAdvancedTimer => #include<sofa/helper/ScopedAdvancedTimer.h>; sofa::type::Mat => #include<sofa/type/Mat.h>; ```. In PR: #1794 ; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/MultiMatrixAccessor.h>; #include <sofa/defaulttype/typeinfo/TypeInfo_Mat.h>; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757
https://github.com/sofa-framework/sofa/pull/1758:92,Availability,ERROR,ERROR,92,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:801,Availability,failure,failures,801,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:850,Availability,failure,failures,850,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:115,Integrability,message,message,115,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:420,Security,Certificate,Certificate,420,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:531,Security,certificate,certificate-of-origin-dco,531,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:41,Testability,log,logo,41,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:246,Testability,test,test,246,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:796,Testability,test,test,796,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1758:845,Testability,test,test,845,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758
https://github.com/sofa-framework/sofa/pull/1759:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1759:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1759:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1759:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1759:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1759:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1759
https://github.com/sofa-framework/sofa/pull/1760:592,Availability,failure,failures,592,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1760:641,Availability,failure,failures,641,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1760:211,Security,Certificate,Certificate,211,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1760:322,Security,certificate,certificate-of-origin-dco,322,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1760:587,Testability,test,test,587,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1760:636,Testability,test,test,636,"Needed for the good compilation of SofaPython3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1760
https://github.com/sofa-framework/sofa/pull/1761:959,Availability,failure,failures,959,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:1008,Availability,failure,failures,1008,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:149,Deployability,Release,Release,149,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:199,Modifiability,config,config,199,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:578,Security,Certificate,Certificate,578,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:689,Security,certificate,certificate-of-origin-dco,689,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:954,Testability,test,test,954,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/pull/1761:1003,Testability,test,test,1003,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761
https://github.com/sofa-framework/sofa/issues/1762:839,Deployability,update,update,839,"I have this code. ```; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; mo->resize(10);; auto restPositions = mo->readRestPositions();; auto positions = mo->readPositions();; auto velocities = mo->readVelocities();; auto forces = mo->readForces();. EXPECT_EQ(restPositions.size(), 10);; EXPECT_EQ(positions.size(), 10);; EXPECT_EQ(velocities.size(), 10);; EXPECT_EQ(forces.size(), 10);; ```; being `VNCS::Sim2D::MO` just an alias for `MechanicalObject<Vec2>`. This 4 checks work fine, but when I try this. ```; // Check we can actually write in the vectors; auto writerRestPositions = mo->writeRestPositions();; EXPECT_EQ(writerRestPositions.size(), 10);; ```; it fails. . ```; Expected equality of these values:; writerRestPositions.size(); Which is: 0; 10; ```; the state vector size is not changed. What is the proper way to update the size of the state vectors?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1762
https://github.com/sofa-framework/sofa/pull/1763:659,Availability,failure,failures,659,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1763:708,Availability,failure,failures,708,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1763:278,Security,Certificate,Certificate,278,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1763:389,Security,certificate,certificate-of-origin-dco,389,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1763:654,Testability,test,test,654,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1763:703,Testability,test,test,703,"I have the feeling that this useful is not used and is dating from the pre-SofaPython area.; Tell me if I'm wrong. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763
https://github.com/sofa-framework/sofa/pull/1764:2614,Availability,failure,failures,2614,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:2663,Availability,failure,failures,2663,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:106,Deployability,update,update,106,"Remove un-needed includes in .h. This may results in having code that rely on these to stop compiling. To update the non-compiling code you need to addi explicitely the includes the code is actually used. . If you only need type declaration (an not definition), please use the foward declaration .h file; eg: sofa/core/fwd.h . The following one may be the one you need:; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/simulation/Node.h>; #include <sofa/core/visual/VisualParams.h>; #include <SofaEigen2Solver/EigenSparseMatrix.h>; #include <sofa/defaulttype/TopologyTypes.h>	; #include <cstddef>; #include <string>	; #include <sofa/core/objectmodel/BaseObject.h>; #include <SofaBaseMechanics/MechanicalObject.h>; #include <sofa/core/behavior/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:1021,Integrability,depend,dependency,1021,"in having code that rely on these to stop compiling. To update the non-compiling code you need to addi explicitely the includes the code is actually used. . If you only need type declaration (an not definition), please use the foward declaration .h file; eg: sofa/core/fwd.h . The following one may be the one you need:; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/simulation/Node.h>; #include <sofa/core/visual/VisualParams.h>; #include <SofaEigen2Solver/EigenSparseMatrix.h>; #include <sofa/defaulttype/TopologyTypes.h>	; #include <cstddef>; #include <string>	; #include <sofa/core/objectmodel/BaseObject.h>; #include <SofaBaseMechanics/MechanicalObject.h>; #include <sofa/core/behavior/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:2233,Security,Certificate,Certificate,2233,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:2344,Security,certificate,certificate-of-origin-dco,2344,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:2609,Testability,test,test,2609,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1764:2658,Testability,test,test,2658,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764
https://github.com/sofa-framework/sofa/pull/1765:699,Availability,failure,failures,699,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:748,Availability,failure,failures,748,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:140,Modifiability,refactor,refactoring,140,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:318,Security,Certificate,Certificate,318,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:429,Security,certificate,certificate-of-origin-dco,429,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:694,Testability,test,test,694,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1765:743,Testability,test,test,743,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765
https://github.com/sofa-framework/sofa/pull/1766:783,Availability,failure,failures,783,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:832,Availability,failure,failures,832,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:402,Security,Certificate,Certificate,402,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:513,Security,certificate,certificate-of-origin-dco,513,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:34,Testability,test,test,34,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:778,Testability,test,test,778,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1766:827,Testability,test,test,827,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766
https://github.com/sofa-framework/sofa/pull/1767:667,Availability,failure,failures,667,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:716,Availability,failure,failures,716,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:62,Modifiability,plugin,plugins,62,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:286,Security,Certificate,Certificate,286,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:397,Security,certificate,certificate-of-origin-dco,397,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:662,Testability,test,test,662,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1767:711,Testability,test,test,711,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767
https://github.com/sofa-framework/sofa/pull/1768:611,Availability,failure,failures,611,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1768:660,Availability,failure,failures,660,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1768:230,Security,Certificate,Certificate,230,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1768:341,Security,certificate,certificate-of-origin-dco,341,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1768:606,Testability,test,test,606,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1768:655,Testability,test,test,655,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768
https://github.com/sofa-framework/sofa/pull/1769:594,Availability,failure,failures,594,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1769:643,Availability,failure,failures,643,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1769:213,Security,Certificate,Certificate,213,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1769:324,Security,certificate,certificate-of-origin-dco,324,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1769:589,Testability,test,test,589,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1769:638,Testability,test,test,638,"This should fix most path size issues on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1769
https://github.com/sofa-framework/sofa/pull/1770:1147,Availability,failure,failures,1147,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:1196,Availability,failure,failures,1196,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:114,Integrability,depend,dependency,114,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:766,Security,Certificate,Certificate,766,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:877,Security,certificate,certificate-of-origin-dco,877,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:476,Testability,test,test,476,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:1142,Testability,test,test,1142,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1770:1191,Testability,test,test,1191,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770
https://github.com/sofa-framework/sofa/pull/1771:649,Availability,failure,failures,649,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:698,Availability,failure,failures,698,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:49,Modifiability,layers,layers,49,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:63,Modifiability,plugin,plugins,63,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:268,Security,Certificate,Certificate,268,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:379,Security,certificate,certificate-of-origin-dco,379,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:644,Testability,test,test,644,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1771:693,Testability,test,test,693,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771
https://github.com/sofa-framework/sofa/pull/1772:932,Availability,failure,failures,932,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:981,Availability,failure,failures,981,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:551,Security,Certificate,Certificate,551,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:662,Security,certificate,certificate-of-origin-dco,662,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:178,Testability,stub,stub,178,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:927,Testability,test,test,927,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1772:976,Testability,test,test,976,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772
https://github.com/sofa-framework/sofa/pull/1774:52,Availability,error,error,52,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:731,Availability,failure,failures,731,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:780,Availability,failure,failures,780,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:350,Security,Certificate,Certificate,350,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:461,Security,certificate,certificate-of-origin-dco,461,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:726,Testability,test,test,726,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1774:775,Testability,test,test,775,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774
https://github.com/sofa-framework/sofa/pull/1775:1150,Availability,error,error,1150,"nsition, so it should be as least breaking as possible. - sofa::defaulttype::Mat becomes sofa::type::Mat; - sofa::defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new sce",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:2113,Availability,failure,failures,2113,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:2162,Availability,failure,failures,2162,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:1289,Integrability,MESSAGE,MESSAGE,1289,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:1496,Integrability,depend,dependency,1496,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:1732,Security,Certificate,Certificate,1732,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:1843,Security,certificate,certificate-of-origin-dco,1843,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:2108,Testability,test,test,2108,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1775:2157,Testability,test,test,2157,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775
https://github.com/sofa-framework/sofa/pull/1776:575,Availability,failure,failures,575,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1776:624,Availability,failure,failures,624,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1776:194,Security,Certificate,Certificate,194,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1776:305,Security,certificate,certificate-of-origin-dco,305,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1776:570,Testability,test,test,570,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1776:619,Testability,test,test,619,"Include to Node.h was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1776
https://github.com/sofa-framework/sofa/pull/1777:831,Availability,failure,failures,831,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:880,Availability,failure,failures,880,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:46,Modifiability,plugin,plugin,46,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:53,Performance,load,loading,53,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:450,Security,Certificate,Certificate,450,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:561,Security,certificate,certificate-of-origin-dco,561,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:826,Testability,test,test,826,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1777:875,Testability,test,test,875,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777
https://github.com/sofa-framework/sofa/pull/1778:574,Availability,failure,failures,574,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:623,Availability,failure,failures,623,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:193,Security,Certificate,Certificate,193,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:304,Security,certificate,certificate-of-origin-dco,304,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:569,Testability,test,test,569,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:618,Testability,test,test,618,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1778:0,Usability,Simpl,Simple,0,"Simple move of example files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778
https://github.com/sofa-framework/sofa/pull/1779:995,Availability,failure,failures,995,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:1044,Availability,failure,failures,1044,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:257,Safety,avoid,avoid,257,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:614,Security,Certificate,Certificate,614,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:725,Security,certificate,certificate-of-origin-dco,725,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:990,Testability,test,test,990,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1779:1039,Testability,test,test,1039,"```TriangularPressureForceField```:; - Set componentState to Invalid if topology is not found; - Fix force vectors display. ```TriangularFEMForceField```:; - Remove GetFracturableEdge deprecated method which could not work.; - Various fix in the display to avoid computation inside draw method; - Replace default display by stress value. ![image](https://user-images.githubusercontent.com/21199245/106916096-17ffbc80-6707-11eb-89e5-c5b9353487b0.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1779
https://github.com/sofa-framework/sofa/pull/1780:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1780:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1780:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1780:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1780:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1780:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1780
https://github.com/sofa-framework/sofa/pull/1781:651,Availability,failure,failures,651,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:700,Availability,failure,failures,700,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:30,Safety,detect,detected,30,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:270,Security,Certificate,Certificate,270,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:381,Security,certificate,certificate-of-origin-dco,381,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:646,Testability,test,test,646,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1781:695,Testability,test,test,695,"I don't know why this was not detected while doing the previous #1770 🤨; Or maybe it was not noticed... 😮. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1781
https://github.com/sofa-framework/sofa/pull/1782:782,Availability,failure,failures,782,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:831,Availability,failure,failures,831,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:401,Security,Certificate,Certificate,401,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:512,Security,certificate,certificate-of-origin-dco,512,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:8,Testability,test,test,8,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:777,Testability,test,test,777,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:826,Testability,test,test,826,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1782:22,Usability,simpl,simple,22,"Initial test was very simple. This one exports at begin and every 5 steps, and the object it exports is deforming.; (and have all its _requiredplugin_ and should not show warnings). Illustrate than export every N steps works (issue #13). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1782
https://github.com/sofa-framework/sofa/pull/1785:555,Availability,failure,failures,555,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/pull/1785:604,Availability,failure,failures,604,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/pull/1785:174,Security,Certificate,Certificate,174,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/pull/1785:285,Security,certificate,certificate-of-origin-dco,285,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/pull/1785:550,Testability,test,test,550,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/pull/1785:599,Testability,test,test,599,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785
https://github.com/sofa-framework/sofa/issues/1786:82,Integrability,depend,dependency,82,"Some code is only enabled if SOFA_HAVE_NEW_TOPOLOGYCHANGES is defined (and adds a dependency on SofaBaseTopology).; I guess this is related with a new (old?) way to manage topology changes.; But this macro can never be enabled anywhere so I suppose that actually the code is not used at all.; Waiting the opinion of @epernod and if necessary, we will make a PR with the removal of the potential dead code. (issue coming from #242)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1786
https://github.com/sofa-framework/sofa/pull/1787:592,Availability,failure,failures,592,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1787:641,Availability,failure,failures,641,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1787:211,Security,Certificate,Certificate,211,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1787:322,Security,certificate,certificate-of-origin-dco,322,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1787:587,Testability,test,test,587,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1787:636,Testability,test,test,636,"Remove minor warnings in two files.; Fix #1754. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787
https://github.com/sofa-framework/sofa/pull/1788:688,Availability,failure,failures,688,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1788:737,Availability,failure,failures,737,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1788:307,Security,Certificate,Certificate,307,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1788:418,Security,certificate,certificate-of-origin-dco,418,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1788:683,Testability,test,test,683,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1788:732,Testability,test,test,732,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788
https://github.com/sofa-framework/sofa/pull/1789:555,Availability,failure,failures,555,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1789:604,Availability,failure,failures,604,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1789:174,Security,Certificate,Certificate,174,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1789:285,Security,certificate,certificate-of-origin-dco,285,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1789:550,Testability,test,test,550,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1789:599,Testability,test,test,599,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789
https://github.com/sofa-framework/sofa/pull/1790:886,Availability,error,error,886,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1508,Availability,failure,failures,1508,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1557,Availability,failure,failures,1557,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:825,Integrability,wrap,wrapping,825,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:583,Modifiability,Flexible,Flexible,583,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:667,Modifiability,Flexible,Flexible,667,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1127,Security,Certificate,Certificate,1127,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1238,Security,certificate,certificate-of-origin-dco,1238,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1503,Testability,test,test,1503,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:1552,Testability,test,test,1552,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1790:690,Usability,simpl,simply,690,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790
https://github.com/sofa-framework/sofa/pull/1792:966,Availability,failure,failures,966,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1792:1015,Availability,failure,failures,1015,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1792:585,Security,Certificate,Certificate,585,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1792:696,Security,certificate,certificate-of-origin-dco,696,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1792:961,Testability,test,test,961,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1792:1010,Testability,test,test,1010,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792
https://github.com/sofa-framework/sofa/pull/1793:620,Availability,failure,failures,620,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1793:669,Availability,failure,failures,669,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1793:239,Security,Certificate,Certificate,239,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1793:350,Security,certificate,certificate-of-origin-dco,350,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1793:615,Testability,test,test,615,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1793:664,Testability,test,test,664,"Use ```= delete``` to make the deprecated function to fails at compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793
https://github.com/sofa-framework/sofa/pull/1794:3518,Availability,failure,failures,3518,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:3567,Availability,failure,failures,3567,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:2593,Integrability,depend,dependency,2593,"E_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:190,Modifiability,coupling,coupling,190,"ExecParams, ConstraintParams, MechanicalParams and VisualParams are used in a lot of different place of our code base which thus requires to #include their corresponding header causing code coupling. . This PR contains:; - the implementation of a set of ""opaque/c-api"" function to be used in header when a ExecParams (or other Params) is needed. ; the advantage of using these ""opaque"" function is that there is not includes other than the ""fwd.h"".; - the removale of all the #include<XXXXXXParams.h> everywhere is was possible, ; - the adding of the missing #include<XXXXXXParams.h> (or other include) in translation units (.cpp) or (.inl) when it was needed. . Following our guidlines, the declaration for the ""opaque functions"" are in ```sofa/core/fwd.h``` and contains:; ```cpp; namespace sofa::core; {; namespace execparams; {; SOFA_CORE_API ExecParams* defaultInstance();; }. namespace constraintparams; {; SOFA_CORE_API const ConstraintParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::ConstraintParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::ConstraintParams*);; }. namespace mechanicalparams; {; SOFA_CORE_API const MechanicalParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::MechanicalParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::MechanicalParams*);. SOFA_CORE_API SReal kFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal bFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal kFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:2542,Modifiability,refactor,refactoring,2542," sofa::core::MechanicalParams*);; SOFA_CORE_API SReal kFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:3137,Security,Certificate,Certificate,3137,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:3248,Security,certificate,certificate-of-origin-dco,3248,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:3513,Testability,test,test,3513,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:3562,Testability,test,test,3562,"core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1794:677,Usability,guid,guidlines,677,"ExecParams, ConstraintParams, MechanicalParams and VisualParams are used in a lot of different place of our code base which thus requires to #include their corresponding header causing code coupling. . This PR contains:; - the implementation of a set of ""opaque/c-api"" function to be used in header when a ExecParams (or other Params) is needed. ; the advantage of using these ""opaque"" function is that there is not includes other than the ""fwd.h"".; - the removale of all the #include<XXXXXXParams.h> everywhere is was possible, ; - the adding of the missing #include<XXXXXXParams.h> (or other include) in translation units (.cpp) or (.inl) when it was needed. . Following our guidlines, the declaration for the ""opaque functions"" are in ```sofa/core/fwd.h``` and contains:; ```cpp; namespace sofa::core; {; namespace execparams; {; SOFA_CORE_API ExecParams* defaultInstance();; }. namespace constraintparams; {; SOFA_CORE_API const ConstraintParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::ConstraintParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::ConstraintParams*);; }. namespace mechanicalparams; {; SOFA_CORE_API const MechanicalParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::MechanicalParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::MechanicalParams*);. SOFA_CORE_API SReal kFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal bFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal kFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794
https://github.com/sofa-framework/sofa/pull/1795:647,Availability,failure,failures,647,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/pull/1795:696,Availability,failure,failures,696,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/pull/1795:266,Security,Certificate,Certificate,266,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/pull/1795:377,Security,certificate,certificate-of-origin-dco,377,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/pull/1795:642,Testability,test,test,642,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/pull/1795:691,Testability,test,test,691,"OpenCL's FixedConstraint was still using the deprecated/removed beginEdit()/endEdit() with ExecParams. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1795
https://github.com/sofa-framework/sofa/issues/1796:73,Integrability,wrap,wrapped,73,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796
https://github.com/sofa-framework/sofa/issues/1796:204,Safety,avoid,avoid,204,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796
https://github.com/sofa-framework/sofa/issues/1796:176,Security,expose,exposed,176,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796
https://github.com/sofa-framework/sofa/issues/1796:236,Security,expose,expose,236,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796
https://github.com/sofa-framework/sofa/pull/1797:1411,Availability,failure,failures,1411,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:1460,Availability,failure,failures,1460,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:239,Integrability,depend,dependency,239,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:540,Integrability,depend,dependency,540,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:1030,Security,Certificate,Certificate,1030,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:1141,Security,certificate,certificate-of-origin-dco,1141,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:1406,Testability,test,test,1406,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1797:1455,Testability,test,test,1455,"Prelude to moving vector & co to Sofa.Type. helper::vector is a bit complicated (defined in vector_device.h but standard,main code is in vector.h with some trick on templates).; But vector_device, the ""main"" implementation of vector has a dependency on defaulttype/dataypeinfo.h (needs some flags from it). Some ways to remove it:; - change the whole mess of vector, vector_device (used only for SofaCUDA and SofaOpenCL) -> **breaking** -> _Nope_; - remove the use of those dataypeinfo flags -> **change in behavior** -> _Nope_; - move the dependency of datatypeinfo using the template mechanism. Purpose of the PR.; It adds a new template parameter to vector (but is set to an empty, unused class so hamrless) and is compatible with standard code.; And SofaCUDA and SofaOpenCL can pass dataypeinfo (along their own MemoryManager actually) so they can use the flags. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797
https://github.com/sofa-framework/sofa/pull/1798:695,Availability,failure,failures,695,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1798:744,Availability,failure,failures,744,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1798:314,Security,Certificate,Certificate,314,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1798:425,Security,certificate,certificate-of-origin-dco,425,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1798:690,Testability,test,test,690,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1798:739,Testability,test,test,739,"I dont know why but the CI raises 3 new erroneous scenes (and rightfully so); This PR corrects them anyway (and removes the warnings in the meantime). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1798
https://github.com/sofa-framework/sofa/pull/1799:969,Availability,failure,failures,969,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:1018,Availability,failure,failures,1018,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:112,Modifiability,coupling,coupling,112,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:588,Security,Certificate,Certificate,588,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:699,Security,certificate,certificate-of-origin-dco,699,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:964,Testability,test,test,964,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1799:1013,Testability,test,test,1013,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799
https://github.com/sofa-framework/sofa/pull/1801:686,Availability,failure,failures,686,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1801:735,Availability,failure,failures,735,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1801:305,Security,Certificate,Certificate,305,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1801:416,Security,certificate,certificate-of-origin-dco,416,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1801:681,Testability,test,test,681,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1801:730,Testability,test,test,730,"Now we have an ""About"" section in the GUI:. ![](https://i.ibb.co/8bLzdKM/Screenshot-from-2021-02-10-00-10-38.png). Do you like what you see?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1801
https://github.com/sofa-framework/sofa/pull/1802:608,Availability,failure,failures,608,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1802:657,Availability,failure,failures,657,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1802:227,Security,Certificate,Certificate,227,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1802:338,Security,certificate,certificate-of-origin-dco,338,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1802:603,Testability,test,test,603,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1802:652,Testability,test,test,652,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802
https://github.com/sofa-framework/sofa/pull/1803:590,Availability,failure,failures,590,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1803:639,Availability,failure,failures,639,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1803:209,Security,Certificate,Certificate,209,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1803:320,Security,certificate,certificate-of-origin-dco,320,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1803:585,Testability,test,test,585,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1803:634,Testability,test,test,634,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803
https://github.com/sofa-framework/sofa/pull/1804:739,Availability,failure,failures,739,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:788,Availability,failure,failures,788,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:160,Integrability,depend,dependencies,160,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:358,Security,Certificate,Certificate,358,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:469,Security,certificate,certificate-of-origin-dco,469,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:734,Testability,test,test,734,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1804:783,Testability,test,test,783,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804
https://github.com/sofa-framework/sofa/pull/1805:1035,Availability,failure,failures,1035,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:1084,Availability,failure,failures,1084,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:316,Integrability,message,message,316,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:199,Modifiability,plugin,plugins,199,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:654,Security,Certificate,Certificate,654,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:765,Security,certificate,certificate-of-origin-dco,765,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:1030,Testability,test,test,1030,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1805:1079,Testability,test,test,1079,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805
https://github.com/sofa-framework/sofa/pull/1806:714,Availability,failure,failures,714,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1806:763,Availability,failure,failures,763,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1806:333,Security,Certificate,Certificate,333,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1806:444,Security,certificate,certificate-of-origin-dco,444,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1806:709,Testability,test,test,709,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1806:758,Testability,test,test,758,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806
https://github.com/sofa-framework/sofa/pull/1807:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1807:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1807:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1807:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1807:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1807:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807
https://github.com/sofa-framework/sofa/pull/1808:639,Availability,failure,failures,639,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:688,Availability,failure,failures,688,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:53,Integrability,depend,dependency,53,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:258,Security,Certificate,Certificate,258,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:369,Security,certificate,certificate-of-origin-dco,369,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:634,Testability,test,test,634,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/pull/1808:683,Testability,test,test,683,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808
https://github.com/sofa-framework/sofa/issues/1809:138,Integrability,depend,depends,138,"The precomputed compliance matrix with `PrecomputedConstraintCorrection` component has a chance to be corrupted at each recomputation. It depends on the collision model used. ### How to reproduce ; I made a small example scene : [BugShowcase.zip](https://github.com/sofa-framework/sofa/files/5961370/PostForum.zip). - Sofa version : 20.12. - Plugins : SofaPython3. This scene uses command line arguments and SofaPython3, so I added ; ```cpp; PythonEnvironment::setArguments(SetDirectory::GetFileName(filename), arguments);; ```; in the `try{}` block of in `SceneLoaderPY3::loadSceneWithArguments` in SceneLoaderPY3.cpp (lines : 90-100). ### The solution ; I do not know, but changing the 3d model can help. Also, one can try to recompute the compliance matrix until it ""works"" and save it and reload it (with `recompute=False`).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1809
https://github.com/sofa-framework/sofa/issues/1809:342,Modifiability,Plugin,Plugins,342,"The precomputed compliance matrix with `PrecomputedConstraintCorrection` component has a chance to be corrupted at each recomputation. It depends on the collision model used. ### How to reproduce ; I made a small example scene : [BugShowcase.zip](https://github.com/sofa-framework/sofa/files/5961370/PostForum.zip). - Sofa version : 20.12. - Plugins : SofaPython3. This scene uses command line arguments and SofaPython3, so I added ; ```cpp; PythonEnvironment::setArguments(SetDirectory::GetFileName(filename), arguments);; ```; in the `try{}` block of in `SceneLoaderPY3::loadSceneWithArguments` in SceneLoaderPY3.cpp (lines : 90-100). ### The solution ; I do not know, but changing the 3d model can help. Also, one can try to recompute the compliance matrix until it ""works"" and save it and reload it (with `recompute=False`).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1809
https://github.com/sofa-framework/sofa/issues/1809:573,Performance,load,loadSceneWithArguments,573,"The precomputed compliance matrix with `PrecomputedConstraintCorrection` component has a chance to be corrupted at each recomputation. It depends on the collision model used. ### How to reproduce ; I made a small example scene : [BugShowcase.zip](https://github.com/sofa-framework/sofa/files/5961370/PostForum.zip). - Sofa version : 20.12. - Plugins : SofaPython3. This scene uses command line arguments and SofaPython3, so I added ; ```cpp; PythonEnvironment::setArguments(SetDirectory::GetFileName(filename), arguments);; ```; in the `try{}` block of in `SceneLoaderPY3::loadSceneWithArguments` in SceneLoaderPY3.cpp (lines : 90-100). ### The solution ; I do not know, but changing the 3d model can help. Also, one can try to recompute the compliance matrix until it ""works"" and save it and reload it (with `recompute=False`).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1809
https://github.com/sofa-framework/sofa/pull/1810:822,Availability,failure,failures,822,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:871,Availability,failure,failures,871,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:194,Integrability,depend,dependency,194,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:441,Security,Certificate,Certificate,441,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:552,Security,certificate,certificate-of-origin-dco,552,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:817,Testability,test,test,817,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1810:866,Testability,test,test,866,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810
https://github.com/sofa-framework/sofa/pull/1812:565,Availability,failure,failures,565,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:614,Availability,failure,failures,614,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:184,Security,Certificate,Certificate,184,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:295,Security,certificate,certificate-of-origin-dco,295,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:560,Testability,test,test,560,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:609,Testability,test,test,609,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1812:3,Usability,simpl,simple,3,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812
https://github.com/sofa-framework/sofa/pull/1813:968,Availability,failure,failures,968,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1813:1017,Availability,failure,failures,1017,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1813:587,Security,Certificate,Certificate,587,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1813:698,Security,certificate,certificate-of-origin-dco,698,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1813:963,Testability,test,test,963,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1813:1012,Testability,test,test,1012,"This PR fixes applyJT (constraints) of RigidMapping. . When using `rigidIndexPerPoint`, it would only work with indices in ascending order. ; For example: `rigidIndexPerPoint=[8,10,10,6,6,8]` would only map the three first constraints. This PR fixes this issue and should not change the behavior when using `index` or `indexFromEnd`. @ChristianDuriez: This was the problem with Etienne's scene. If you could have a look.. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1813
https://github.com/sofa-framework/sofa/pull/1814:595,Availability,failure,failures,595,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1814:644,Availability,failure,failures,644,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1814:214,Security,Certificate,Certificate,214,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1814:325,Security,certificate,certificate-of-origin-dco,325,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1814:590,Testability,test,test,590,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1814:639,Testability,test,test,639,"This PR just adds a new template to Multi2Mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1814
https://github.com/sofa-framework/sofa/pull/1815:626,Availability,failure,failures,626,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1815:675,Availability,failure,failures,675,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1815:245,Security,Certificate,Certificate,245,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1815:356,Security,certificate,certificate-of-origin-dco,356,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1815:621,Testability,test,test,621,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1815:670,Testability,test,test,670,"This PR fixes reinit() of BarycentricMapping when using `useRestPosition` option. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1815
https://github.com/sofa-framework/sofa/pull/1816:0,Availability,Down,Downcasting,0,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:730,Availability,failure,failures,730,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:779,Availability,failure,failures,779,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:349,Security,Certificate,Certificate,349,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:460,Security,certificate,certificate-of-origin-dco,460,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:725,Testability,test,test,725,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1816:774,Testability,test,test,774,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816
https://github.com/sofa-framework/sofa/pull/1817:983,Availability,failure,failures,983,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:1032,Availability,failure,failures,1032,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:106,Modifiability,plugin,plugin,106,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:263,Modifiability,plugin,plugin,263,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:398,Modifiability,plugin,plugins,398,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:602,Security,Certificate,Certificate,602,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:713,Security,certificate,certificate-of-origin-dco,713,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:978,Testability,test,test,978,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1817:1027,Testability,test,test,1027,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817
https://github.com/sofa-framework/sofa/pull/1818:599,Availability,error,error,599,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:793,Availability,error,errors,793,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1451,Availability,failure,failures,1451,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1500,Availability,failure,failures,1500,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1070,Security,Certificate,Certificate,1070,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1181,Security,certificate,certificate-of-origin-dco,1181,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1446,Testability,test,test,1446,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1818:1495,Testability,test,test,1495,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818
https://github.com/sofa-framework/sofa/pull/1819:666,Availability,failure,failures,666,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:715,Availability,failure,failures,715,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:83,Modifiability,plugin,plugin,83,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:93,Performance,load,loaded,93,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:285,Security,Certificate,Certificate,285,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:396,Security,certificate,certificate-of-origin-dco,396,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:661,Testability,test,test,661,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1819:710,Testability,test,test,710,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819
https://github.com/sofa-framework/sofa/pull/1820:1923,Availability,failure,failures,1923,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1972,Availability,failure,failures,1972,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:255,Performance,load,loadQtConfWithCustomPrefix,255,"This is needed by the SofaPython3 modules using Qt.; When importing them directly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not brea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:315,Performance,load,load,315,"This is needed by the SofaPython3 modules using Qt.; When importing them directly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not brea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1063,Performance,load,loadQtConfWithCustomPrefix,1063,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1168,Performance,Load,Loaded,1168,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1310,Performance,load,loading,1310,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1542,Security,Certificate,Certificate,1542,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1653,Security,certificate,certificate-of-origin-dco,1653,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1918,Testability,test,test,1918,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1820:1967,Testability,test,test,1967,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820
https://github.com/sofa-framework/sofa/pull/1823:914,Availability,failure,failures,914,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:963,Availability,failure,failures,963,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:0,Modifiability,Plugin,PluginManager,0,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:47,Modifiability,plugin,plugin,47,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:79,Modifiability,plugin,plugin,79,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:160,Modifiability,plugin,plugin,160,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:254,Modifiability,plugin,plugin,254,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:276,Modifiability,plugin,plugin,276,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:295,Modifiability,Plugin,PluginManager,295,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:310,Modifiability,plugin,pluginIsLoaded,310,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:533,Security,Certificate,Certificate,533,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:644,Security,certificate,certificate-of-origin-dco,644,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:909,Testability,test,test,909,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1823:958,Testability,test,test,958,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823
https://github.com/sofa-framework/sofa/pull/1824:1350,Availability,failure,failures,1350,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:1399,Availability,failure,failures,1399,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:9,Modifiability,plugin,plugin,9,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:39,Modifiability,plugin,plugin,39,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:100,Modifiability,Plugin,PluginRepository,100,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:136,Modifiability,plugin,plugin,136,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:479,Modifiability,plugin,plugin,479,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:506,Modifiability,plugin,plugins,506,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:546,Modifiability,plugin,plugins,546,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:684,Modifiability,plugin,plugins,684,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:744,Modifiability,plugin,plugins,744,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:969,Security,Certificate,Certificate,969,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:1080,Security,certificate,certificate-of-origin-dco,1080,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:1345,Testability,test,test,1345,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1824:1394,Testability,test,test,1394,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824
https://github.com/sofa-framework/sofa/pull/1825:575,Availability,failure,failures,575,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1825:624,Availability,failure,failures,624,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1825:194,Security,Certificate,Certificate,194,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1825:305,Security,certificate,certificate-of-origin-dco,305,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1825:570,Testability,test,test,570,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1825:619,Testability,test,test,619,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825
https://github.com/sofa-framework/sofa/pull/1826:929,Availability,failure,failures,929,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:978,Availability,failure,failures,978,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:548,Security,Certificate,Certificate,548,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:659,Security,certificate,certificate-of-origin-dco,659,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:114,Testability,test,test,114,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:924,Testability,test,test,924,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/pull/1826:973,Testability,test,test,973,"Setting the background color with the component BackgroundSetting wasn't working anymore, because in PR #1758 the test changed from:. ```cpp; else if (_background==2); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	 ; ```; to: . ```cpp; else if (_background==3); glClearColor(backgroundColour[0],backgroundColour[1],backgroundColour[2], 1.0f);	; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1826
https://github.com/sofa-framework/sofa/issues/1827:160,Modifiability,refactor,refactoring,160,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827
https://github.com/sofa-framework/sofa/issues/1827:40,Testability,test,testing,40,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827
https://github.com/sofa-framework/sofa/issues/1827:185,Testability,test,testing,185,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827
https://github.com/sofa-framework/sofa/issues/1827:111,Usability,clear,clearer,111,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827
https://github.com/sofa-framework/sofa/issues/1828:59,Modifiability,Flexible,Flexible,59,The PR #1790 highlighted that the DualQuat is only used in Flexible.; MatSym seems as well not really used. It is an open discussion.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1828
https://github.com/sofa-framework/sofa/pull/1829:626,Availability,failure,failures,626,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1829:675,Availability,failure,failures,675,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1829:245,Security,Certificate,Certificate,245,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1829:356,Security,certificate,certificate-of-origin-dco,356,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1829:621,Testability,test,test,621,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1829:670,Testability,test,test,670,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829
https://github.com/sofa-framework/sofa/pull/1830:596,Availability,failure,failures,596,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:645,Availability,failure,failures,645,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:4,Modifiability,plugin,plugin,4,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:215,Security,Certificate,Certificate,215,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:326,Security,certificate,certificate-of-origin-dco,326,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:591,Testability,test,test,591,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1830:640,Testability,test,test,640,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830
https://github.com/sofa-framework/sofa/pull/1831:780,Availability,failure,failures,780,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:829,Availability,failure,failures,829,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:46,Modifiability,plugin,plugin,46,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:399,Security,Certificate,Certificate,399,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:510,Security,certificate,certificate-of-origin-dco,510,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:123,Testability,test,tests,123,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:775,Testability,test,test,775,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1831:824,Testability,test,test,824,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831
https://github.com/sofa-framework/sofa/pull/1832:982,Availability,failure,failures,982,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1832:1031,Availability,failure,failures,1031,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1832:601,Security,Certificate,Certificate,601,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1832:712,Security,certificate,certificate-of-origin-dco,712,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1832:977,Testability,test,test,977,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1832:1026,Testability,test,test,1026,"This PR adds a new event type, `SimulationInitTexturesDoneEvent`, that will be launch as soon as textures have been initialized. This is needed to make sure all OpenGL buffers have been created, and that we can render a first frame even if there have been no simulation steps done. This was needed for the [SofaOffscreenCamera](https://github.com/jnbrunet/SofaOffscreenCamera) to be able to render the visual before any simulation steps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1832
https://github.com/sofa-framework/sofa/pull/1833:551,Availability,failure,failures,551,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1833:600,Availability,failure,failures,600,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1833:170,Security,Certificate,Certificate,170,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1833:281,Security,certificate,certificate-of-origin-dco,281,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1833:546,Testability,test,test,546,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1833:595,Testability,test,test,595,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833
https://github.com/sofa-framework/sofa/pull/1834:1029,Availability,failure,failures,1029,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:1078,Availability,failure,failures,1078,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:433,Modifiability,plugin,plugin,433,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:207,Performance,load,load,207,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:648,Security,Certificate,Certificate,648,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:759,Security,certificate,certificate-of-origin-dco,759,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:38,Testability,test,testing,38,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:85,Testability,test,testing,85,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:123,Testability,test,tests,123,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:150,Testability,test,test,150,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:160,Testability,test,tests,160,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:265,Testability,test,test-related,265,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:1024,Testability,test,test,1024,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1834:1073,Testability,test,test,1073,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834
https://github.com/sofa-framework/sofa/pull/1835:571,Availability,failure,failures,571,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1835:620,Availability,failure,failures,620,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1835:190,Security,Certificate,Certificate,190,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1835:301,Security,certificate,certificate-of-origin-dco,301,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1835:566,Testability,test,test,566,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1835:615,Testability,test,test,615,"Just to make things clean. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835
https://github.com/sofa-framework/sofa/pull/1836:1100,Availability,failure,failures,1100,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1836:1149,Availability,failure,failures,1149,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1836:719,Security,Certificate,Certificate,719,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1836:830,Security,certificate,certificate-of-origin-dco,830,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1836:1095,Testability,test,test,1095,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1836:1144,Testability,test,test,1144,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836
https://github.com/sofa-framework/sofa/pull/1837:160,Availability,down,down,160,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:2177,Availability,failure,failures,2177,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:2226,Availability,failure,failures,2226,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:1506,Energy Efficiency,reduce,reduce,1506,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:15,Modifiability,config,configure,15,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:1363,Modifiability,config,configure,1363," (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:825,Performance,load,loaded,825,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:1796,Security,Certificate,Certificate,1796,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:1907,Security,certificate,certificate-of-origin-dco,1907,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:769,Testability,test,test,769,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:2172,Testability,test,test,2172,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/pull/1837:2221,Testability,test,test,2221,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837
https://github.com/sofa-framework/sofa/issues/1838:196,Performance,load,load,196,"```sh; cmake . --profiling-format=google-trace --profiling-output=cmake_trace.json; ```. and then with Chrome (I am sure there are external tools by the way), set the URL to `about://tracing` and load your JSON file within the web app. What you should obtain at the end:; ![cmake0](https://user-images.githubusercontent.com/11028016/108481271-46010700-7298-11eb-8df3-fea7300e92b6.PNG)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1838
https://github.com/sofa-framework/sofa/pull/1839:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1839:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1839:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1839:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1839:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1839:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1839
https://github.com/sofa-framework/sofa/pull/1840:356,Availability,redundant,redundant,356,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:952,Availability,failure,failures,952,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:1001,Availability,failure,failures,1001,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:356,Safety,redund,redundant,356,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:571,Security,Certificate,Certificate,571,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:682,Security,certificate,certificate-of-origin-dco,682,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:947,Testability,test,test,947,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1840:996,Testability,test,test,996,"Only the method ```PointSetTopologyContainer::RenumberPoints``` should be used from outside.; This method makes sure to use the good mechanism of Warning, topology event propagation and process. ; Therefore, ```RenumberPointProcess``` and ```RenumberPointWarning``` **have been set to protected** and can only be overridden by child topology class. Remove redundant RenumberPoints in other topology classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1840
https://github.com/sofa-framework/sofa/pull/1842:1092,Availability,failure,failures,1092,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:1141,Availability,failure,failures,1141,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:151,Modifiability,refactor,refactor,151,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:343,Security,access,accessing,343,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:711,Security,Certificate,Certificate,711,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:822,Security,certificate,certificate-of-origin-dco,822,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:1087,Testability,test,test,1087,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1842:1136,Testability,test,test,1136,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842
https://github.com/sofa-framework/sofa/pull/1843:655,Availability,failure,failures,655,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1843:704,Availability,failure,failures,704,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1843:274,Security,Certificate,Certificate,274,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1843:385,Security,certificate,certificate-of-origin-dco,385,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1843:650,Testability,test,test,650,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1843:699,Testability,test,test,699,"I don't understand how such a function could have worked given that; SparseGrid & MeshGrid are not equivalent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1843
https://github.com/sofa-framework/sofa/pull/1844:577,Availability,failure,failures,577,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1844:626,Availability,failure,failures,626,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1844:196,Security,Certificate,Certificate,196,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1844:307,Security,certificate,certificate-of-origin-dco,307,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1844:572,Testability,test,test,572,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1844:621,Testability,test,test,621,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844
https://github.com/sofa-framework/sofa/pull/1845:787,Availability,failure,failures,787,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:836,Availability,failure,failures,836,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:51,Safety,avoid,avoid,51,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:406,Security,Certificate,Certificate,406,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:517,Security,certificate,certificate-of-origin-dco,517,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:782,Testability,test,test,782,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:831,Testability,test,test,831,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1845:20,Usability,simpl,simpleapi,20,"The code removed in simpleapi was an experiment to avoid having to type ""string"" that shouldn't be merged. Given that no one use such a thin and how hard it would be to generalize the idea to the whole code base it is far better to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1845
https://github.com/sofa-framework/sofa/pull/1846:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1846:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1846:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1846:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1846:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1846:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1846
https://github.com/sofa-framework/sofa/pull/1847:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1847:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1847:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1847:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1847:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1847:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1847
https://github.com/sofa-framework/sofa/pull/1848:1254,Availability,failure,failures,1254,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:1303,Availability,failure,failures,1303,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:203,Integrability,depend,dependency,203,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:610,Integrability,depend,dependencies,610,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:379,Safety,Timeout,TimeoutWatcher,379,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:873,Security,Certificate,Certificate,873,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:984,Security,certificate,certificate-of-origin-dco,984,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:1249,Testability,test,test,1249,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:1298,Testability,test,test,1298,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1848:674,Usability,usab,usable,674,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848
https://github.com/sofa-framework/sofa/pull/1849:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1849:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1849:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1849:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1849:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1849:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1849
https://github.com/sofa-framework/sofa/pull/1850:617,Availability,failure,failures,617,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/pull/1850:666,Availability,failure,failures,666,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/pull/1850:236,Security,Certificate,Certificate,236,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/pull/1850:347,Security,certificate,certificate-of-origin-dco,347,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/pull/1850:612,Testability,test,test,612,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/pull/1850:661,Testability,test,test,661,"Minor fix of a line causing a double call to the keyPressEvent function. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1850
https://github.com/sofa-framework/sofa/issues/1851:18,Energy Efficiency,Allocate,Allocate,18,"Crash at; ```; // Allocate Memory for Image Read; png_bytep *const imgData = new png_bytep[H];; for (unsigned int row = 0; row<H; ++row) imgData[row] = new png_byte[(size_t)byte_depth*4*W];; png_read_image(png_ptr,imgData);; png_read_end(png_ptr,end_info);; ```. I suspect the new background image...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851
https://github.com/sofa-framework/sofa/pull/1853:642,Availability,failure,failures,642,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1853:691,Availability,failure,failures,691,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1853:261,Security,Certificate,Certificate,261,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1853:372,Security,certificate,certificate-of-origin-dco,372,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1853:637,Testability,test,test,637,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1853:686,Testability,test,test,686,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853
https://github.com/sofa-framework/sofa/pull/1854:1067,Availability,failure,failures,1067,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/pull/1854:1116,Availability,failure,failures,1116,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/pull/1854:686,Security,Certificate,Certificate,686,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/pull/1854:797,Security,certificate,certificate-of-origin-dco,797,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/pull/1854:1062,Testability,test,test,1062,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/pull/1854:1111,Testability,test,test,1111,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854
https://github.com/sofa-framework/sofa/issues/1855:97,Modifiability,variab,variable,97,/modules/SofaNonUniformFem/src/SofaNonUniformFem/SparseGridMultipleTopology.cpp line 260; shadow variable nameg also line 241,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1855
https://github.com/sofa-framework/sofa/issues/1856:18,Availability,error,error,18,#1790 is removing error messages (when determinant is null or when matrix is not invertible) but keeps a compatibility layer. Grep all invert and determinant should be done to check if the developer is handling the case where it returns false,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1856
https://github.com/sofa-framework/sofa/issues/1856:24,Integrability,message,messages,24,#1790 is removing error messages (when determinant is null or when matrix is not invertible) but keeps a compatibility layer. Grep all invert and determinant should be done to check if the developer is handling the case where it returns false,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1856
https://github.com/sofa-framework/sofa/pull/1858:1071,Availability,failure,failures,1071,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1858:1120,Availability,failure,failures,1120,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1858:690,Security,Certificate,Certificate,690,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1858:801,Security,certificate,certificate-of-origin-dco,801,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1858:1066,Testability,test,test,1066,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1858:1115,Testability,test,test,1115,"This is the continuity of PR #1840 ; The idea is to move all the internal methods into protected so user (developer) do not need to know why there is RemovePointsWarning + propagateTopologyChanges + RemovePointsProcess to be called. Now the public api will only be AddPoints / RemovePoints / movePoints / renumberPoints which handle internally all the process in the good order. As xxxGeometryAlgorithms are more complex cases (where developers know what they do?), those classes are now friends of the xxxSetTopologyModifier. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1858
https://github.com/sofa-framework/sofa/pull/1859:806,Availability,failure,failures,806,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:855,Availability,failure,failures,855,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:160,Deployability,update,update,160,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:425,Security,Certificate,Certificate,425,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:536,Security,certificate,certificate-of-origin-dco,536,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:58,Testability,test,tested,58,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:801,Testability,test,test,801,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1859:850,Testability,test,test,850,"This is the continuity of PR #1858 where only points were tested.; Do the same for: Edges, Triangles, Quads, Tetrahedron and Hexahedron setTopologyModifier and update all mappings. This PR include #1858 and should not be considered until the previous is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1859
https://github.com/sofa-framework/sofa/pull/1860:62,Availability,down,down,62,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:921,Availability,failure,failures,921,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:970,Availability,failure,failures,970,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:106,Security,access,access,106,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:540,Security,Certificate,Certificate,540,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:651,Security,certificate,certificate-of-origin-dco,651,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:916,Testability,test,test,916,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1860:965,Testability,test,test,965,"This PR includes all the work of #1859 and finalized the lock down of the modifier API by removing public access to the propagateTopologyChanges method. - Remove deprecated method: propagateTopologicalChangesWithoutReset; - Turn propagateTopologyChanges into protected (which will be deleted soon to use only engines); - Turn propagateTopologicalEnginesChanges into protected. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1860
https://github.com/sofa-framework/sofa/pull/1861:754,Availability,failure,failures,754,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1861:803,Availability,failure,failures,803,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1861:373,Security,Certificate,Certificate,373,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1861:484,Security,certificate,certificate-of-origin-dco,484,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1861:749,Testability,test,test,749,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1861:798,Testability,test,test,798,"This PR allows to generate elliptic cylinder with Edge2QuadTopologyMapping.; Here's an example:. ![image](https://user-images.githubusercontent.com/12150715/109063762-907aed00-76b7-11eb-8d44-f994200c46d3.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861
https://github.com/sofa-framework/sofa/pull/1862:1417,Availability,failure,failures,1417,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:1466,Availability,failure,failures,1466,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:148,Performance,concurren,concurrently,148,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:1036,Security,Certificate,Certificate,1036,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:1147,Security,certificate,certificate-of-origin-dco,1147,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:1412,Testability,test,test,1412,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:1461,Testability,test,test,1461,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1862:210,Usability,feedback,feedback,210,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862
https://github.com/sofa-framework/sofa/pull/1863:9,Availability,error,errors,9,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:791,Availability,failure,failures,791,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:840,Availability,failure,failures,840,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:81,Modifiability,Config,Config,81,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:172,Modifiability,plugin,plugin,172,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:410,Security,Certificate,Certificate,410,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:521,Security,certificate,certificate-of-origin-dco,521,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:183,Testability,Test,Tested,183,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:227,Testability,test,test,227,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:786,Testability,test,test,786,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/pull/1863:835,Testability,test,test,835,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863
https://github.com/sofa-framework/sofa/issues/1864:304,Availability,error,error,304,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:2634,Availability,error,error,2634,"/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -std=gnu++17 -MD -MT modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -MF modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o.d -o modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -c /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp; In file included from /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp:22:; /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.inl:199:9: error: use of undeclared identifier 'glVertexAttribLPointer'; did you mean '__glewVertexAttribIPointer'?; glVertexAttribLPointer(_index, size, type, 0, (char*)nullptr + 0);; ^~~~~~~~~~~~~~~~~~~~~~; __glewVertexAttribIPointer; /home/vozenne/NVIDIA_CUDA-11.2_Samples/common/inc/GL/glew.h:12318:51: note: '__glewVertexAttribIPointer' declared here; GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;; ^; 1 error generated.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:3060,Availability,error,error,3060,"/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -std=gnu++17 -MD -MT modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -MF modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o.d -o modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -c /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp; In file included from /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp:22:; /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.inl:199:9: error: use of undeclared identifier 'glVertexAttribLPointer'; did you mean '__glewVertexAttribIPointer'?; glVertexAttribLPointer(_index, size, type, 0, (char*)nullptr + 0);; ^~~~~~~~~~~~~~~~~~~~~~; __glewVertexAttribIPointer; /home/vozenne/NVIDIA_CUDA-11.2_Samples/common/inc/GL/glew.h:12318:51: note: '__glewVertexAttribIPointer' declared here; GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;; ^; 1 error generated.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:258,Deployability,install,install,258,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:268,Integrability,depend,dependencies,268,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:310,Integrability,message,message,310,"Hello,. I'm a new user of SOFA. I've been trying to compile the stable version under Ubuntu 20. ; I'm using nvidia cuda 11.2 , gcc and g++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; Compilation were done using ninja as recommended in the video. I might missed to install a dependencies. Please find below the error message:. Thanks in advance for your help.; Best,; Valéry. -----------------------------------------. [50/441] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRAR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/issues/1864:1953,Testability,test,tests,1953,"es/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaCore/src -Iinclude/GTest -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCore/src -isystem /home/vozenne/Dev/sofa/src/SofaKernel/extlibs/json -isystem /home/vozenne/Dev/sofa/src/extlibs/gtest/include -isystem /usr/include/eigen3 -Wall -W -Wno-padded -O3 -DNDEBUG -fPIC -DFRAMEWORK_TEST_RESOURCES_DIR=\""/home/vozenne/Dev/sofa/src/SofaKernel/SofaFramework/resources/tests\"" -pthread -DGTEST_LINKED_AS_SHARED_LIBRARY=1 -std=gnu++17 -MD -MT modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -MF modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o.d -o modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o -c /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp; In file included from /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.cpp:22:; /home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src/SofaOpenglVisual/OglAttribute.inl:199:9: error: use of undeclared identifier 'glVertexAttribLPointer'; did you mean '__glewVertexAttribIPointer'?; glVertexAttribLPointer(_index, size, type, 0, (char",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864
https://github.com/sofa-framework/sofa/pull/1866:3,Availability,error,error,3,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:625,Availability,failure,failures,625,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:674,Availability,failure,failures,674,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:244,Security,Certificate,Certificate,244,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:355,Security,certificate,certificate-of-origin-dco,355,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:620,Testability,test,test,620,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1866:669,Testability,test,test,669,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866
https://github.com/sofa-framework/sofa/pull/1868:574,Availability,failure,failures,574,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1868:623,Availability,failure,failures,623,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1868:193,Security,Certificate,Certificate,193,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1868:304,Security,certificate,certificate-of-origin-dco,304,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1868:569,Testability,test,test,569,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1868:618,Testability,test,test,618,"change condition. Fix #1857 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1868
https://github.com/sofa-framework/sofa/pull/1869:632,Availability,failure,failures,632,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1869:681,Availability,failure,failures,681,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1869:251,Security,Certificate,Certificate,251,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1869:362,Security,certificate,certificate-of-origin-dco,362,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1869:627,Testability,test,test,627,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1869:676,Testability,test,test,676,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869
https://github.com/sofa-framework/sofa/pull/1870:565,Availability,failure,failures,565,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1870:614,Availability,failure,failures,614,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1870:184,Security,Certificate,Certificate,184,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1870:295,Security,certificate,certificate-of-origin-dco,295,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1870:560,Testability,test,test,560,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1870:609,Testability,test,test,609,"One class, one file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1870
https://github.com/sofa-framework/sofa/pull/1871:890,Availability,failure,failures,890,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1871:939,Availability,failure,failures,939,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1871:509,Security,Certificate,Certificate,509,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1871:620,Security,certificate,certificate-of-origin-dco,620,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1871:885,Testability,test,test,885,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1871:934,Testability,test,test,934,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871
https://github.com/sofa-framework/sofa/pull/1872:1125,Availability,failure,failures,1125,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:1174,Availability,failure,failures,1174,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:500,Modifiability,inherit,inheritence,500,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:744,Security,Certificate,Certificate,744,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:855,Security,certificate,certificate-of-origin-dco,855,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:1120,Testability,test,test,1120,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:1169,Testability,test,test,1169,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1872:459,Usability,simpl,simplify,459,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872
https://github.com/sofa-framework/sofa/pull/1873:895,Availability,failure,failures,895,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:944,Availability,failure,failures,944,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:191,Deployability,update,updated,191,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:302,Integrability,depend,depending,302,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:5,Modifiability,Flexible,Flexible,5,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:95,Modifiability,Flexible,Flexible,95,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:239,Modifiability,plugin,plugins,239,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:325,Modifiability,plugin,plugins,325,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:514,Security,Certificate,Certificate,514,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:625,Security,certificate,certificate-of-origin-dco,625,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:890,Testability,test,test,890,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1873:939,Testability,test,test,939,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873
https://github.com/sofa-framework/sofa/pull/1874:561,Availability,failure,failures,561,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:610,Availability,failure,failures,610,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:7,Modifiability,variab,variable,7,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:180,Security,Certificate,Certificate,180,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:291,Security,certificate,certificate-of-origin-dco,291,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:556,Testability,test,test,556,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1874:605,Testability,test,test,605,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874
https://github.com/sofa-framework/sofa/pull/1875:1214,Availability,failure,failures,1214,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:1263,Availability,failure,failures,1263,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:512,Integrability,depend,dependency,512,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:528,Modifiability,plugin,plugin,528,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:833,Security,Certificate,Certificate,833,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:944,Security,certificate,certificate-of-origin-dco,944,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:54,Testability,test,test,54,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:1209,Testability,test,test,1209,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1875:1258,Testability,test,test,1258,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875
https://github.com/sofa-framework/sofa/pull/1876:1067,Availability,failure,failures,1067,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:1116,Availability,failure,failures,1116,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:68,Integrability,message,message,68,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:686,Security,Certificate,Certificate,686,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:797,Security,certificate,certificate-of-origin-dco,797,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:463,Testability,log,log,463,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:1062,Testability,test,test,1062,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1876:1111,Testability,test,test,1111,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876
https://github.com/sofa-framework/sofa/pull/1877:593,Availability,failure,failures,593,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1877:642,Availability,failure,failures,642,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1877:212,Security,Certificate,Certificate,212,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1877:323,Security,certificate,certificate-of-origin-dco,323,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1877:588,Testability,test,test,588,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1877:637,Testability,test,test,637,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877
https://github.com/sofa-framework/sofa/pull/1878:1283,Availability,failure,failures,1283,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1878:1332,Availability,failure,failures,1332,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1878:902,Security,Certificate,Certificate,902,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1878:1013,Security,certificate,certificate-of-origin-dco,1013,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1878:1278,Testability,test,test,1278,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1878:1327,Testability,test,test,1327,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878
https://github.com/sofa-framework/sofa/pull/1879:623,Availability,failure,failures,623,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1879:672,Availability,failure,failures,672,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1879:242,Security,Certificate,Certificate,242,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1879:353,Security,certificate,certificate-of-origin-dco,353,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1879:618,Testability,test,test,618,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1879:667,Testability,test,test,667,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879
https://github.com/sofa-framework/sofa/pull/1880:749,Availability,failure,failures,749,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:798,Availability,failure,failures,798,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:53,Security,access,accessor,53,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:368,Security,Certificate,Certificate,368,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:479,Security,certificate,certificate-of-origin-dco,479,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:176,Testability,test,tests,176,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:744,Testability,test,test,744,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1880:793,Testability,test,test,793,"This PR follows latest changes from master and using accessor instead of begin/endEdit(). SofaOpenCL is not activated by default (either in Sofa or the CI). so compilation and tests are not relevant here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1880
https://github.com/sofa-framework/sofa/pull/1881:25,Availability,error,error,25,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:692,Availability,failure,failures,692,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:741,Availability,failure,failures,741,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:80,Modifiability,Parameteriz,Parameterized,80,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:311,Security,Certificate,Certificate,311,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:422,Security,certificate,certificate-of-origin-dco,422,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:94,Testability,test,test,94,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:687,Testability,test,test,687,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1881:736,Testability,test,test,736,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881
https://github.com/sofa-framework/sofa/pull/1882:751,Availability,failure,failures,751,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1882:800,Availability,failure,failures,800,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1882:370,Security,Certificate,Certificate,370,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1882:481,Security,certificate,certificate-of-origin-dco,481,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1882:746,Testability,test,test,746,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1882:795,Testability,test,test,795,"Showcase, not supposed to be merged as it is.; (prone to discussion at sofameetings). This PR is a prototype on how exception would be used with the example of the matrix functions invert(). (Issue #1924 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1882
https://github.com/sofa-framework/sofa/pull/1883:805,Availability,failure,failures,805,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:854,Availability,failure,failures,854,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:31,Integrability,depend,dependencies,31,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:424,Security,Certificate,Certificate,424,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:535,Security,certificate,certificate-of-origin-dco,535,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:800,Testability,test,test,800,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/pull/1883:849,Testability,test,test,849,"Remove as much as possible the dependencies on SofaCommon, SofaSimulation, SofaGeneral, SofaAdvanced and SofaMisc to remove the warning ""You must now explicitely find (find_package) and link (target_link_library) the modules you need within: ..."". Fixes #1623. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1883
https://github.com/sofa-framework/sofa/issues/1884:13,Modifiability,plugin,plugins,13,"applications/plugins/SofaDistanceGrid/extlibs/miniFlowVR/src/librender/mesh_io_mesh.cpp line 130; Code:; if (fread(&magic, sizeof(int), 1, fp)<=0) return false; // <-- missing fclose",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1884
https://github.com/sofa-framework/sofa/issues/1885:92,Modifiability,Plugin,Plugin,92,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/issues/1885:173,Modifiability,plugin,plugins,173,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/issues/1885:181,Modifiability,Plugin,PluginExample,181,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/issues/1885:18,Testability,Test,Tests,18,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/issues/1885:51,Testability,Test,Testing,51,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/issues/1885:338,Testability,test,tests,338,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885
https://github.com/sofa-framework/sofa/pull/1886:661,Availability,failure,failures,661,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:710,Availability,failure,failures,710,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:83,Integrability,depend,dependencies,83,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:280,Security,Certificate,Certificate,280,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:391,Security,certificate,certificate-of-origin-dco,391,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:15,Testability,test,tests,15,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:32,Testability,test,tests,32,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:78,Testability,test,test,78,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:656,Testability,test,test,656,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1886:705,Testability,test,test,705,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886
https://github.com/sofa-framework/sofa/pull/1887:662,Availability,failure,failures,662,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:711,Availability,failure,failures,711,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:25,Integrability,depend,depends,25,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:281,Security,Certificate,Certificate,281,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:392,Security,certificate,certificate-of-origin-dco,392,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:2,Testability,Test,Test,2,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:657,Testability,test,test,657,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1887:706,Testability,test,test,706,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887
https://github.com/sofa-framework/sofa/pull/1888:1370,Availability,failure,failures,1370,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:1419,Availability,failure,failures,1419,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:493,Modifiability,plugin,plugins,493,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:519,Modifiability,Config,Config,519,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:989,Security,Certificate,Certificate,989,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:1100,Security,certificate,certificate-of-origin-dco,1100,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:1365,Testability,test,test,1365,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1888:1414,Testability,test,test,1414,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888
https://github.com/sofa-framework/sofa/pull/1889:970,Availability,failure,failures,970,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:1019,Availability,failure,failures,1019,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:309,Safety,detect,detected,309,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:589,Security,Certificate,Certificate,589,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:700,Security,certificate,certificate-of-origin-dco,700,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:19,Testability,test,testing,19,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:965,Testability,test,test,965,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1889:1014,Testability,test,test,1014,"Recent PR #1756 is testing wheter Qt5_FOUND is true or not.; The optional search for QWebEngine, QtCharts, can set back this value to FALSE (even if Qt5 itself is there). This PR fixes this (thus fixes the further generation of ui_ headers) by using instead Qt5Core_FOUND (thanks to @guparan ). (This was not detected on the CI or my Windows System as the optional Qt5 components was present, thus Qt5_FOUND was always true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1889
https://github.com/sofa-framework/sofa/pull/1890:708,Availability,failure,failures,708,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:757,Availability,failure,failures,757,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:125,Security,access,accessed,125,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:327,Security,Certificate,Certificate,327,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:438,Security,certificate,certificate-of-origin-dco,438,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:703,Testability,test,test,703,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1890:752,Testability,test,test,752,"In this PR we deprecate for removal the set/getOwnerClass() method from BaseData because this methods duplicates what can be accessed through BaseData::getOwner(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1890
https://github.com/sofa-framework/sofa/pull/1891:368,Availability,down,download,368,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:954,Availability,failure,failures,954,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:1003,Availability,failure,failures,1003,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:73,Deployability,Release,Release,73,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:289,Deployability,update,update,289,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:573,Security,Certificate,Certificate,573,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:684,Security,certificate,certificate-of-origin-dco,684,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:949,Testability,test,test,949,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1891:998,Testability,test,test,998,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891
https://github.com/sofa-framework/sofa/pull/1892:49,Availability,error,error,49,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:619,Availability,failure,failures,619,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:668,Availability,failure,failures,668,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:238,Security,Certificate,Certificate,238,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:349,Security,certificate,certificate-of-origin-dco,349,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:614,Testability,test,test,614,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1892:663,Testability,test,test,663,"Necessary for compiling SofaPython3 out-of-tree (error with Gui bindings). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1892
https://github.com/sofa-framework/sofa/pull/1893:2131,Availability,error,error,2131,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:3037,Availability,failure,failures,3037,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:3086,Availability,failure,failures,3086,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:1843,Integrability,message,message,1843,"om what I know of). ## Breaking; ### Code; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2042,Integrability,message,message,2042,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2181,Integrability,message,message,2181,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2276,Integrability,message,message,2276,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2473,Security,access,access,2473,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2656,Security,Certificate,Certificate,2656,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2767,Security,certificate,certificate-of-origin-dco,2767,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:2121,Testability,assert,assertion,2121,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:3032,Testability,test,test,3032,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:3081,Testability,test,test,3081,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1893:1456,Usability,Simpl,SimpleCopy,1456,"tdtype::vector; - sofa::helper::stable_vector becomes sofa::type::stdtype::stable_vector ; - sofa::helper::SVector becomes sofa::type::stdtype::SVector ; - sofa::helper::vector_device becomes sofa::type::stdtype::vector_device . This PR solves as well the depencency on defaulttype::DataTypeInfo for vector_device by introducing a new template parameter.; (information needed by vector_device like ZeroConstructor cannot be guessed with STL functions, or not from what I know of). ## Breaking; ### Code; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893
https://github.com/sofa-framework/sofa/pull/1894:11,Availability,error,error,11,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:591,Availability,failure,failures,591,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:640,Availability,failure,failures,640,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:210,Security,Certificate,Certificate,210,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:321,Security,certificate,certificate-of-origin-dco,321,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:586,Testability,test,test,586,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1894:635,Testability,test,test,635,"fixed typo error, from leap-frop to leap-frog. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1894
https://github.com/sofa-framework/sofa/pull/1895:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/pull/1895:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/pull/1895:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/pull/1895:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/pull/1895:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/pull/1895:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1895
https://github.com/sofa-framework/sofa/issues/1897:34,Integrability,depend,dependency,34,"SofaDistanceGrid has a (required) dependency on SofaMiscCollision, but SofaMiscCollision has an optional dependency on SofaDistanceGrid (which enables the feature _FrictionContact_DistanceGrid_ ). Needless to say that this feature is never compiled, as it will be impossible to pass into SofaDistanceGrid_FOUND.; (SofaMiscCollision will never be able to find the package SofaDistanceGrid)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1897
https://github.com/sofa-framework/sofa/issues/1897:105,Integrability,depend,dependency,105,"SofaDistanceGrid has a (required) dependency on SofaMiscCollision, but SofaMiscCollision has an optional dependency on SofaDistanceGrid (which enables the feature _FrictionContact_DistanceGrid_ ). Needless to say that this feature is never compiled, as it will be impossible to pass into SofaDistanceGrid_FOUND.; (SofaMiscCollision will never be able to find the package SofaDistanceGrid)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1897
https://github.com/sofa-framework/sofa/pull/1898:1422,Availability,failure,failures,1422,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:1471,Availability,failure,failures,1471,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:456,Deployability,pipeline,pipeline,456,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:1041,Security,Certificate,Certificate,1041,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:1152,Security,certificate,certificate-of-origin-dco,1152,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:1417,Testability,test,test,1417,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1898:1466,Testability,test,test,1466,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898
https://github.com/sofa-framework/sofa/pull/1899:769,Availability,failure,failures,769,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:818,Availability,failure,failures,818,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:160,Modifiability,variab,variable,160,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:70,Security,access,accessed,70,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:388,Security,Certificate,Certificate,388,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:499,Security,certificate,certificate-of-origin-dco,499,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:764,Testability,test,test,764,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1899:813,Testability,test,test,813,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899
https://github.com/sofa-framework/sofa/pull/1900:594,Availability,avail,available,594,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:1166,Availability,failure,failures,1166,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:1215,Availability,failure,failures,1215,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:33,Security,access,accessor,33,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:96,Security,access,accessor,96,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:336,Security,access,accessors,336,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:472,Security,access,accessor,472,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:785,Security,Certificate,Certificate,785,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:896,Security,certificate,certificate-of-origin-dco,896,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:1161,Testability,test,test,1161,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1900:1210,Testability,test,test,1210,"In the current implementation of accessor.h we are using a type_trait to select between default accessor implementation or vector's one. . The traits we are using, called is_container, as its name suggest is returning true if the type parameter is a container.This means that std::set or map are also switching to the vector version of accessors. . This PR; - adds an is_vector type trait which check there is a operator[] in the type parameter ; - use the is_vector into accessor.h to fix the compilation problem. . @fredroy I hope you appreciate the ""quasi c++20 concepts"", when they will be available we will be ready; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1900
https://github.com/sofa-framework/sofa/pull/1901:697,Availability,failure,failures,697,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1901:746,Availability,failure,failures,746,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1901:316,Security,Certificate,Certificate,316,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1901:427,Security,certificate,certificate-of-origin-dco,427,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1901:692,Testability,test,test,692,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1901:741,Testability,test,test,741,"Maybe breaking, if someone, somewhere, somehow stored `ComponentInfo::SPtr` or `FileInfo::SPtr` in its components using directly `boost::shared_ptr<T>`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1901
https://github.com/sofa-framework/sofa/pull/1902:783,Availability,failure,failures,783,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:832,Availability,failure,failures,832,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:136,Modifiability,refactor,refactoring,136,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:402,Security,Certificate,Certificate,402,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:513,Security,certificate,certificate-of-origin-dco,513,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:778,Testability,test,test,778,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1902:827,Testability,test,test,827,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902
https://github.com/sofa-framework/sofa/pull/1903:706,Availability,failure,failures,706,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:755,Availability,failure,failures,755,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:325,Security,Certificate,Certificate,325,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:436,Security,certificate,certificate-of-origin-dco,436,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:701,Testability,test,test,701,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:750,Testability,test,test,750,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1903:0,Usability,Simpl,Simple,0,"Simple change so isDiagonal is now const.; However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903
https://github.com/sofa-framework/sofa/pull/1904:226,Availability,error,error,226,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:939,Availability,failure,failures,939,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:988,Availability,failure,failures,988,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:71,Deployability,update,update,71,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:345,Integrability,message,message,345,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:558,Security,Certificate,Certificate,558,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:669,Security,certificate,certificate-of-origin-dco,669,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:934,Testability,test,test,934,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1904:983,Testability,test,test,983,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904
https://github.com/sofa-framework/sofa/pull/1905:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1905:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1905:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1905:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1905:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1905:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1905
https://github.com/sofa-framework/sofa/pull/1906:993,Availability,failure,failures,993,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:1042,Availability,failure,failures,1042,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:256,Performance,multi-thread,multi-threading,256,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:393,Safety,safe,safetiness,393,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:612,Security,Certificate,Certificate,612,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:723,Security,certificate,certificate-of-origin-dco,723,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:988,Testability,test,test,988,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1906:1037,Testability,test,test,1037,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906
https://github.com/sofa-framework/sofa/pull/1907:567,Availability,failure,failures,567,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1907:616,Availability,failure,failures,616,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1907:186,Security,Certificate,Certificate,186,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1907:297,Security,certificate,certificate-of-origin-dco,297,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1907:562,Testability,test,test,562,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1907:611,Testability,test,test,611,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907
https://github.com/sofa-framework/sofa/pull/1908:567,Availability,failure,failures,567,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1908:616,Availability,failure,failures,616,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1908:186,Security,Certificate,Certificate,186,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1908:297,Security,certificate,certificate-of-origin-dco,297,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1908:562,Testability,test,test,562,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1908:611,Testability,test,test,611,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1908
https://github.com/sofa-framework/sofa/pull/1909:718,Availability,failure,failures,718,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:767,Availability,failure,failures,767,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:65,Performance,load,loading,65,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:145,Performance,perform,performing,145,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:87,Security,access,access,87,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:337,Security,Certificate,Certificate,337,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:448,Security,certificate,certificate-of-origin-dco,448,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:29,Testability,test,test,29,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:713,Testability,test,test,713,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/pull/1909:762,Testability,test,test,762,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909
https://github.com/sofa-framework/sofa/issues/1910:235,Energy Efficiency,consumption,consumption,235,"Lets consider a Mapping that gets two mechanical objects and outputs the concatenation of the degrees of freedom. This is a lightweight mapping, but to store the results we need to create a MechanicalObject, which increases the memory consumption of the simulation. . For this type of lightweight mappings, it would make much more sense a MechanicalView object, which can compute the DoFs lazily.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1910
https://github.com/sofa-framework/sofa/pull/1911:777,Availability,failure,failures,777,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:826,Availability,failure,failures,826,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:60,Modifiability,variab,variables,60,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:396,Security,Certificate,Certificate,396,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:507,Security,certificate,certificate-of-origin-dco,507,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:176,Testability,test,tested,176,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:772,Testability,test,test,772,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1911:821,Testability,test,test,821,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911
https://github.com/sofa-framework/sofa/pull/1912:1615,Availability,failure,failures,1615,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1664,Availability,failure,failures,1664,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1025,Modifiability,plugin,plugin,1025,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1234,Security,Certificate,Certificate,1234,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1345,Security,certificate,certificate-of-origin-dco,1345,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1610,Testability,test,test,1610,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1912:1659,Testability,test,test,1659,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912
https://github.com/sofa-framework/sofa/pull/1913:1385,Availability,failure,failures,1385,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:1434,Availability,failure,failures,1434,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:322,Integrability,depend,dependent,322,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:147,Modifiability,variab,variable,147,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:705,Modifiability,config,configure,705,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:1004,Security,Certificate,Certificate,1004,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:1115,Security,certificate,certificate-of-origin-dco,1115,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:1380,Testability,test,test,1380,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1913:1429,Testability,test,test,1429,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913
https://github.com/sofa-framework/sofa/pull/1914:639,Availability,failure,failures,639,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1914:688,Availability,failure,failures,688,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1914:258,Security,Certificate,Certificate,258,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1914:369,Security,certificate,certificate-of-origin-dco,369,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1914:634,Testability,test,test,634,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1914:683,Testability,test,test,683,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914
https://github.com/sofa-framework/sofa/pull/1915:884,Availability,failure,failures,884,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:933,Availability,failure,failures,933,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:194,Integrability,depend,dependency,194,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:246,Integrability,depend,dependency,246,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:312,Modifiability,config,config,312,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:503,Security,Certificate,Certificate,503,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:614,Security,certificate,certificate-of-origin-dco,614,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:879,Testability,test,test,879,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/pull/1915:928,Testability,test,test,928,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915
https://github.com/sofa-framework/sofa/issues/1916:6,Availability,down,downloading,6,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:114,Availability,error,error,114,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:205,Availability,error,error,205,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:1101,Availability,Error,Error,1101,"10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:22,Deployability,install,installing,22,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:45,Deployability,release,release,45,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:26169,Deployability,A/B,A/BaseBoard,26169,eData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices; 0x7fff264cc000 - 0x7fff26541fff com.apple.AE (918.0.1 - 918.0.1) <9B6B42DB-8768-343B-B10E-A9A5710280CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE; 0x7fff26542000 - 0x7fff26548fff libdns_services.dylib (1310.80.1) <97EB5DFD-BB41-3834-BF09-1F597D84F324> /usr/lib/libdns_services.dylib; 0x7fff26549000 - 0x7fff26550fff libsystem_symptoms.dylib (1431.40.36) <BC85B46C-02EE-31FF-861D-F0DE01E8F6CF> /usr/lib/system/libsystem_symptoms.dylib; 0x7fff26551000 - 0x7fff266d5fff com.apple.Network (1.0 - 1) <75C2713C-F0D8-32BA-A839-17A2AE49A061> /System/Library/Frameworks/Network.framework/Versions/A/Network; 0x7fff266d6000 - 0x7fff266fafff com.apple.analyticsd (1.0 - 1) <4FFF906A-FE79-38F9-B777-AE878A0C99F1> /System/Library/PrivateFram,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37750,Deployability,A/B,A/BackgroundTaskManagement,37750, - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /usr/lib/libbsm.0.dylib; 0x7fff29fea000 - 0x7fff2a033fff libmecab.dylib (929.1.1) <1F424683-4213-3594-9BF5-EFCCCDAA83A5> /usr/lib/libmecab.dylib; 0x7fff2a034000 - 0x7fff2a039fff libgermantok.dylib (24) <E40EFA11-E95C-36D1-A8BE-8CA5B1DD179D> /usr/lib/libgermantok.dylib; 0x7fff2a03a000 - 0x7fff2a04ffff libLinearAlgebra.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:51923,Deployability,A/B,A/Bom,51923,rary/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.framework (1.0 - 98.80.2) <C257C950-F430-3762-BC72-15D314D99556> /System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient; 0x7fff2bd3f000 - 0x7fff2bd72fff com.apple.MultitouchSupport.framework (4400.28 - 4400.28) <4243F7DC-7EB9-3750-BE36-527B0BADF36C> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport; 0x7fff2bd73000 - 0x7fff2bec5fff com.apple.VideoToolbox (1.0 - 2765.6.4.2) <425BDD2D-6C26-3D09-AD9F-942EA387B2A4> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox; 0x7fff2bec6000 - 0x7fff2bef8fff libA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:68028,Deployability,A/B,A/BoardServices,68028,ns/A/FileProvider; 0x7fff3149d000 - 0x7fff314c0fff com.apple.GenerationalStorage (2.0 - 322) <974A1465-7AA4-347E-8606-CF35160FFA92> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage; 0x7fff31837000 - 0x7fff31907fff com.apple.CoreTelephony (113 - 8183.1) <C7979E59-4A17-31A4-822F-96D9A46AB4FA> /System/Library/Frameworks/CoreTelephony.framework/Versions/A/CoreTelephony; 0x7fff3192c000 - 0x7fff31ab9fff com.apple.AVFCore (1.0 - 2005.3.4.1) <DB9C9FAF-62C4-374A-BB86-F30308686829> /System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore; 0x7fff31aba000 - 0x7fff31b2cfff com.apple.FrontBoardServices (702.3.3 - 702.3.3) <C655E2DB-0D8B-328D-B095-374B15B3DC42> /System/Library/PrivateFrameworks/FrontBoardServices.framework/Versions/A/FrontBoardServices; 0x7fff31b2d000 - 0x7fff31b56fff com.apple.BoardServices (1.0 - 526) <9AFB78B3-9070-32FC-B4FF-3DA1FA0A55F2> /System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices; 0x7fff31b9a000 - 0x7fff31bb6fff com.apple.ExtensionKit (19.4 - 19.4) <6DD994A0-598F-333B-9D99-FFD1A53CCEC7> /System/Library/PrivateFrameworks/ExtensionKit.framework/Versions/A/ExtensionKit; 0x7fff31bb7000 - 0x7fff31bbefff com.apple.ExtensionFoundation (19.4 - 19.4) <5512C574-FF02-347E-A7D6-2AA2878DC38C> /System/Library/PrivateFrameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation; 0x7fff31bbf000 - 0x7fff31c05fff com.apple.CryptoTokenKit (1.0 - 1) <9EEE41E2-F11F-36A6-A441-CB6A8F982921> /System/Library/Frameworks/CryptoTokenKit.framework/Versions/A/CryptoTokenKit; 0x7fff31c06000 - 0x7fff31c1dfff com.apple.LocalAuthentication (1.0 - 827.80.7) <592A6B2C-B002-393A-B17D-CC50F5AD84AF> /System/Library/Frameworks/LocalAuthentication.framework/Versions/A/LocalAuthentication; 0x7fff31c1e000 - 0x7fff31c4bfff com.apple.CoreAuthentication.SharedUtils (1.0 - 827.80.7) <12945B26-E4E0-3FAB-ACFB-511F9C6089D5> /System/Library/Frameworks/LocalAuthentication.framework/Support/SharedUtils.f,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:71103,Deployability,A/B,A/BackBoardServices,71103,ystem/Library/PrivateFrameworks/Rapport.framework/Versions/A/Rapport; 0x7fff327e8000 - 0x7fff32835fff com.apple.coreduetcontext (1.0 - 1) <74532B8A-C4D3-366D-95D2-A1EA9909ECE4> /System/Library/PrivateFrameworks/CoreDuetContext.framework/Versions/A/CoreDuetContext; 0x7fff32836000 - 0x7fff32db3fff com.apple.Intents (1.0 - 1) <14608371-232F-347A-8B41-4C035B4DE2B4> /System/Library/Frameworks/Intents.framework/Versions/A/Intents; 0x7fff32db4000 - 0x7fff32e17fff com.apple.framework.Apple80211 (17.0 - 1728) <A62689A7-7C22-33B3-90FA-730E4AAEE5B5> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211; 0x7fff32e18000 - 0x7fff32f6afff com.apple.CoreWiFi (3.0 - 341) <F3D8F158-611A-3A5E-9F1D-E5FC273A4C74> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi; 0x7fff32f6b000 - 0x7fff32f83fff com.apple.BackBoardServices (1.0 - 1.0) <584F3C72-F8F2-3B70-A98F-EC18334BE9F3> /System/Library/PrivateFrameworks/BackBoardServices.framework/Versions/A/BackBoardServices; 0x7fff32f84000 - 0x7fff32fbbfff com.apple.LDAPFramework (2.4.28 - 194.5) <246874E6-4FD1-35A5-A039-4141999D8CD6> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP; 0x7fff32fbc000 - 0x7fff32fbdfff com.apple.TrustEvaluationAgent (2.0 - 35) <6FEF60A0-F80F-34E3-8845-FEEC92840920> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent; 0x7fff32fbe000 - 0x7fff330c1fff libcrypto.44.dylib (56.60.2) <7D8D4B1B-625D-3D00-A626-C21AFEE0462E> /usr/lib/libcrypto.44.dylib; 0x7fff330c2000 - 0x7fff330effff libssl.46.dylib (56.60.2) <E02ED3C9-4956-39C4-AF0A-B541EEDD3F1B> /usr/lib/libssl.46.dylib; 0x7fff330f0000 - 0x7fff3319ffff com.apple.DiskImagesFramework (595.40.1 - 595.40.1) <3139EC22-A8F2-3F26-8953-7961C97E7CEF> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages; 0x7fff331d7000 - 0x7fff331e6fff com.apple.xpc.RemoteServiceDiscovery (1.0 - 2038.80.3) <78AF1606-37D8-3424-92AE-071A9F43AA0F> /System/Library/PrivateFrameworks/Rem,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:65429,Energy Efficiency,Power,PowerLog,65429,(5.0 - 1) <3BF95CAF-2EC5-393A-95B7-429C0C5F8F13> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP; 0x7fff30533000 - 0x7fff3053efff com.apple.frameworks.CoreDaemon (1.3 - 1.3) <D73E7719-09C8-30E6-B92D-AFC1BB356D92> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon; 0x7fff3053f000 - 0x7fff30576fff com.apple.framework.SystemAdministration (1.0 - 1.0) <9275DC16-B898-326A-B6AD-6CDF34F0CF77> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration; 0x7fff30d38000 - 0x7fff30d9afff com.apple.CoreBluetooth (1.0 - 1) <B88DEE8B-6268-36BA-BF6C-088F3BD8C652> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth; 0x7fff30d9b000 - 0x7fff30da4fff com.apple.SymptomDiagnosticReporter (1.0 - 79.40.12) <83B5E330-D786-34D2-AEE6-6F7B34D6FE9C> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter; 0x7fff30da5000 - 0x7fff30db8fff com.apple.PowerLog (1.0 - 1) <3A076F54-AE8C-3550-8262-5655B5026489> /System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog; 0x7fff30db9000 - 0x7fff30dc5fff com.apple.AppleIDAuthSupport (1.0 - 1) <964BA0DB-E86E-3F81-BB82-CC27184B6D20> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport; 0x7fff30dc6000 - 0x7fff30e6efff com.apple.DiscRecording (9.0.3 - 9030.4.5) <2B9AA549-63FD-36BB-AE05-ABD5DAC41279> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording; 0x7fff30e6f000 - 0x7fff30ea2fff com.apple.MediaKit (16 - 927.40.2) <D1056292-E38F-313F-B202-EFD871195729> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit; 0x7fff30ea3000 - 0x7fff30f8efff com.apple.DiskManagement (14.0 - 1733.80.1) <9281E3F8-EAFE-3367-B7D5-23687AA6EB70> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement; 0x7fff30f8f000 - 0x7fff31349fff com.apple.CoreAUC (322.2.0 - 322.2.0) <DAE981E0-5FED-39FD-8443-BD9,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:65521,Energy Efficiency,Power,PowerLog,65521,System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP; 0x7fff30533000 - 0x7fff3053efff com.apple.frameworks.CoreDaemon (1.3 - 1.3) <D73E7719-09C8-30E6-B92D-AFC1BB356D92> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon; 0x7fff3053f000 - 0x7fff30576fff com.apple.framework.SystemAdministration (1.0 - 1.0) <9275DC16-B898-326A-B6AD-6CDF34F0CF77> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration; 0x7fff30d38000 - 0x7fff30d9afff com.apple.CoreBluetooth (1.0 - 1) <B88DEE8B-6268-36BA-BF6C-088F3BD8C652> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth; 0x7fff30d9b000 - 0x7fff30da4fff com.apple.SymptomDiagnosticReporter (1.0 - 79.40.12) <83B5E330-D786-34D2-AEE6-6F7B34D6FE9C> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter; 0x7fff30da5000 - 0x7fff30db8fff com.apple.PowerLog (1.0 - 1) <3A076F54-AE8C-3550-8262-5655B5026489> /System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog; 0x7fff30db9000 - 0x7fff30dc5fff com.apple.AppleIDAuthSupport (1.0 - 1) <964BA0DB-E86E-3F81-BB82-CC27184B6D20> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport; 0x7fff30dc6000 - 0x7fff30e6efff com.apple.DiscRecording (9.0.3 - 9030.4.5) <2B9AA549-63FD-36BB-AE05-ABD5DAC41279> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording; 0x7fff30e6f000 - 0x7fff30ea2fff com.apple.MediaKit (16 - 927.40.2) <D1056292-E38F-313F-B202-EFD871195729> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit; 0x7fff30ea3000 - 0x7fff30f8efff com.apple.DiskManagement (14.0 - 1733.80.1) <9281E3F8-EAFE-3367-B7D5-23687AA6EB70> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement; 0x7fff30f8f000 - 0x7fff31349fff com.apple.CoreAUC (322.2.0 - 322.2.0) <DAE981E0-5FED-39FD-8443-BD91D6957901> /System/Library/PrivateFrameworks/CoreAU,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:65551,Energy Efficiency,Power,PowerLog,65551,f30533000 - 0x7fff3053efff com.apple.frameworks.CoreDaemon (1.3 - 1.3) <D73E7719-09C8-30E6-B92D-AFC1BB356D92> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon; 0x7fff3053f000 - 0x7fff30576fff com.apple.framework.SystemAdministration (1.0 - 1.0) <9275DC16-B898-326A-B6AD-6CDF34F0CF77> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration; 0x7fff30d38000 - 0x7fff30d9afff com.apple.CoreBluetooth (1.0 - 1) <B88DEE8B-6268-36BA-BF6C-088F3BD8C652> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth; 0x7fff30d9b000 - 0x7fff30da4fff com.apple.SymptomDiagnosticReporter (1.0 - 79.40.12) <83B5E330-D786-34D2-AEE6-6F7B34D6FE9C> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter; 0x7fff30da5000 - 0x7fff30db8fff com.apple.PowerLog (1.0 - 1) <3A076F54-AE8C-3550-8262-5655B5026489> /System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog; 0x7fff30db9000 - 0x7fff30dc5fff com.apple.AppleIDAuthSupport (1.0 - 1) <964BA0DB-E86E-3F81-BB82-CC27184B6D20> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport; 0x7fff30dc6000 - 0x7fff30e6efff com.apple.DiscRecording (9.0.3 - 9030.4.5) <2B9AA549-63FD-36BB-AE05-ABD5DAC41279> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording; 0x7fff30e6f000 - 0x7fff30ea2fff com.apple.MediaKit (16 - 927.40.2) <D1056292-E38F-313F-B202-EFD871195729> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit; 0x7fff30ea3000 - 0x7fff30f8efff com.apple.DiskManagement (14.0 - 1733.80.1) <9281E3F8-EAFE-3367-B7D5-23687AA6EB70> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement; 0x7fff30f8f000 - 0x7fff31349fff com.apple.CoreAUC (322.2.0 - 322.2.0) <DAE981E0-5FED-39FD-8443-BD91D6957901> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC; 0x7fff3134a000 - 0x7fff3134dfff com.apple.Mang,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:88778,Energy Efficiency,Sensor,Sensor,88778,"ncl (4.5 - 4.5) <40B70A3B-D981-3E4A-9BEC-F22EF84118F5> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL; 0x7fff6f297000 - 0x7fff6f29efff com.apple.agl (3.3.4 - AGL-3.3.3) <25240534-44D6-3350-9C56-0D0CEAC3830B> /System/Library/Frameworks/AGL.framework/Versions/A/AGL; 0x7fff7462d000 - 0x7fff74638fff com.apple.SymptomAnalytics (1.0 - 1431.40.36) <F39AE6CD-4B59-3DB1-A8C1-3E6F98EAEB5D> /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomAnalytics.framework/Versions/A/SymptomAnalytics; 0x7fff74856000 - 0x7fff7486efff com.apple.SymptomPresentationFeed (1.0 - 1431.40.36) <93E9446C-B263-3B43-938D-E4A1162C8FEC> /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomPresentationFeed.framework/Versions/A/SymptomPresentationFeed; 0x7fff78385000 - 0x7fff7838cfff libRosetta.dylib (203.30) <44C477D9-013F-3A6D-A9FE-68A89214E6A5> /usr/lib/libRosetta.dylib. Model: MacBookPro15,3, BootROM 1554.80.3.0.0 (iBridge: 18.16.14347.0.0,0), 8 processors, 8-Core Intel Core i9, 2.3 GHz, 32 GB, SMC ; Graphics: kHW_IntelUHDGraphics630Item, Intel UHD Graphics 630, spdisplays_builtin; Graphics: kHW_AMDRadeonProVega20Item, Radeon Pro Vega 20, spdisplays_pcie_device, 4 GB; Memory Module: BANK 0/ChannelA-DIMM0, 16 GB, DDR4, 2400 MHz, SK Hynix, -; Memory Module: BANK 2/ChannelB-DIMM0, 16 GB, DDR4, 2400 MHz, SK Hynix, -; AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x7BF), wl0: Sep 11 2020 16:57:49 version 9.30.440.2.32.5.61 FWID 01-129bddb; Bluetooth: Version 8.0.3d9, 3 services, 27 devices, 1 incoming serial ports; Network Service: Wi-Fi, AirPort, en0; USB Device: USB 3.1 Bus; USB Device: Apple T2 Bus; USB Device: Touch Bar Backlight; USB Device: Touch Bar Display; USB Device: Apple Internal Keyboard / Trackpad; USB Device: Headset; USB Device: Ambient Light Sensor; USB Device: FaceTime HD Camera (Built-in); USB Device: Apple T2 Controller; Thunderbolt Bus: MacBook Pro, Apple Inc., 47.4; Thunderbolt Bus: MacBook Pro, Apple Inc., 47.4; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:571,Integrability,Bridg,Bridge,571,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:1075,Integrability,depend,dependent,1075,"ary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:1107,Integrability,Message,Message,1107,"10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:25353,Integrability,Protocol,ProtocolBuffer,25353,ht; 0x7fff251e0000 - 0x7fff25873fff com.apple.CoreGraphics (2.0 - 1463.3.2) <29845645-F6F2-34E0-AC0D-C659773C78ED> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics; 0x7fff25874000 - 0x7fff2596afff com.apple.ColorSync (4.13.0 - 3473.3.1) <A67D9B0A-E9FB-325A-873B-032DAF45C112> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync; 0x7fff2596b000 - 0x7fff259c6fff com.apple.HIServices (1.22 - 714) <780B2B09-80A6-32C8-B9E5-024988196E00> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices; 0x7fff25ab9000 - 0x7fff25c7dfff com.apple.Montreal (1.0 - 142) <A5670332-A468-35DB-9333-A53B30926E46> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal; 0x7fff25d72000 - 0x7fff26190fff com.apple.CoreData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:25462,Integrability,Protocol,ProtocolBuffer,25462,1463.3.2) <29845645-F6F2-34E0-AC0D-C659773C78ED> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics; 0x7fff25874000 - 0x7fff2596afff com.apple.ColorSync (4.13.0 - 3473.3.1) <A67D9B0A-E9FB-325A-873B-032DAF45C112> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync; 0x7fff2596b000 - 0x7fff259c6fff com.apple.HIServices (1.22 - 714) <780B2B09-80A6-32C8-B9E5-024988196E00> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices; 0x7fff25ab9000 - 0x7fff25c7dfff com.apple.Montreal (1.0 - 142) <A5670332-A468-35DB-9333-A53B30926E46> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal; 0x7fff25d72000 - 0x7fff26190fff com.apple.CoreData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices; 0x7fff264cc000 - 0x7fff26541fff c,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:25498,Integrability,Protocol,ProtocolBuffer,25498,cs.framework/Versions/A/CoreGraphics; 0x7fff25874000 - 0x7fff2596afff com.apple.ColorSync (4.13.0 - 3473.3.1) <A67D9B0A-E9FB-325A-873B-032DAF45C112> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync; 0x7fff2596b000 - 0x7fff259c6fff com.apple.HIServices (1.22 - 714) <780B2B09-80A6-32C8-B9E5-024988196E00> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices; 0x7fff25ab9000 - 0x7fff25c7dfff com.apple.Montreal (1.0 - 142) <A5670332-A468-35DB-9333-A53B30926E46> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal; 0x7fff25d72000 - 0x7fff26190fff com.apple.CoreData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices; 0x7fff264cc000 - 0x7fff26541fff com.apple.AE (918.0.1 - 918.0.1) <9B6B42DB-8768-343B-B10E-A9A5710280CD> /System/Librar,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:55991,Integrability,MediaT,MediaToolbox,55991,1) <DB939B2B-D47D-3035-8C02-01006D21C5A7> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore; 0x7fff2c05a000 - 0x7fff2c126fff com.apple.TextureIO (3.10.9 - 3.10.9) <50BA07A4-02E8-38EE-B0B9-B12C277B563B> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO; 0x7fff2c127000 - 0x7fff2c12ffff com.apple.InternationalSupport (1.0 - 60) <DE997943-6AD5-32DA-B48E-78170C1EAA7B> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport; 0x7fff2c130000 - 0x7fff2c1abfff com.apple.datadetectorscore (8.0 - 674) <A4EBFF22-F861-321A-AF28-1DB8ECB9A4FF> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore; 0x7fff2c1ac000 - 0x7fff2c20afff com.apple.UserActivity (435 - 435) <12250395-D660-3CC1-81DB-565340F2651B> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity; 0x7fff2c20b000 - 0x7fff2c976fff com.apple.MediaToolbox (1.0 - 2765.6.4.2) <C8645EA0-643D-38CF-AA88-3253339192B1> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox; 0x7fff2ce30000 - 0x7fff2ce58fff com.apple.locationsupport (2420.12.16 - 2420.12.16) <63AB1284-8E33-3E9D-A857-9370F492B343> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport; 0x7fff2ce59000 - 0x7fff2ce8afff libSessionUtility.dylib (76.7) <6AAD02A0-9590-3CED-9568-36E05C59AA2B> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib; 0x7fff2ce8b000 - 0x7fff2cfbbfff com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8E53C25F-9FE2-372E-8374-6A598D72C4C1> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox; 0x7fff2cfbc000 - 0x7fff2d023fff com.apple.audio.AudioSession (1.0 - 76.7) <F696F4EC-9344-3C85-941E-6E5EF5CEF585> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession; 0x7fff2d024000 - 0x7fff2d036fff libAudioStatistics.dylib (25.4) <303533DD-D,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:56089,Integrability,MediaT,MediaToolbox,56089,eworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore; 0x7fff2c05a000 - 0x7fff2c126fff com.apple.TextureIO (3.10.9 - 3.10.9) <50BA07A4-02E8-38EE-B0B9-B12C277B563B> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO; 0x7fff2c127000 - 0x7fff2c12ffff com.apple.InternationalSupport (1.0 - 60) <DE997943-6AD5-32DA-B48E-78170C1EAA7B> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport; 0x7fff2c130000 - 0x7fff2c1abfff com.apple.datadetectorscore (8.0 - 674) <A4EBFF22-F861-321A-AF28-1DB8ECB9A4FF> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore; 0x7fff2c1ac000 - 0x7fff2c20afff com.apple.UserActivity (435 - 435) <12250395-D660-3CC1-81DB-565340F2651B> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity; 0x7fff2c20b000 - 0x7fff2c976fff com.apple.MediaToolbox (1.0 - 2765.6.4.2) <C8645EA0-643D-38CF-AA88-3253339192B1> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox; 0x7fff2ce30000 - 0x7fff2ce58fff com.apple.locationsupport (2420.12.16 - 2420.12.16) <63AB1284-8E33-3E9D-A857-9370F492B343> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport; 0x7fff2ce59000 - 0x7fff2ce8afff libSessionUtility.dylib (76.7) <6AAD02A0-9590-3CED-9568-36E05C59AA2B> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib; 0x7fff2ce8b000 - 0x7fff2cfbbfff com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8E53C25F-9FE2-372E-8374-6A598D72C4C1> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox; 0x7fff2cfbc000 - 0x7fff2d023fff com.apple.audio.AudioSession (1.0 - 76.7) <F696F4EC-9344-3C85-941E-6E5EF5CEF585> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession; 0x7fff2d024000 - 0x7fff2d036fff libAudioStatistics.dylib (25.4) <303533DD-D001-3CE8-A5A4-EC29F464FC3A> /usr/lib/libAudioStatistics.dylib;,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:56123,Integrability,MediaT,MediaToolbox,56123,rk/Versions/A/PrintCore; 0x7fff2c05a000 - 0x7fff2c126fff com.apple.TextureIO (3.10.9 - 3.10.9) <50BA07A4-02E8-38EE-B0B9-B12C277B563B> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO; 0x7fff2c127000 - 0x7fff2c12ffff com.apple.InternationalSupport (1.0 - 60) <DE997943-6AD5-32DA-B48E-78170C1EAA7B> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport; 0x7fff2c130000 - 0x7fff2c1abfff com.apple.datadetectorscore (8.0 - 674) <A4EBFF22-F861-321A-AF28-1DB8ECB9A4FF> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore; 0x7fff2c1ac000 - 0x7fff2c20afff com.apple.UserActivity (435 - 435) <12250395-D660-3CC1-81DB-565340F2651B> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity; 0x7fff2c20b000 - 0x7fff2c976fff com.apple.MediaToolbox (1.0 - 2765.6.4.2) <C8645EA0-643D-38CF-AA88-3253339192B1> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox; 0x7fff2ce30000 - 0x7fff2ce58fff com.apple.locationsupport (2420.12.16 - 2420.12.16) <63AB1284-8E33-3E9D-A857-9370F492B343> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport; 0x7fff2ce59000 - 0x7fff2ce8afff libSessionUtility.dylib (76.7) <6AAD02A0-9590-3CED-9568-36E05C59AA2B> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib; 0x7fff2ce8b000 - 0x7fff2cfbbfff com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8E53C25F-9FE2-372E-8374-6A598D72C4C1> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox; 0x7fff2cfbc000 - 0x7fff2d023fff com.apple.audio.AudioSession (1.0 - 76.7) <F696F4EC-9344-3C85-941E-6E5EF5CEF585> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession; 0x7fff2d024000 - 0x7fff2d036fff libAudioStatistics.dylib (25.4) <303533DD-D001-3CE8-A5A4-EC29F464FC3A> /usr/lib/libAudioStatistics.dylib; 0x7fff2d037000 - 0x7fff2d046fff com.apple.speech.synthesis.framework (9.0.51,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:2104,Modifiability,plugin,plugins,2104,Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:2836,Modifiability,plugin,plugins,2836,-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:3055,Modifiability,plugin,plugins,3055,ions/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5E,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:3458,Modifiability,plugin,plugins,3458,ib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:3686,Modifiability,plugin,plugins,3686,x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/r,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:3902,Modifiability,plugin,plugins,3902, 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:4123,Modifiability,plugin,plugins,4123,80f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:4339,Modifiability,plugin,plugins,4339,llision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applicat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:4728,Modifiability,plugin,plugins,4728,.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:4948,Modifiability,plugin,plugins,4948,lib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Appl,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:5169,Modifiability,plugin,plugins,5169,2.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineWidgets.framework/Versions/5/QtWebEngineWidgets; 0x109404000 - 0x10f696fff +org.qt-project.Qt.QtWebEngineCore (5.12 - 5.12.6) <0745D0B0-9652-3158-9C7F-3147F394BCF5>,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:5383,Modifiability,plugin,plugins,5383,0862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineWidgets.framework/Versions/5/QtWebEngineWidgets; 0x109404000 - 0x10f696fff +org.qt-project.Qt.QtWebEngineCore (5.12 - 5.12.6) <0745D0B0-9652-3158-9C7F-3147F394BCF5> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/5/QtWebEngineCore; 0x10fcbe000 - 0x10fcd3fff +org.qt-project.QtWebChannel (5.12 - 5.12.6) <199AE934-6E1A-3584-BA64-FA578128D36C> /Appli,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:8553,Modifiability,plugin,plugins,8553,10b8d000 - 0x110bf4fff +org.qt-project.QtOpenGL (6.0 - 6.0.2) <6841ACBD-A2D6-3D63-9C25-8E656776A088> /usr/local/Cellar/qt/6.0.2/lib/QtOpenGL.framework/Versions/A/QtOpenGL; 0x110c32000 - 0x1110d1fff +org.qt-project.QtWidgets (6.0 - 6.0.2) <3D939EAB-26B6-36B6-AB17-F4D0BF952EC0> /usr/local/Cellar/qt/6.0.2/lib/QtWidgets.framework/Versions/A/QtWidgets; 0x11130c000 - 0x1118a7fff +org.qt-project.QtGui (6.0 - 6.0.2) <E8A9B9CD-A135-383A-B29E-51DD6C04AB18> /usr/local/Cellar/qt/6.0.2/lib/QtGui.framework/Versions/A/QtGui; 0x111a91000 - 0x111aacfff +org.qt-project.QtXml (6.0 - 6.0.2) <626DB273-B152-3E4E-B317-A513D81BD92E> /usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:8753,Modifiability,plugin,plugins,8753,roject.QtWidgets (6.0 - 6.0.2) <3D939EAB-26B6-36B6-AB17-F4D0BF952EC0> /usr/local/Cellar/qt/6.0.2/lib/QtWidgets.framework/Versions/A/QtWidgets; 0x11130c000 - 0x1118a7fff +org.qt-project.QtGui (6.0 - 6.0.2) <E8A9B9CD-A135-383A-B29E-51DD6C04AB18> /usr/local/Cellar/qt/6.0.2/lib/QtGui.framework/Versions/A/QtGui; 0x111a91000 - 0x111aacfff +org.qt-project.QtXml (6.0 - 6.0.2) <626DB273-B152-3E4E-B317-A513D81BD92E> /usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:9159,Modifiability,plugin,plugins,9159,/usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolve,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:9378,Modifiability,plugin,plugins,9378,rk/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:9578,Modifiability,plugin,plugins,9578,der.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e000 - 0x113715fff +libSofaGeneralLoader.20.12.01.dylib (0) <1A886A0C-F187-3E49-A3A9-5EFBF7D5D475> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.20.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:10530,Modifiability,plugin,plugins,10530,ions/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e000 - 0x113715fff +libSofaGeneralLoader.20.12.01.dylib (0) <1A886A0C-F187-3E49-A3A9-5EFBF7D5D475> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.20.12.01.dylib; 0x1137f0000 - 0x11380ffff +libSofaSimulationTree.20.12.01.dylib (0) <66249FEB-F9A5-3BAB-B6DD-EC862C66D9BF> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationTree.20.12.01.dylib; 0x11384e000 - 0x113865fff +libSofaSimulationCommon.20.12.01.dylib (0) <3DD51569-5199-342A-A8DF-B58CBD4C110D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationCommon.20.12.01.dylib; 0x11388d000 - 0x113908fff +libSofaSimulationCore.20.12.01.dylib (0) <56D15C80-6C1E-38FD-902F-994337A904B7> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationCore.20.12.01.dylib; 0x1139e8000 - 0x113c3bfff +libSofaCore.20.12.01.dylib (0) <23FB6ED2-EA8E-33AC-AD18-E3E9848B2A7E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaCore.20.12.01.dylib; 0x114211000 - 0x114348fff +libSofaDefaultType.20.12.01.dylib (0) <02C0E05A-F9B8-3B94-B15C-3FDE65EF636D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaDefaultType.20.12.01.dylib; 0x1143a1000 - 0x1143d,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:48403,Modifiability,plugin,pluginkit,48403,x7fff2afe2fff libChineseTokenizer.dylib (37) <718400BF-9911-3CB6-8CCE-4C2D7C35D80A> /usr/lib/libChineseTokenizer.dylib; 0x7fff2afe3000 - 0x7fff2b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framewor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:48506,Modifiability,PlugIn,PlugInKit,48506,6-8CCE-4C2D7C35D80A> /usr/lib/libChineseTokenizer.dylib; 0x7fff2afe3000 - 0x7fff2b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation; 0x7fff2b37f000 - 0x7fff2b3ecfff co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:48537,Modifiability,PlugIn,PlugInKit,48537,b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation; 0x7fff2b37f000 - 0x7fff2b3ecfff com.apple.IconServices (479.3 - 479.3) <B6859735-701D-307E-8061-298BA2296E47> /Syste,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:1067,Performance,load,loading,1067,"ary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:29047,Performance,Perform,PerformanceAnalysis,29047, com.apple.vImage (8.1 - 544.2) <3EBF95E1-30EB-3162-A9D4-B97BE581B69F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/V,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:29154,Performance,Perform,PerformanceAnalysis,29154,1B69F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/Shared,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:29195,Performance,Perform,PerformanceAnalysis,29195,rk/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:791,Security,Integrity,Integrity,791,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:20894,Security,secur,security,20894,x7fff2178a000 - 0x7fff21876fff com.apple.LanguageModeling (1.0 - 247.1) <1A05BCD7-232F-3950-936D-EC0F95BA3FB0> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling; 0x7fff21877000 - 0x7fff219adfff com.apple.CoreDisplay (231.3 - 231.3) <6DD6A260-800F-3284-842C-8E4CB9EA47FF> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay; 0x7fff219ae000 - 0x7fff21c24fff com.apple.audio.AudioToolboxCore (1.0 - 1180.25) <DEE2C5BA-BFD1-349F-A10A-B10717BA8F7C> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore; 0x7fff21c25000 - 0x7fff21e0dfff com.apple.CoreText (677.3.0.4 - 677.3.0.4) <9A8DC9A0-1A80-3A26-ACA0-A245D3FFF921> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText; 0x7fff21e0e000 - 0x7fff224b2fff com.apple.audio.CoreAudio (5.0 - 5.0) <801E2D1E-7EA5-37DA-8F44-B6D7DD3CE5B9> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio; 0x7fff224b3000 - 0x7fff22804fff com.apple.security (7.0 - 59754.80.3) <B377D7C7-EDB6-3737-B492-E9872F4C6469> /System/Library/Frameworks/Security.framework/Versions/A/Security; 0x7fff22805000 - 0x7fff22a66fff libicucore.A.dylib (66109) <8F8D8A8B-4EE0-3C09-9F45-725A1FBDD38C> /usr/lib/libicucore.A.dylib; 0x7fff22a67000 - 0x7fff22a70fff libsystem_darwin.dylib (1439.40.11) <E016D8F7-C87F-36F8-B8A0-6A61B8E4BACB> /usr/lib/system/libsystem_darwin.dylib; 0x7fff22a71000 - 0x7fff22d58fff com.apple.CoreServices.CarbonCore (1307 - 1307) <B857EADF-D517-34E8-8053-34C0E6695250> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore; 0x7fff22d98000 - 0x7fff22dd2fff com.apple.CSStore (1122.11 - 1122.11) <89992991-8538-380B-B2B8-4EA997CBFDBE> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore; 0x7fff22dd3000 - 0x7fff22e81fff com.apple.framework.IOKit (2.0.2 - 1845.81.1) <49AC0177-35A3-3C96-AD9D-3E59923C4761> /System/Library/Frameworks/IOKit.framework/Ve,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:20988,Security,Secur,Security,20988,(1.0 - 247.1) <1A05BCD7-232F-3950-936D-EC0F95BA3FB0> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling; 0x7fff21877000 - 0x7fff219adfff com.apple.CoreDisplay (231.3 - 231.3) <6DD6A260-800F-3284-842C-8E4CB9EA47FF> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay; 0x7fff219ae000 - 0x7fff21c24fff com.apple.audio.AudioToolboxCore (1.0 - 1180.25) <DEE2C5BA-BFD1-349F-A10A-B10717BA8F7C> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore; 0x7fff21c25000 - 0x7fff21e0dfff com.apple.CoreText (677.3.0.4 - 677.3.0.4) <9A8DC9A0-1A80-3A26-ACA0-A245D3FFF921> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText; 0x7fff21e0e000 - 0x7fff224b2fff com.apple.audio.CoreAudio (5.0 - 5.0) <801E2D1E-7EA5-37DA-8F44-B6D7DD3CE5B9> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio; 0x7fff224b3000 - 0x7fff22804fff com.apple.security (7.0 - 59754.80.3) <B377D7C7-EDB6-3737-B492-E9872F4C6469> /System/Library/Frameworks/Security.framework/Versions/A/Security; 0x7fff22805000 - 0x7fff22a66fff libicucore.A.dylib (66109) <8F8D8A8B-4EE0-3C09-9F45-725A1FBDD38C> /usr/lib/libicucore.A.dylib; 0x7fff22a67000 - 0x7fff22a70fff libsystem_darwin.dylib (1439.40.11) <E016D8F7-C87F-36F8-B8A0-6A61B8E4BACB> /usr/lib/system/libsystem_darwin.dylib; 0x7fff22a71000 - 0x7fff22d58fff com.apple.CoreServices.CarbonCore (1307 - 1307) <B857EADF-D517-34E8-8053-34C0E6695250> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore; 0x7fff22d98000 - 0x7fff22dd2fff com.apple.CSStore (1122.11 - 1122.11) <89992991-8538-380B-B2B8-4EA997CBFDBE> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore; 0x7fff22dd3000 - 0x7fff22e81fff com.apple.framework.IOKit (2.0.2 - 1845.81.1) <49AC0177-35A3-3C96-AD9D-3E59923C4761> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit; 0x7fff22e82000 - 0x7fff22e8dfff libsystem_,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:21018,Security,Secur,Security,21018,Frameworks/LanguageModeling.framework/Versions/A/LanguageModeling; 0x7fff21877000 - 0x7fff219adfff com.apple.CoreDisplay (231.3 - 231.3) <6DD6A260-800F-3284-842C-8E4CB9EA47FF> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay; 0x7fff219ae000 - 0x7fff21c24fff com.apple.audio.AudioToolboxCore (1.0 - 1180.25) <DEE2C5BA-BFD1-349F-A10A-B10717BA8F7C> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore; 0x7fff21c25000 - 0x7fff21e0dfff com.apple.CoreText (677.3.0.4 - 677.3.0.4) <9A8DC9A0-1A80-3A26-ACA0-A245D3FFF921> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText; 0x7fff21e0e000 - 0x7fff224b2fff com.apple.audio.CoreAudio (5.0 - 5.0) <801E2D1E-7EA5-37DA-8F44-B6D7DD3CE5B9> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio; 0x7fff224b3000 - 0x7fff22804fff com.apple.security (7.0 - 59754.80.3) <B377D7C7-EDB6-3737-B492-E9872F4C6469> /System/Library/Frameworks/Security.framework/Versions/A/Security; 0x7fff22805000 - 0x7fff22a66fff libicucore.A.dylib (66109) <8F8D8A8B-4EE0-3C09-9F45-725A1FBDD38C> /usr/lib/libicucore.A.dylib; 0x7fff22a67000 - 0x7fff22a70fff libsystem_darwin.dylib (1439.40.11) <E016D8F7-C87F-36F8-B8A0-6A61B8E4BACB> /usr/lib/system/libsystem_darwin.dylib; 0x7fff22a71000 - 0x7fff22d58fff com.apple.CoreServices.CarbonCore (1307 - 1307) <B857EADF-D517-34E8-8053-34C0E6695250> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore; 0x7fff22d98000 - 0x7fff22dd2fff com.apple.CSStore (1122.11 - 1122.11) <89992991-8538-380B-B2B8-4EA997CBFDBE> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore; 0x7fff22dd3000 - 0x7fff22e81fff com.apple.framework.IOKit (2.0.2 - 1845.81.1) <49AC0177-35A3-3C96-AD9D-3E59923C4761> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit; 0x7fff22e82000 - 0x7fff22e8dfff libsystem_notify.dylib (279.40.4) <B2BF20C7-448A-3FBD-A2F5-AB7618D173F6> /usr/lib/syst,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37377,Security,secur,securityfoundation,37377,fff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9ff,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37481,Security,Secur,SecurityFoundation,37481,-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /u,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37521,Security,Secur,SecurityFoundation,37521,mework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /usr/lib/libbsm.0.dylib; 0x7fff29fea000 - 0x7fff2a033fff libmecab.dylib (929.1.1) <1F,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:60140,Security,secur,security,60140,) <6A293E4C-1E2D-36DA-B416-FBED7286CD6E> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration; 0x7fff2d9dc000 - 0x7fff2d9e8fff com.apple.perfdata (1.0 - 67.40.1) <A9D2E8CD-9D74-304E-BD99-A7704F3CD38B> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata; 0x7fff2d9e9000 - 0x7fff2d9f7fff libperfcheck.dylib (41) <5AFDC5C6-EBB6-33E4-9215-1AACE6C6F6EE> /usr/lib/libperfcheck.dylib; 0x7fff2d9f8000 - 0x7fff2da07fff com.apple.Kerberos (3.0 - 1) <02FFA3CA-F8AF-3211-9159-36BC29612650> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos; 0x7fff2da08000 - 0x7fff2da57fff com.apple.GSS (4.0 - 2.0) <5D06022E-C963-390A-9487-90BD1B61BC20> /System/Library/Frameworks/GSS.framework/Versions/A/GSS; 0x7fff2da58000 - 0x7fff2da68fff com.apple.CommonAuth (4.0 - 2.0) <C4418557-FA52-3B80-804F-2BC7AF760FD6> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth; 0x7fff2dabd000 - 0x7fff2dadffff com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <6F4B051F-BC33-3880-81B2-5C62DABFF02D> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle; 0x7fff2dae0000 - 0x7fff2dae8fff com.apple.CorePhoneNumbers (1.0 - 1) <AA493452-21D3-3EC6-953C-42DBF75F4EB9> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers; 0x7fff2dae9000 - 0x7fff2db74fff libTelephonyUtilDynamic.dylib (5347.1) <AB6453EB-2C1C-3A98-B56A-3C850FCE95F7> /usr/lib/libTelephonyUtilDynamic.dylib; 0x7fff2dc3d000 - 0x7fff2dc3dfff liblaunch.dylib (2038.80.3) <C7C51322-8491-3B78-9CFA-2B4753662BCF> /usr/lib/system/liblaunch.dylib; 0x7fff2e438000 - 0x7fff2e57ffff com.apple.Sharing (1579 - 1579) <4925CAB3-09C0-373C-A5D3-9BB5FF025A4F> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing; 0x7fff2e580000 - 0x7fff2e6a0fff com.apple.Bluetooth (8.0.3 - 8.0.3d9) <C6FFFDA7-CD91-339A-8529-7D094338949D> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluet,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:77725,Security,secur,securityhi,77725,0 - 0x7fff35291fff com.apple.Cocoa (6.11 - 23) <B0F6AF8E-B85C-3C5C-9812-9CD8BC07ADB2> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa; 0x7fff352dc000 - 0x7fff356bafff com.apple.AppleMediaServices (1.0 - 1) <05884581-FCFC-338C-B3CF-C9E898C12106> /System/Library/PrivateFrameworks/AppleMediaServices.framework/Versions/A/AppleMediaServices; 0x7fff35e06000 - 0x7fff35e0dfff com.apple.DisplayServicesFW (3.1 - 380) <AD6182FA-7AAD-36BB-9274-E2A577AC8D7D> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices; 0x7fff3669f000 - 0x7fff366c0fff com.apple.MarkupUI (1.0 - 383.3) <6E473754-4A39-30C6-8BC8-29012B624CE3> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI; 0x7fff366d5000 - 0x7fff366f0fff com.apple.openscripting (1.7 - 190) <E3815884-A406-3CF6-82C1-BEDC772A9081> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting; 0x7fff366f1000 - 0x7fff366f4fff com.apple.securityhi (9.0 - 55008) <F7E1C957-65AF-39E5-8BBA-9D7C7C9D30B6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI; 0x7fff366f5000 - 0x7fff366f8fff com.apple.ink.framework (10.15 - 227) <E3D118A5-7A62-3893-ADAC-E0A9F45314C9> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink; 0x7fff366f9000 - 0x7fff366fcfff com.apple.CommonPanels (1.2.6 - 101) <F46676FA-60F3-30CC-BF48-F5BB6E66E576> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels; 0x7fff366fd000 - 0x7fff36704fff com.apple.ImageCapture (1708.1 - 1708.1) <AC709D2F-7C16-3645-BB20-19DD1414E210> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture; 0x7fff36705000 - 0x7fff379adfff com.apple.JavaScriptCore (16610 - 16610.4.3.1.7) <0601A804-66EA-3973-B5F6-45731A666F4A> /System/Library/Frameworks/JavaScriptCore.framework/Versions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:77855,Security,Secur,SecurityHI,77855,/Cocoa.framework/Versions/A/Cocoa; 0x7fff352dc000 - 0x7fff356bafff com.apple.AppleMediaServices (1.0 - 1) <05884581-FCFC-338C-B3CF-C9E898C12106> /System/Library/PrivateFrameworks/AppleMediaServices.framework/Versions/A/AppleMediaServices; 0x7fff35e06000 - 0x7fff35e0dfff com.apple.DisplayServicesFW (3.1 - 380) <AD6182FA-7AAD-36BB-9274-E2A577AC8D7D> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices; 0x7fff3669f000 - 0x7fff366c0fff com.apple.MarkupUI (1.0 - 383.3) <6E473754-4A39-30C6-8BC8-29012B624CE3> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI; 0x7fff366d5000 - 0x7fff366f0fff com.apple.openscripting (1.7 - 190) <E3815884-A406-3CF6-82C1-BEDC772A9081> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting; 0x7fff366f1000 - 0x7fff366f4fff com.apple.securityhi (9.0 - 55008) <F7E1C957-65AF-39E5-8BBA-9D7C7C9D30B6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI; 0x7fff366f5000 - 0x7fff366f8fff com.apple.ink.framework (10.15 - 227) <E3D118A5-7A62-3893-ADAC-E0A9F45314C9> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink; 0x7fff366f9000 - 0x7fff366fcfff com.apple.CommonPanels (1.2.6 - 101) <F46676FA-60F3-30CC-BF48-F5BB6E66E576> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels; 0x7fff366fd000 - 0x7fff36704fff com.apple.ImageCapture (1708.1 - 1708.1) <AC709D2F-7C16-3645-BB20-19DD1414E210> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture; 0x7fff36705000 - 0x7fff379adfff com.apple.JavaScriptCore (16610 - 16610.4.3.1.7) <0601A804-66EA-3973-B5F6-45731A666F4A> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore; 0x7fff37a18000 - 0x7fff37afffff com.apple.audio.AVFAudio (1.0 - 477.11) <858A22F1-AEAA-3F39-B0,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:77887,Security,Secur,SecurityHI,77887,ff356bafff com.apple.AppleMediaServices (1.0 - 1) <05884581-FCFC-338C-B3CF-C9E898C12106> /System/Library/PrivateFrameworks/AppleMediaServices.framework/Versions/A/AppleMediaServices; 0x7fff35e06000 - 0x7fff35e0dfff com.apple.DisplayServicesFW (3.1 - 380) <AD6182FA-7AAD-36BB-9274-E2A577AC8D7D> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices; 0x7fff3669f000 - 0x7fff366c0fff com.apple.MarkupUI (1.0 - 383.3) <6E473754-4A39-30C6-8BC8-29012B624CE3> /System/Library/PrivateFrameworks/MarkupUI.framework/Versions/A/MarkupUI; 0x7fff366d5000 - 0x7fff366f0fff com.apple.openscripting (1.7 - 190) <E3815884-A406-3CF6-82C1-BEDC772A9081> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting; 0x7fff366f1000 - 0x7fff366f4fff com.apple.securityhi (9.0 - 55008) <F7E1C957-65AF-39E5-8BBA-9D7C7C9D30B6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI; 0x7fff366f5000 - 0x7fff366f8fff com.apple.ink.framework (10.15 - 227) <E3D118A5-7A62-3893-ADAC-E0A9F45314C9> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink; 0x7fff366f9000 - 0x7fff366fcfff com.apple.CommonPanels (1.2.6 - 101) <F46676FA-60F3-30CC-BF48-F5BB6E66E576> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels; 0x7fff366fd000 - 0x7fff36704fff com.apple.ImageCapture (1708.1 - 1708.1) <AC709D2F-7C16-3645-BB20-19DD1414E210> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture; 0x7fff36705000 - 0x7fff379adfff com.apple.JavaScriptCore (16610 - 16610.4.3.1.7) <0601A804-66EA-3973-B5F6-45731A666F4A> /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore; 0x7fff37a18000 - 0x7fff37afffff com.apple.audio.AVFAudio (1.0 - 477.11) <858A22F1-AEAA-3F39-B01B-A311B230FDA7> /System/Library/Frameworks/AVFoundation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:211,Testability,log,log,211,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:30818,Testability,log,loginsupport,30818,ersions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:30914,Testability,log,login,30914,FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:30952,Testability,log,loginsupport,30952,SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:30986,Testability,log,loginsupport,30986,7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7fff285a9fff libsystem_containermanager.dylib (318.80.2) <6,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37169,Testability,Assert,AssertionServices,37169,; 0x7fff29bf1000 - 0x7fff29c03fff com.apple.CoreEmoji (1.0 - 128) <D43F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37277,Testability,Assert,AssertionServices,37277,3F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:37316,Testability,Assert,AssertionServices,37316,work/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /u,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:51335,Testability,log,login,51335,4521C54> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore; 0x7fff2b8e0000 - 0x7fff2b92afff com.apple.OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.f,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:51426,Testability,log,login,51426,framework/Versions/A/FaceCore; 0x7fff2b8e0000 - 0x7fff2b92afff com.apple.OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.framework (1.0 - 98.80.2) <C257C950-F430-3762-BC72-1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:51453,Testability,log,login,51453,OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.framework (1.0 - 98.80.2) <C257C950-F430-3762-BC72-15D314D99556> /System/Library/PrivateFrameworks/WatchdogClient.framework/V,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:73030,Testability,Log,LoginUICore,73030,38.80.3) <78AF1606-37D8-3424-92AE-071A9F43AA0F> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:73127,Testability,Log,LoginUIKit,73127,ibrary/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff libHeimdalProxy.dylib (79) <85526E13-1E48-377A-A700-EE3F5,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:73170,Testability,Log,LoginUICore,73170,/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff libHeimdalProxy.dylib (79) <85526E13-1E48-377A-A700-EE3F5648A6E3> /System/Library/Frameworks/Kerberos.framework/Versions/A,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/issues/1916:73203,Testability,Log,LoginUICore,73203,f com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff libHeimdalProxy.dylib (79) <85526E13-1E48-377A-A700-EE3F5648A6E3> /System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib; 0x7fff3383f000 - 0x7fff,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916
https://github.com/sofa-framework/sofa/pull/1917:2173,Availability,failure,failures,2173,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:2222,Availability,failure,failures,2222,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:268,Energy Efficiency,reduce,reduced,268,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:455,Performance,perform,performed,455,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:1171,Performance,cache,cache,1171," to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:92,Safety,detect,detection,92,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:252,Security,access,access,252,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:1792,Security,Certificate,Certificate,1792,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:1903,Security,certificate,certificate-of-origin-dco,1903,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:439,Testability,Test,Tests,439,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:2168,Testability,test,test,2168,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1917:2217,Testability,test,test,2217,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917
https://github.com/sofa-framework/sofa/pull/1918:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1918:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1918:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1918:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1918:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1918:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1918
https://github.com/sofa-framework/sofa/pull/1919:803,Availability,failure,failures,803,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:852,Availability,failure,failures,852,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:51,Modifiability,Flexible,Flexible,51,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:422,Security,Certificate,Certificate,422,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:533,Security,certificate,certificate-of-origin-dco,533,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:798,Testability,test,test,798,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1919:847,Testability,test,test,847,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919
https://github.com/sofa-framework/sofa/pull/1920:673,Availability,failure,failures,673,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:722,Availability,failure,failures,722,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:102,Performance,load,loadable,102,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:292,Security,Certificate,Certificate,292,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:403,Security,certificate,certificate-of-origin-dco,403,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:668,Testability,test,test,668,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/pull/1920:717,Testability,test,test,717,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920
https://github.com/sofa-framework/sofa/issues/1921:342,Integrability,depend,depending,342,"EulerExplicitSolver has a Data, called d_optimizedForDiagonalMatrix, which can be set by the user. However, the information about the diagonal property of the mass matrix is already known by the mass component. EulerExplicitSolver can use this information instead of asking the user. The optimization for diagonal matrices would be automatic depending on the mass component used. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1921
https://github.com/sofa-framework/sofa/issues/1921:288,Performance,optimiz,optimization,288,"EulerExplicitSolver has a Data, called d_optimizedForDiagonalMatrix, which can be set by the user. However, the information about the diagonal property of the mass matrix is already known by the mass component. EulerExplicitSolver can use this information instead of asking the user. The optimization for diagonal matrices would be automatic depending on the mass component used. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1921
https://github.com/sofa-framework/sofa/issues/1922:231,Energy Efficiency,adapt,adapted,231,"Currently CentralDifferenceSolver assumes the provided mass is diagonal. If the user decides to work with a non-diagonal mass, the simulation will be wrong, without notifying the user. The CentralDifferenceSolver component must be adapted to work with any type of mass matrix. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1922
https://github.com/sofa-framework/sofa/issues/1922:231,Modifiability,adapt,adapted,231,"Currently CentralDifferenceSolver assumes the provided mass is diagonal. If the user decides to work with a non-diagonal mass, the simulation will be wrong, without notifying the user. The CentralDifferenceSolver component must be adapted to work with any type of mass matrix. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1922
https://github.com/sofa-framework/sofa/issues/1923:192,Energy Efficiency,adapt,adapted,192,"Implicit solvers can be optimized to compute faster if the mass matrix is diagonal. Currently this information is not used, whereas it is known by the mass component. Implicit solvers must be adapted and have a special branch for diagonal matrix for faster computation. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923
https://github.com/sofa-framework/sofa/issues/1923:192,Modifiability,adapt,adapted,192,"Implicit solvers can be optimized to compute faster if the mass matrix is diagonal. Currently this information is not used, whereas it is known by the mass component. Implicit solvers must be adapted and have a special branch for diagonal matrix for faster computation. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923
https://github.com/sofa-framework/sofa/issues/1923:24,Performance,optimiz,optimized,24,"Implicit solvers can be optimized to compute faster if the mass matrix is diagonal. Currently this information is not used, whereas it is known by the mass component. Implicit solvers must be adapted and have a special branch for diagonal matrix for faster computation. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923
https://github.com/sofa-framework/sofa/issues/1924:516,Availability,error,errors,516,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:620,Availability,error,error,620,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:685,Availability,Error,Error,685,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:827,Availability,Error,Error-Handling-in-C,827,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:175,Integrability,message,message,175,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:291,Integrability,depend,dependency,291,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/issues/1924:353,Integrability,message,message,353,"Summary:; The issue started from the fact that the inversion of Matrix returns a boolean to inform the user if the matrix has been effectively inverted or not, and displays a message in the Messaging console.; A lot of bad points:; - almost nobody checks the return value,; - the really bad dependency on the Messaging system in a core component; - the message itself does not really say **who** could not invert the matrix; ; More generally this emphasizes the lack of a harmonious way to inform the user to handle errors, and how to be sure the user does something with it. The common way to do it in the industry:; - error codes,; - exception,; - the 'expected' idiom : [Systematic Error Handling in C++ by Dr. Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C) ,; - for sure there are many more, feel free to tell in this issue. All of them have their cons and their pros, but I wont explain here (lots of blogs are better than me ;); - https://ned14.github.io/outcome/motivation/; - https://bell0bytes.eu/expected/; - https://foonathan.net/2017/12/exceptions-vs-expected/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1924
https://github.com/sofa-framework/sofa/pull/1925:27,Availability,error,error,27,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:240,Availability,Error,Error-Handling-in-C,240,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:1091,Availability,failure,failures,1091,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:1140,Availability,failure,failures,1140,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:710,Security,Certificate,Certificate,710,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:821,Security,certificate,certificate-of-origin-dco,821,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:1086,Testability,test,test,1086,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:1135,Testability,test,test,1135,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1925:264,Usability,clear,clear,264,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925
https://github.com/sofa-framework/sofa/pull/1926:144,Availability,error,error,144,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:1091,Availability,failure,failures,1091,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:1140,Availability,failure,failures,1140,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:308,Deployability,Update,UpdateBoundingBoxVisitor,308,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:493,Modifiability,variab,variable,493,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:532,Modifiability,variab,variable,532,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:90,Safety,avoid,avoid,90,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:710,Security,Certificate,Certificate,710,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:821,Security,certificate,certificate-of-origin-dco,821,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:1086,Testability,test,test,1086,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1926:1135,Testability,test,test,1135,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926
https://github.com/sofa-framework/sofa/pull/1927:865,Availability,failure,failures,865,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:914,Availability,failure,failures,914,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:24,Energy Efficiency,schedul,scheduler,24,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:184,Energy Efficiency,schedul,scheduler,184,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:248,Energy Efficiency,schedul,scheduler,248,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:484,Security,Certificate,Certificate,484,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:595,Security,certificate,certificate-of-origin-dco,595,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:63,Testability,test,tests,63,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:860,Testability,test,test,860,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1927:909,Testability,test,test,909,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927
https://github.com/sofa-framework/sofa/pull/1928:1015,Availability,failure,failures,1015,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:1064,Availability,failure,failures,1064,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:240,Deployability,Pipeline,Pipeline,240,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:10,Integrability,depend,dependencies,10,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:634,Security,Certificate,Certificate,634,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:745,Security,certificate,certificate-of-origin-dco,745,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:1010,Testability,test,test,1010,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1928:1059,Testability,test,test,1059,"Last soft dependencies (headers) in SofaCore:; - BaseContext just needs a forward declaration from Visitor (allowing removal of simulation/fwd.h); - ScriptEvent to use BaseNode from core instead of Node; - removing a large chunk of code in Pipeline (disabled with ```if 0``` since [a commit 14 (!) years ago](https://github.com/fredroy/sofa/commit/d29dc273dbf3c434a2de5434f39cfcee68ee8e24) whose goal was to do the same as this commit !); - some cleaning here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928
https://github.com/sofa-framework/sofa/pull/1929:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1929:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1929:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1929:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1929:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1929:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1929
https://github.com/sofa-framework/sofa/pull/1930:144,Availability,error,error,144,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:1091,Availability,failure,failures,1091,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:1140,Availability,failure,failures,1140,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:308,Deployability,Update,UpdateBoundingBoxVisitor,308,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:493,Modifiability,variab,variable,493,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:532,Modifiability,variab,variable,532,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:90,Safety,avoid,avoid,90,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:710,Security,Certificate,Certificate,710,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:821,Security,certificate,certificate-of-origin-dco,821,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:1086,Testability,test,test,1086,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1930:1135,Testability,test,test,1135,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1930
https://github.com/sofa-framework/sofa/pull/1932:728,Availability,failure,failures,728,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1932:777,Availability,failure,failures,777,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1932:347,Security,Certificate,Certificate,347,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1932:458,Security,certificate,certificate-of-origin-dco,458,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1932:723,Testability,test,test,723,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1932:772,Testability,test,test,772,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932
https://github.com/sofa-framework/sofa/pull/1933:599,Availability,failure,failures,599,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/pull/1933:648,Availability,failure,failures,648,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/pull/1933:218,Security,Certificate,Certificate,218,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/pull/1933:329,Security,certificate,certificate-of-origin-dco,329,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/pull/1933:594,Testability,test,test,594,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/pull/1933:643,Testability,test,test,643,"Some files had either no licence or a wrong one (GPL). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1933
https://github.com/sofa-framework/sofa/issues/1934:408,Testability,log,log,408,"Issue description copied from SOFA Forum; https://www.sofa-framework.org/community/forum/topic/using-navigation-recorded-camera/. I have been trying to use the following scene:; https://github.com/sofa-framework/sofa/blob/master/examples/Components/visualmodel/NavigationRecordedCamera.scn. But it does not appear to work. The recorded camera node in the application shows a warning icon, with the following log on the console:; `[WARNING] [RecordedCamera(recordedCamera0)] Too many missing parameters; taking default ...; `; SO, assuming the default parameters should work fine for the scene.; I referred to the documentation provided here: https://www.sofa-framework.org/community/doc/components/ui/recorded-camera/; Which says I need to record at least two viewpoints, and one can do that using Mouse Manager. I do that by assigning mouse controls to appropriate actions. Left: For viewpoint recording; Right: To start navigation. However, I don’t see anything happening, when I run the Animation and use the left mouse to record viewpoint, at least two orientations, and then right-click to run the navigation. Any input on how to use a navigated recorded camera will be of great help. @hugtalbot",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1934
https://github.com/sofa-framework/sofa/issues/1935:6,Modifiability,inherit,inheriting,6,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935
https://github.com/sofa-framework/sofa/issues/1935:0,Testability,Test,Tests,0,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935
https://github.com/sofa-framework/sofa/issues/1935:57,Testability,test,tests,57,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935
https://github.com/sofa-framework/sofa/issues/1935:359,Testability,test,tests,359,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935
https://github.com/sofa-framework/sofa/issues/1936:97,Performance,Load,LoadFromFile,97,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:182,Performance,Load,LoadFromFile,182,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:210,Performance,Load,Load,210,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:235,Performance,load,loadSceneFile,235,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:461,Performance,load,load,461,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:569,Performance,Load,Load,569,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:592,Performance,load,loadSceneFile,592,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/issues/1936:0,Testability,Test,Tested,0,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936
https://github.com/sofa-framework/sofa/pull/1937:681,Availability,failure,failures,681,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1937:730,Availability,failure,failures,730,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1937:300,Security,Certificate,Certificate,300,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1937:411,Security,certificate,certificate-of-origin-dco,411,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1937:676,Testability,test,test,676,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1937:725,Testability,test,test,725,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937
https://github.com/sofa-framework/sofa/pull/1938:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1938:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1938:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1938:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1938:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1938:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1938
https://github.com/sofa-framework/sofa/pull/1939:757,Availability,failure,failures,757,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1939:806,Availability,failure,failures,806,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1939:376,Security,Certificate,Certificate,376,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1939:487,Security,certificate,certificate-of-origin-dco,487,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1939:752,Testability,test,test,752,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1939:801,Testability,test,test,801,"The initialization of the data disappeared at some point in the past 🤥; This PR restores it. Credits to:; - [InSimo](https://github.com/InSimo)(@JeremieA , @fjourdes ) ; - @remibessard who reported it back to us. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1939
https://github.com/sofa-framework/sofa/pull/1940:600,Availability,failure,failures,600,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1940:649,Availability,failure,failures,649,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1940:219,Security,Certificate,Certificate,219,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1940:330,Security,certificate,certificate-of-origin-dco,330,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1940:595,Testability,test,test,595,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1940:644,Testability,test,test,644,"This should fix CI ""minimal"" nightly builds :ok_hand: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940
https://github.com/sofa-framework/sofa/pull/1941:1390,Availability,failure,failures,1390,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:1439,Availability,failure,failures,1439,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:619,Integrability,depend,dependency,619,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:129,Modifiability,plugin,plugins,129,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:283,Modifiability,Plugin,Plugin,283,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:328,Modifiability,Plugin,PluginManager,328,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:402,Modifiability,Plugin,Plugin,402,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:519,Modifiability,Plugin,PluginManager,519,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:756,Modifiability,Plugin,Plugin,756,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:314,Performance,load,loaded,314,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:505,Performance,load,loaded,505,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:568,Performance,load,loaded,568,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:594,Performance,load,loaded,594,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:1009,Security,Certificate,Certificate,1009,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:1120,Security,certificate,certificate-of-origin-dco,1120,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:1385,Testability,test,test,1385,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:1434,Testability,test,test,1434,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1941:804,Usability,simpl,simple,804,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941
https://github.com/sofa-framework/sofa/pull/1942:661,Availability,failure,failures,661,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/pull/1942:710,Availability,failure,failures,710,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/pull/1942:280,Security,Certificate,Certificate,280,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/pull/1942:391,Security,certificate,certificate-of-origin-dco,391,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/pull/1942:656,Testability,test,test,656,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/pull/1942:705,Testability,test,test,705,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942
https://github.com/sofa-framework/sofa/issues/1943:61,Availability,error,error,61,I've installed the sofa for windows just now. But there's an error:. ![image](https://user-images.githubusercontent.com/30407833/111863168-229cab00-896f-11eb-9800-27134da3b722.png). What's the problem?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943
https://github.com/sofa-framework/sofa/issues/1943:5,Deployability,install,installed,5,I've installed the sofa for windows just now. But there's an error:. ![image](https://user-images.githubusercontent.com/30407833/111863168-229cab00-896f-11eb-9800-27134da3b722.png). What's the problem?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1943
https://github.com/sofa-framework/sofa/pull/1944:969,Availability,failure,failures,969,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:1018,Availability,failure,failures,1018,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:385,Deployability,configurat,configuration,385,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:120,Modifiability,maintainab,maintainability,120,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:385,Modifiability,config,configuration,385,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:163,Performance,load,loaded,163,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:588,Security,Certificate,Certificate,588,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:699,Security,certificate,certificate-of-origin-dco,699,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:399,Testability,test,tested,399,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:964,Testability,test,test,964,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:1013,Testability,test,test,1013,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/pull/1944:111,Usability,simpl,simplify,111,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944
https://github.com/sofa-framework/sofa/issues/1945:86,Performance,optimiz,optimization,86,"Hi @damienmarchal it seems that the code of the #1046 (merged in #1048) was making an optimization when the DetectionOutput was already here, to save the barycentric coordinates of the contact point to avoid computing it again (and then call the _addPointInLine()_ function). Is this correct @fjourdes?; Do you think it was worth keeping?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1945
https://github.com/sofa-framework/sofa/issues/1945:108,Safety,Detect,DetectionOutput,108,"Hi @damienmarchal it seems that the code of the #1046 (merged in #1048) was making an optimization when the DetectionOutput was already here, to save the barycentric coordinates of the contact point to avoid computing it again (and then call the _addPointInLine()_ function). Is this correct @fjourdes?; Do you think it was worth keeping?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1945
https://github.com/sofa-framework/sofa/issues/1945:202,Safety,avoid,avoid,202,"Hi @damienmarchal it seems that the code of the #1046 (merged in #1048) was making an optimization when the DetectionOutput was already here, to save the barycentric coordinates of the contact point to avoid computing it again (and then call the _addPointInLine()_ function). Is this correct @fjourdes?; Do you think it was worth keeping?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1945
https://github.com/sofa-framework/sofa/pull/1946:822,Availability,failure,failures,822,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:871,Availability,failure,failures,871,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:229,Deployability,update,updates,229,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:441,Security,Certificate,Certificate,441,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:552,Security,certificate,certificate-of-origin-dco,552,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:817,Testability,test,test,817,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1946:866,Testability,test,test,866,"It was deemed too bothersome to have a subdirectory for the types similar to the stl (aka ""stdtypes"").; This fact is already indicated with the lowercase classname (and filename) anyway. This PR just remove the subdirectory (and updates the corresponding namespaces and paths). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1946
https://github.com/sofa-framework/sofa/pull/1947:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1947:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1947:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1947:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1947:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1947:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947
https://github.com/sofa-framework/sofa/pull/1948:675,Availability,failure,failures,675,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1948:724,Availability,failure,failures,724,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1948:294,Security,Certificate,Certificate,294,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1948:405,Security,certificate,certificate-of-origin-dco,405,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1948:670,Testability,test,test,670,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1948:719,Testability,test,test,719,"Spotted by https://www.sofa-framework.org/community/forum/topic/export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1948
https://github.com/sofa-framework/sofa/pull/1949:64,Availability,error,error-in-first-launch-of-sofa-after-installation,64,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:767,Availability,failure,failures,767,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:816,Availability,failure,failures,816,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:100,Deployability,install,installation,100,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:162,Deployability,install,installed,162,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:386,Security,Certificate,Certificate,386,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:497,Security,certificate,certificate-of-origin-dco,497,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:762,Testability,test,test,762,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1949:811,Testability,test,test,811,"Spotted by https://www.sofa-framework.org/community/forum/topic/error-in-first-launch-of-sofa-after-installation/; `resources` and `translations` folders are not installed where they should.; TODO: backport this in v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1949
https://github.com/sofa-framework/sofa/pull/1950:738,Availability,failure,failures,738,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:787,Availability,failure,failures,787,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:12,Modifiability,variab,variables,12,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:162,Modifiability,variab,variable,162,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:357,Security,Certificate,Certificate,357,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:468,Security,certificate,certificate-of-origin-dco,468,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:733,Testability,test,test,733,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1950:782,Testability,test,test,782,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950
https://github.com/sofa-framework/sofa/pull/1951:826,Availability,failure,failures,826,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:875,Availability,failure,failures,875,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:4,Modifiability,variab,variables,4,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:129,Modifiability,variab,variable,129,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:201,Modifiability,variab,variables,201,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:445,Security,Certificate,Certificate,445,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:556,Security,certificate,certificate-of-origin-dco,556,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:821,Testability,test,test,821,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1951:870,Testability,test,test,870,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951
https://github.com/sofa-framework/sofa/pull/1952:847,Availability,failure,failures,847,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:896,Availability,failure,failures,896,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:466,Security,Certificate,Certificate,466,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:577,Security,certificate,certificate-of-origin-dco,577,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:842,Testability,test,test,842,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:891,Testability,test,test,891,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1952:216,Usability,clear,clearer,216,"This operator is not defined for RGBAColor. However, the compilator; somehow found a suitable operator in Vec.h, probably through implicit; conversion (?). This commit does not fix the compilation, but makes; things clearer. It also help the IDE to find the path to the operator; (it could not before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1952
https://github.com/sofa-framework/sofa/pull/1953:592,Availability,failure,failures,592,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1953:641,Availability,failure,failures,641,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1953:211,Security,Certificate,Certificate,211,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1953:322,Security,certificate,certificate-of-origin-dco,322,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1953:587,Testability,test,test,587,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1953:636,Testability,test,test,636,"It could be confused with sofa::helper::read(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1953
https://github.com/sofa-framework/sofa/pull/1954:611,Availability,failure,failures,611,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1954:660,Availability,failure,failures,660,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1954:230,Security,Certificate,Certificate,230,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1954:341,Security,certificate,certificate-of-origin-dco,341,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1954:606,Testability,test,test,606,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1954:655,Testability,test,test,655,"SOFA_COMPONENT_MISC_WRITESTATE_H was already used in WriteState.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1954
https://github.com/sofa-framework/sofa/pull/1955:745,Availability,failure,failures,745,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:794,Availability,failure,failures,794,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:116,Safety,avoid,avoids,116,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:364,Security,Certificate,Certificate,364,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:475,Security,certificate,certificate-of-origin-dco,475,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:740,Testability,test,test,740,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1955:789,Testability,test,test,789,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955
https://github.com/sofa-framework/sofa/pull/1956:636,Availability,failure,failures,636,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:685,Availability,failure,failures,685,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:5,Modifiability,variab,variable,5,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:255,Security,Certificate,Certificate,255,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:366,Security,certificate,certificate-of-origin-dco,366,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:631,Testability,test,test,631,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1956:680,Testability,test,test,680,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956
https://github.com/sofa-framework/sofa/pull/1957:784,Availability,failure,failures,784,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1957:833,Availability,failure,failures,833,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1957:403,Security,Certificate,Certificate,403,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1957:514,Security,certificate,certificate-of-origin-dco,514,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1957:779,Testability,test,test,779,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1957:828,Testability,test,test,828,"The struct Operation was defined twice in two different files while; having the same implementation. It can be factorized into a single; implementation. The name Operation has been changed to; CenterOfMassMappingOperation for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1957
https://github.com/sofa-framework/sofa/pull/1958:624,Availability,failure,failures,624,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:673,Availability,failure,failures,673,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:0,Safety,Avoid,Avoid,0,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:243,Security,Certificate,Certificate,243,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:354,Security,certificate,certificate-of-origin-dco,354,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:619,Testability,test,test,619,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1958:668,Testability,test,test,668,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958
https://github.com/sofa-framework/sofa/pull/1959:703,Availability,failure,failures,703,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1959:752,Availability,failure,failures,752,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1959:322,Security,Certificate,Certificate,322,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1959:433,Security,certificate,certificate-of-origin-dco,433,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1959:698,Testability,test,test,698,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1959:747,Testability,test,test,747,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959
https://github.com/sofa-framework/sofa/pull/1960:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1960:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1960:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1960:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1960:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1960:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1960
https://github.com/sofa-framework/sofa/pull/1961:555,Availability,failure,failure,555,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:2185,Availability,failure,failures,2185,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:2234,Availability,failure,failures,2234,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:984,Energy Efficiency,green,green,984," your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:760,Integrability,depend,depends-on,760,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:1323,Security,access,access,1323,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:1804,Security,Certificate,Certificate,1804,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:1915,Security,certificate,certificate-of-origin-dco,1915,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:421,Testability,test,test,421,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:523,Testability,test,tests,523,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:841,Testability,test,test,841,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:2180,Testability,test,test,2180,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1961:2229,Testability,test,test,2229,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961
https://github.com/sofa-framework/sofa/pull/1962:3085,Availability,failure,failures,3085,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:3134,Availability,failure,failures,3134,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:1485,Modifiability,variab,variables,1485,", they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternativ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:1922,Modifiability,variab,variables,1922,"ks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2453,Modifiability,variab,variables,2453,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:905,Performance,concurren,concurrent,905,"### Context. All instances of the derived classes of `BaseMechanicalVisitor` execute the same functions `processNodeTopDown` and `processNodeBottomUp`, defined in the base class, and are generally **not** overriden. In the functions `processNodeTopDown` and `processNodeBottomUp`, a set of other functions are executed. They have a prefix _fwd_ if they are executed in `processNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived cla",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:1320,Performance,race condition,race conditions,1320,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2146,Performance,race condition,race conditions,2146,"k on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2380,Performance,tune,tune,2380,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:1349,Safety,avoid,avoided,1349,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2128,Safety,Avoid,Avoid,2128,"k on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2704,Security,Certificate,Certificate,2704,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2815,Security,certificate,certificate-of-origin-dco,2815,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:3080,Testability,test,test,3080,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:3129,Testability,test,test,3129,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1962:2214,Usability,Simpl,Simple,2214,"k on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962
https://github.com/sofa-framework/sofa/pull/1963:3388,Availability,failure,failures,3388,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:3437,Availability,failure,failures,3437,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:2131,Modifiability,inherit,inherits,2131,"visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; __",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:2540,Modifiability,inherit,inheritance,2540,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:905,Performance,concurren,concurrent,905,"### Context. All instances of the derived classes of `BaseMechanicalVisitor` execute the same functions `processNodeTopDown` and `processNodeBottomUp`, defined in the base class, and are generally **not** overriden. In the functions `processNodeTopDown` and `processNodeBottomUp`, a set of other functions are executed. They have a prefix _fwd_ if they are executed in `processNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:1320,Performance,race condition,race conditions,1320,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just hav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:2459,Performance,race condition,race conditions,2459,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:1349,Safety,avoid,avoided,1349,"ocessNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just hav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:2441,Safety,Avoid,Avoid,2441,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:2556,Safety,avoid,avoid,2556,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:3007,Security,Certificate,Certificate,3007,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:3118,Security,certificate,certificate-of-origin-dco,3118,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:3383,Testability,test,test,3383,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1963:3432,Testability,test,test,3432,"TopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963
https://github.com/sofa-framework/sofa/pull/1964:1583,Availability,failure,failures,1583,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:1632,Availability,failure,failures,1632,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:523,Deployability,release,release,523,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:551,Deployability,release,release,551,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:583,Deployability,release,release,583,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:617,Deployability,release,release,617,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:954,Deployability,deploy,deployed,954,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:727,Energy Efficiency,reduce,reduce,727,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:187,Performance,perform,performance,187,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:696,Safety,detect,detect,696,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:1202,Security,Certificate,Certificate,1202,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:1313,Security,certificate,certificate-of-origin-dco,1313,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:6,Testability,test,test,6,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:1578,Testability,test,test,1578,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1964:1627,Testability,test,test,1627,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964
https://github.com/sofa-framework/sofa/pull/1969:574,Availability,failure,failures,574,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1969:623,Availability,failure,failures,623,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1969:193,Security,Certificate,Certificate,193,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1969:304,Security,certificate,certificate-of-origin-dco,304,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1969:569,Testability,test,test,569,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1969:618,Testability,test,test,618,"`#pragma once` in a cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1969
https://github.com/sofa-framework/sofa/pull/1970:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1970:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1970:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1970:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1970:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1970:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1970
https://github.com/sofa-framework/sofa/pull/1971:839,Availability,failure,failures,839,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:888,Availability,failure,failures,888,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:107,Deployability,update,update,107,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:265,Deployability,update,update,265,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:458,Security,Certificate,Certificate,458,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:569,Security,certificate,certificate-of-origin-dco,569,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:834,Testability,test,test,834,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1971:883,Testability,test,test,883,"This will remove the warning: ""Data alone linked"". Note for myself for this loop:; Possible duplication in update mechanism as Data<m_changeList> is set to dirty when a toplogyChange is added and at the same time PointSetTopologyContainer handle the topologyEngine update manually in this loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1971
https://github.com/sofa-framework/sofa/pull/1972:950,Availability,failure,failures,950,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:999,Availability,failure,failures,999,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:21,Modifiability,inherit,inherits,21,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:67,Modifiability,inherit,inherits,67,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:569,Security,Certificate,Certificate,569,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:680,Security,certificate,certificate-of-origin-dco,680,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:945,Testability,test,test,945,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1972:994,Testability,test,test,994,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972
https://github.com/sofa-framework/sofa/pull/1973:778,Availability,failure,failures,778,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1973:827,Availability,failure,failures,827,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1973:397,Security,Certificate,Certificate,397,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1973:508,Security,certificate,certificate-of-origin-dco,508,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1973:773,Testability,test,test,773,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1973:822,Testability,test,test,822,"Removing element from TriangleModel (using the mouse) when an Hexa2TetraTopologicalmapping is in the scene was not possible because of a searchRoot even if the mapping has nothing to see with the current topology being manipulated. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1973
https://github.com/sofa-framework/sofa/pull/1976:600,Availability,failure,failures,600,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1976:649,Availability,failure,failures,649,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1976:219,Security,Certificate,Certificate,219,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1976:330,Security,certificate,certificate-of-origin-dco,330,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1976:595,Testability,test,test,595,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1976:644,Testability,test,test,644,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976
https://github.com/sofa-framework/sofa/pull/1977:1144,Availability,failure,failures,1144,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:1193,Availability,failure,failures,1193,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:313,Performance,perform,performed,313,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:763,Security,Certificate,Certificate,763,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:874,Security,certificate,certificate-of-origin-dco,874,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:1139,Testability,test,test,1139,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1977:1188,Testability,test,test,1188,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977
https://github.com/sofa-framework/sofa/pull/1978:658,Availability,failure,failures,658,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:707,Availability,failure,failures,707,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:61,Deployability,update,update,61,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:277,Security,Certificate,Certificate,277,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:388,Security,certificate,certificate-of-origin-dco,388,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:653,Testability,test,test,653,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1978:702,Testability,test,test,702,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978
https://github.com/sofa-framework/sofa/pull/1979:642,Availability,failure,failures,642,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:691,Availability,failure,failures,691,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:83,Deployability,update,updated,83,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:5,Safety,avoid,avoid,5,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:261,Security,Certificate,Certificate,261,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:372,Security,certificate,certificate-of-origin-dco,372,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:637,Testability,test,test,637,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1979:686,Testability,test,test,686,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979
https://github.com/sofa-framework/sofa/pull/1980:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1980:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1980:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1980:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1980:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1980:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1980
https://github.com/sofa-framework/sofa/pull/1981:953,Availability,failure,failures,953,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:1002,Availability,failure,failures,1002,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:395,Safety,avoid,avoids,395,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:572,Security,Certificate,Certificate,572,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:683,Security,certificate,certificate-of-origin-dco,683,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:948,Testability,test,test,948,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1981:997,Testability,test,test,997,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981
https://github.com/sofa-framework/sofa/pull/1982:188,Availability,error,errors,188,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:970,Availability,failure,failures,970,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:1019,Availability,failure,failures,1019,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:30,Safety,detect,detected,30,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:589,Security,Certificate,Certificate,589,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:700,Security,certificate,certificate-of-origin-dco,700,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:965,Testability,test,test,965,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1982:1014,Testability,test,test,1014,"I don't know why this was not detected from a long time (compiler options for sure) but I stumbled on multiple definitions with MultiMapping with a custom compilation with gcc.; And these errors are perfectly fine as the header of MultiMapping is instancing directly various versions of MultiMapping (instead of only declaring them). This PR fixes it and the header only declares them now (and does not instantiate directly). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1982
https://github.com/sofa-framework/sofa/pull/1983:808,Availability,failure,failures,808,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1983:857,Availability,failure,failures,857,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1983:427,Security,Certificate,Certificate,427,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1983:538,Security,certificate,certificate-of-origin-dco,538,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1983:803,Testability,test,test,803,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1983:852,Testability,test,test,852,"Title says all. - UnitTest is completely unused and deprecated (thats why I did not set a compat file); - I was trying to remove FnDispatcher but it is actually used in SolverMerger (is it useful?). Also, **a lot of classes** were including it for nothing at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1983
https://github.com/sofa-framework/sofa/pull/1984:188,Availability,error,errors,188,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:763,Availability,failure,failures,763,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:812,Availability,failure,failures,812,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:382,Security,Certificate,Certificate,382,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:493,Security,certificate,certificate-of-origin-dco,493,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:758,Testability,test,test,758,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1984:807,Testability,test,test,807,"I was trying to compile with CLang on Windows to see if it could increase the perfomance (spoiler: it does not).; Clang is really strict with the export/import symbol system so I got some errors I cannot get with MSVC. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1984
https://github.com/sofa-framework/sofa/pull/1985:1048,Availability,failure,failures,1048,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1985:1097,Availability,failure,failures,1097,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1985:667,Security,Certificate,Certificate,667,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1985:778,Security,certificate,certificate-of-origin-dco,778,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1985:1043,Testability,test,test,1043,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1985:1092,Testability,test,test,1092,"It started by removing the X versions of the constructor and the make_array functions (with X arguments); And afterwards, decided to come a bit closer to the std::array implementation. Mostly, using more std11-14-17 features (forwarding, fold expression, parameter pack, constexpr...) in fixed_array which is quite old (actually it seems that fixed_array comes from the time being a draft/proposal for the std::array class of the STL). In the future, it should be removed to use only std::array I think. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1985
https://github.com/sofa-framework/sofa/pull/1986:551,Availability,failure,failures,551,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1986:600,Availability,failure,failures,600,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1986:170,Security,Certificate,Certificate,170,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1986:281,Security,certificate,certificate-of-origin-dco,281,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1986:546,Testability,test,test,546,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1986:595,Testability,test,test,595,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986
https://github.com/sofa-framework/sofa/pull/1987:1203,Availability,failure,failures,1203,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:1252,Availability,failure,failures,1252,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:621,Deployability,patch,patching,621,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:156,Integrability,Message,MessageDispatcher,156,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:309,Integrability,depend,dependency,309,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:535,Security,expose,exposed,535,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:822,Security,Certificate,Certificate,822,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:933,Security,certificate,certificate-of-origin-dco,933,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:36,Testability,test,tests,36,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:68,Testability,test,tests,68,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:1198,Testability,test,test,1198,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1987:1247,Testability,test,test,1247,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987
https://github.com/sofa-framework/sofa/pull/1988:826,Availability,failure,failures,826,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:875,Availability,failure,failures,875,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:445,Security,Certificate,Certificate,445,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:556,Security,certificate,certificate-of-origin-dco,556,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:83,Testability,test,test,83,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:266,Testability,test,tests,266,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:821,Testability,test,test,821,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1988:870,Testability,test,test,870,"SofaSimulationGraph_test was disabled since a month, this PR restores it.; (1 unit test is failing but it is on purpose). One file from SofaSimulationCore has been moved directly to SofaSimulationGraph_test, as it is only used by it and is completely related to the tests anyway. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1988
https://github.com/sofa-framework/sofa/pull/1989:1221,Availability,failure,failures,1221,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1989:1270,Availability,failure,failures,1270,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1989:840,Security,Certificate,Certificate,840,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1989:951,Security,certificate,certificate-of-origin-dco,951,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1989:1216,Testability,test,test,1216,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1989:1265,Testability,test,test,1265,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989
https://github.com/sofa-framework/sofa/pull/1990:869,Availability,error,error,869,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1645,Availability,failure,failures,1645,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1694,Availability,failure,failures,1694,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:184,Deployability,configurat,configuration,184,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1045,Deployability,install,install,1045,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:210,Integrability,depend,dependency,210,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:336,Integrability,depend,dependencies,336,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:184,Modifiability,config,configuration,184,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:297,Modifiability,Config,Config,297,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1069,Modifiability,Config,Config,1069,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1264,Security,Certificate,Certificate,1264,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1375,Security,certificate,certificate-of-origin-dco,1375,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:512,Testability,log,logical,512,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1640,Testability,test,test,1640,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:1689,Testability,test,test,1689,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1990:495,Usability,clear,clearer,495,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990
https://github.com/sofa-framework/sofa/pull/1991:603,Availability,failure,failures,603,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1991:652,Availability,failure,failures,652,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1991:222,Security,Certificate,Certificate,222,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1991:333,Security,certificate,certificate-of-origin-dco,333,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1991:598,Testability,test,test,598,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1991:647,Testability,test,test,647,"InitPerThreadDataTask is not used. I suggest to remove it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1991
https://github.com/sofa-framework/sofa/pull/1992:684,Availability,failure,failures,684,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1992:733,Availability,failure,failures,733,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1992:303,Security,Certificate,Certificate,303,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1992:414,Security,certificate,certificate-of-origin-dco,414,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1992:679,Testability,test,test,679,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1992:728,Testability,test,test,728,"Split the content of MechanicalMatrixVisitor in separated files.; The files are located in a subdirectory called mechanicalvisitor/. #1989; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1992
https://github.com/sofa-framework/sofa/pull/1993:639,Availability,failure,failures,639,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1993:688,Availability,failure,failures,688,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1993:258,Security,Certificate,Certificate,258,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1993:369,Security,certificate,certificate-of-origin-dco,369,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1993:634,Testability,test,test,634,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1993:683,Testability,test,test,683,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993
https://github.com/sofa-framework/sofa/pull/1994:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1994:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1994:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1994:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1994:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1994:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1994
https://github.com/sofa-framework/sofa/pull/1995:741,Availability,failure,failures,741,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:790,Availability,failure,failures,790,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:168,Integrability,depend,dependency,168,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:360,Security,Certificate,Certificate,360,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:471,Security,certificate,certificate-of-origin-dco,471,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:736,Testability,test,test,736,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1995:785,Testability,test,test,785,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995
https://github.com/sofa-framework/sofa/pull/1996:1641,Availability,failure,failures,1641,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:1690,Availability,failure,failures,1690,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:559,Integrability,message,messages,559,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:949,Integrability,message,message,949,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:4,Performance,optimiz,optimizations,4,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:281,Performance,Optimiz,Optimize,281,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:1260,Security,Certificate,Certificate,1260,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:1371,Security,certificate,certificate-of-origin-dco,1371,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:584,Testability,test,test,584,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:1636,Testability,test,test,1636,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1996:1685,Testability,test,test,1685,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996
https://github.com/sofa-framework/sofa/pull/1997:717,Availability,failure,failures,717,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1997:766,Availability,failure,failures,766,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1997:336,Security,Certificate,Certificate,336,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1997:447,Security,certificate,certificate-of-origin-dco,447,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1997:712,Testability,test,test,712,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1997:761,Testability,test,test,761,"Set worker threads to idle state when there are no more tasks to execute.; It should fix the problem of the CPU busy when the simulation is not running raised in PR #1862 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1997
https://github.com/sofa-framework/sofa/pull/1998:794,Availability,failure,failures,794,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:843,Availability,failure,failures,843,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:413,Security,Certificate,Certificate,413,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:524,Security,certificate,certificate-of-origin-dco,524,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:5,Testability,test,tests,5,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:57,Testability,Test,Testing,57,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:154,Testability,test,tests,154,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:789,Testability,test,test,789,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1998:838,Testability,test,test,838,"Some tests are in a wrong place since Sofa.Type and Sofa.Testing have been created; they were still in SofaHelper and SofaDefaulttype. This PR moves some tests in their respective folders (and create their respective ${project}_test target as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1998
https://github.com/sofa-framework/sofa/pull/1999:1162,Availability,failure,failures,1162,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:1211,Availability,failure,failures,1211,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:296,Modifiability,variab,variables,296,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:599,Performance,perform,performances,599,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:781,Security,Certificate,Certificate,781,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:892,Security,certificate,certificate-of-origin-dco,892,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:1157,Testability,test,test,1157,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:1206,Testability,test,test,1206,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:325,Usability,simpl,simple,325,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/1999:371,Usability,simpl,simple,371,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999
https://github.com/sofa-framework/sofa/pull/2000:1591,Availability,failure,failures,1591,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1640,Availability,failure,failures,1640,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:270,Modifiability,plugin,plugins,270,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:745,Modifiability,config,config,745,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:855,Safety,avoid,avoid,855,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1210,Security,Certificate,Certificate,1210,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1321,Security,certificate,certificate-of-origin-dco,1321,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:44,Testability,test,tests,44,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:66,Testability,test,test,66,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:206,Testability,test,testing,206,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:662,Testability,Test,Testing,662,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:706,Testability,test,test,706,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:737,Testability,Test,Testing,737,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1032,Testability,test,tests,1032,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1586,Testability,test,test,1586,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2000:1635,Testability,test,test,1635,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000
https://github.com/sofa-framework/sofa/pull/2001:1344,Availability,down,down,1344," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1956,Availability,failure,failures,1956," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:2005,Availability,failure,failures,2005," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:842,Modifiability,variab,variables,842,"~~_This PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:859,Modifiability,config,config,859,"~~_This PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:914,Modifiability,variab,variable,914,"~~_This PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:955,Modifiability,variab,variables,955," PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1058,Modifiability,plugin,plugins,1058," PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1575,Security,Certificate,Certificate,1575," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1686,Security,certificate,certificate-of-origin-dco,1686," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1236,Testability,Test,Tested,1236," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:1951,Testability,test,test,1951," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2001:2000,Testability,test,test,2000," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001
https://github.com/sofa-framework/sofa/pull/2002:835,Availability,failure,failures,835,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/pull/2002:884,Availability,failure,failures,884,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/pull/2002:454,Security,Certificate,Certificate,454,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/pull/2002:565,Security,certificate,certificate-of-origin-dco,565,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/pull/2002:830,Testability,test,test,830,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/pull/2002:879,Testability,test,test,879,"`WorkerThread` class was defined in _DefaultTaskScheduler.h/.cpp_ files. I moved its definition in WorkerThread.h and its implementation in WorkerThread.cpp. I did not change anything else.; This PR is based on #1927. It must be merged after.; There will be conflicts after #1997 is merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2002
https://github.com/sofa-framework/sofa/issues/2003:17,Modifiability,variab,variables,17,"See #1950. ; Two variables exist to define quads in a hexahedron, but the order is not the same:; ```; const unsigned int quadsInHexahedronArray[6][4] = {{0,1,2,3}, {4,7,6,5}, {1,0,4,5}, {1,5,6,2}, {2,6,7,3}, {0,3,7,4}};; const unsigned int quadsOrientationInHexahedronArray[6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};; ```; We don't know if there are some consequences to it. Perhaps only one variable could be used. Removing the other would avoid confusion.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2003
https://github.com/sofa-framework/sofa/issues/2003:426,Modifiability,variab,variable,426,"See #1950. ; Two variables exist to define quads in a hexahedron, but the order is not the same:; ```; const unsigned int quadsInHexahedronArray[6][4] = {{0,1,2,3}, {4,7,6,5}, {1,0,4,5}, {1,5,6,2}, {2,6,7,3}, {0,3,7,4}};; const unsigned int quadsOrientationInHexahedronArray[6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};; ```; We don't know if there are some consequences to it. Perhaps only one variable could be used. Removing the other would avoid confusion.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2003
https://github.com/sofa-framework/sofa/issues/2003:475,Safety,avoid,avoid,475,"See #1950. ; Two variables exist to define quads in a hexahedron, but the order is not the same:; ```; const unsigned int quadsInHexahedronArray[6][4] = {{0,1,2,3}, {4,7,6,5}, {1,0,4,5}, {1,5,6,2}, {2,6,7,3}, {0,3,7,4}};; const unsigned int quadsOrientationInHexahedronArray[6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};; ```; We don't know if there are some consequences to it. Perhaps only one variable could be used. Removing the other would avoid confusion.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2003
https://github.com/sofa-framework/sofa/pull/2004:578,Availability,failure,failures,578,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/pull/2004:627,Availability,failure,failures,627,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/pull/2004:197,Security,Certificate,Certificate,197,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/pull/2004:308,Security,certificate,certificate-of-origin-dco,308,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/pull/2004:573,Testability,test,test,573,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/pull/2004:622,Testability,test,test,622,"Red alert on the CI ! Fix it now. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004
https://github.com/sofa-framework/sofa/issues/2005:38,Availability,avail,available,38,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005
https://github.com/sofa-framework/sofa/issues/2005:257,Deployability,update,update,257,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005
https://github.com/sofa-framework/sofa/issues/2005:495,Deployability,update,update,495,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005
https://github.com/sofa-framework/sofa/issues/2005:357,Safety,detect,detect,357,"A mechanism of component state is now available while it is still unused and the API is not spread over the code base. We could work on generalizing it : delegating all functions (init, addForce etc) to make sure it uses the componentState.; Then, internal update of component would be possible and check in the scene graph of each component would allow to detect issues and prevent from crashes. Initially, this issue was only focused on ""Deprecate the doUpdateInternal"" : this API of internal update in BaseObjects should be removed and callbacks should be spread instead. As noticed in #1979",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2005
https://github.com/sofa-framework/sofa/pull/2006:633,Availability,failure,failures,633,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2006:682,Availability,failure,failures,682,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2006:252,Security,Certificate,Certificate,252,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2006:363,Security,certificate,certificate-of-origin-dco,363,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2006:628,Testability,test,test,628,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2006:677,Testability,test,test,677,"Master is failing on a missing header for std::swap_ranges (which is in `<algorithm>` ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2006
https://github.com/sofa-framework/sofa/pull/2007:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2007:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2007:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2007:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2007:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2007:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2007
https://github.com/sofa-framework/sofa/pull/2009:807,Availability,failure,failures,807,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2009:856,Availability,failure,failures,856,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2009:426,Security,Certificate,Certificate,426,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2009:537,Security,certificate,certificate-of-origin-dco,537,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2009:802,Testability,test,test,802,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2009:851,Testability,test,test,851,"Initially, I wanted to differentiate the functions from the broad phase, from the functions from the narrow phase, in the header file.; `void selfCollision (TriangleOctreeModel * cm1);` has been removed since it is not implemented. Other modifications are minor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2009
https://github.com/sofa-framework/sofa/pull/2010:2713,Availability,failure,failures,2713,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2762,Availability,failure,failures,2762,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:862,Modifiability,inherit,inheriting,862,"# This pull request. I introduce a new component: `BruteForceBroadPhase`. This component should not be confused with `BruteForceDetection`. `BruteForceDetection` is two components at once: a broad phase and a narrow phase. I extracted the broad phase code from `BruteForceDetection` and put it in `BruteForceBroadPhase`. `BruteForceBroadPhase` is only a broad phase. There is no narrow phase code inside. The broad phase code extracted from `BruteForceDetection` is taken in #1999. Looking at `RayTraceDetection`, it is also a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:1102,Modifiability,inherit,inherit,1102,"eDetection` is two components at once: a broad phase and a narrow phase. I extracted the broad phase code from `BruteForceDetection` and put it in `BruteForceBroadPhase`. `BruteForceBroadPhase` is only a broad phase. There is no narrow phase code inside. The broad phase code extracted from `BruteForceDetection` is taken in #1999. Looking at `RayTraceDetection`, it is also a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:1568,Modifiability,inherit,inherit,1568," a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; __________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2099,Safety,detect,detection,2099,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2332,Security,Certificate,Certificate,2332,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2443,Security,certificate,certificate-of-origin-dco,2443,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2708,Testability,test,test,2708,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:2757,Testability,test,test,2757,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2010:1694,Usability,clear,clearer,1694,"aceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010
https://github.com/sofa-framework/sofa/pull/2011:576,Availability,failure,failures,576,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2011:625,Availability,failure,failures,625,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2011:195,Security,Certificate,Certificate,195,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2011:306,Security,certificate,certificate-of-origin-dco,306,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2011:571,Testability,test,test,571,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2011:620,Testability,test,test,620,"The link to the doc was broken. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2011
https://github.com/sofa-framework/sofa/pull/2012:114,Availability,avail,available,114,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:830,Availability,failure,failures,830,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:879,Availability,failure,failures,879,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:221,Integrability,depend,dependencies,221,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:449,Security,Certificate,Certificate,449,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:560,Security,certificate,certificate-of-origin-dco,560,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:825,Testability,test,test,825,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2012:874,Testability,test,test,874,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012
https://github.com/sofa-framework/sofa/pull/2013:652,Availability,failure,failures,652,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/pull/2013:701,Availability,failure,failures,701,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/pull/2013:271,Security,Certificate,Certificate,271,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/pull/2013:382,Security,certificate,certificate-of-origin-dco,382,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/pull/2013:647,Testability,test,test,647,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/pull/2013:696,Testability,test,test,696,"This method is not needed anymore in the TopologyHandler mechanism. . Remove this call from all components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2013
https://github.com/sofa-framework/sofa/issues/2014:139,Energy Efficiency,adapt,adapt,139,"For now, the LCPConstraintSolver only allows to use one _mu_ friction coefficient common for all object interactions.; It would be nice to adapt the API to allow for one _mu_ for each object.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2014
https://github.com/sofa-framework/sofa/issues/2014:139,Modifiability,adapt,adapt,139,"For now, the LCPConstraintSolver only allows to use one _mu_ friction coefficient common for all object interactions.; It would be nice to adapt the API to allow for one _mu_ for each object.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2014
https://github.com/sofa-framework/sofa/pull/2015:748,Availability,failure,failures,748,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2015:797,Availability,failure,failures,797,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2015:367,Security,Certificate,Certificate,367,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2015:478,Security,certificate,certificate-of-origin-dco,478,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2015:743,Testability,test,test,743,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2015:792,Testability,test,test,792,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015
https://github.com/sofa-framework/sofa/pull/2016:614,Availability,failure,failures,614,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2016:663,Availability,failure,failures,663,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2016:233,Security,Certificate,Certificate,233,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2016:344,Security,certificate,certificate-of-origin-dco,344,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2016:609,Testability,test,test,609,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2016:658,Testability,test,test,658,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016
https://github.com/sofa-framework/sofa/pull/2017:618,Availability,failure,failures,618,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:667,Availability,failure,failures,667,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:40,Performance,multi-thread,multi-threaded,40,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:237,Security,Certificate,Certificate,237,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:348,Security,certificate,certificate-of-origin-dco,348,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:613,Testability,test,test,613,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2017:662,Testability,test,test,662,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017
https://github.com/sofa-framework/sofa/pull/2018:801,Availability,failure,failures,801,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2018:850,Availability,failure,failures,850,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2018:420,Security,Certificate,Certificate,420,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2018:531,Security,certificate,certificate-of-origin-dco,531,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2018:796,Testability,test,test,796,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2018:845,Testability,test,test,845,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018
https://github.com/sofa-framework/sofa/pull/2020:617,Availability,failure,failures,617,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/pull/2020:666,Availability,failure,failures,666,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/pull/2020:236,Security,Certificate,Certificate,236,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/pull/2020:347,Security,certificate,certificate-of-origin-dco,347,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/pull/2020:612,Testability,test,test,612,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/pull/2020:661,Testability,test,test,661,"Small fix for GenericWidgets additional closing brackets (issue #2019 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2020
https://github.com/sofa-framework/sofa/issues/2021:608,Deployability,update,update,608,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:619,Deployability,install,installation,619,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:154,Integrability,depend,dependency,154,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:196,Modifiability,config,configure,196,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:304,Modifiability,plugin,plugin,304,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:425,Modifiability,Config,Config,425,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:883,Modifiability,config,config,883,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:522,Testability,test,tested,522,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/issues/2021:580,Usability,simpl,simple,580,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021
https://github.com/sofa-framework/sofa/pull/2022:647,Availability,failure,failures,647,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:696,Availability,failure,failures,696,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:58,Deployability,configurat,configuration,58,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:58,Modifiability,config,configuration,58,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:266,Security,Certificate,Certificate,266,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:377,Security,certificate,certificate-of-origin-dco,377,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:642,Testability,test,test,642,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/pull/2022:691,Testability,test,test,691,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022
https://github.com/sofa-framework/sofa/issues/2023:14,Modifiability,plugin,plugins,14,"/applications/plugins/Xitact/ITPDriver.h: line 109 vs ITPDriver.cpp: line 89. code:. , operation(true) // should be below; , contactReached(false)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2023
https://github.com/sofa-framework/sofa/pull/2024:799,Availability,failure,failures,799,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2024:848,Availability,failure,failures,848,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2024:418,Security,Certificate,Certificate,418,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2024:529,Security,certificate,certificate-of-origin-dco,529,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2024:794,Testability,test,test,794,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2024:843,Testability,test,test,843,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024
https://github.com/sofa-framework/sofa/pull/2025:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2025:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2025:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2025:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2025:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2025:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025
https://github.com/sofa-framework/sofa/pull/2026:841,Availability,failure,failures,841,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2026:890,Availability,failure,failures,890,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2026:460,Security,Certificate,Certificate,460,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2026:571,Security,certificate,certificate-of-origin-dco,571,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2026:836,Testability,test,test,836,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2026:885,Testability,test,test,885,"ParticleSink was not checking if the topology pointer used was valid before using it in the TopologyHandler.; Moreover init method was not checking if the topology is also dynamic which is a requirement to remove points. A second check more general in TopologyHandler will be done in a second PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026
https://github.com/sofa-framework/sofa/pull/2027:659,Availability,failure,failures,659,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/pull/2027:708,Availability,failure,failures,708,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/pull/2027:278,Security,Certificate,Certificate,278,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/pull/2027:389,Security,certificate,certificate-of-origin-dco,389,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/pull/2027:654,Testability,test,test,654,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/pull/2027:703,Testability,test,test,703,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027
https://github.com/sofa-framework/sofa/issues/2028:166,Availability,error,error,166,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:530,Availability,Down,Downgrading,530,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:50,Deployability,upgrade,upgrade,50,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:371,Deployability,install,installed,371,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:406,Deployability,Install,Installer,406,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:472,Deployability,configurat,configuration,472,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:798,Deployability,configurat,configuration,798,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:172,Integrability,message,message,172,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:643,Integrability,depend,dependencies,643,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:472,Modifiability,config,configuration,472,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/issues/2028:798,Modifiability,config,configuration,798,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028
https://github.com/sofa-framework/sofa/pull/2029:544,Availability,failure,failures,544,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2029:593,Availability,failure,failures,593,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2029:163,Security,Certificate,Certificate,163,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2029:274,Security,certificate,certificate-of-origin-dco,274,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2029:539,Testability,test,test,539,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2029:588,Testability,test,test,588,"______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2029
https://github.com/sofa-framework/sofa/pull/2030:2317,Availability,failure,failures,2317,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:2366,Availability,failure,failures,2366,"a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
https://github.com/sofa-framework/sofa/pull/2030:660,Modifiability,inherit,inherits,660,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030
